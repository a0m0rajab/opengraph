var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.842,1,2.122]],["body/modules/AppModule.html",[0,1.242,1,4.203,2,1.406,3,2.159,4,3.081,5,3.081,6,3.548,7,0.031,8,3.548,9,2.714,10,3.548,11,2.35,12,1.798,13,1.522,14,0.325,15,0.325,16,0.349,17,3.677,18,2.617,19,1.102,20,3.677,21,0.625,22,4.805,23,4.484,24,2.395,25,3.129,26,1.299,27,4.026,28,2.688,29,3.677,30,3.677,31,4.805,32,3.677,33,3.677,34,3.677,35,3.512,36,3.677,37,3.129,38,3.081,39,3.129,40,3.081,41,3.081,42,2.617,43,1.698,44,5.352,45,0.951,46,1.029,47,2.395,48,2.568,49,2.568,50,3.677,51,3.677,52,3.677,53,1.716,54,3.677,55,2.688,56,3.677,57,3.081,58,3.677,59,0.744,60,3.677,61,3.677,62,3.677,63,3.677,64,3.677,65,3.677,66,3.677,67,3.677,68,3.677,69,3.677,70,3.677,71,3.677,72,3.677,73,3.677,74,3.677,75,3.677,76,3.677,77,3.677,78,3.677,79,3.081,80,3.677,81,3.677,82,3.677,83,2.395,84,2.688,85,1.406,86,1.966,87,0.37,88,0.625,89,0.022,90,0.022]],["title/interfaces/DbInsight.html",[91,0.412,92,1.741]],["body/interfaces/DbInsight.html",[7,0.03,14,0.374,15,0.374,16,0.276,59,1.21,87,0.426,89,0.024,90,0.024,91,0.665,92,2.809,93,1.618,94,2.263,95,3.095,96,0.655,97,1.255,98,4.003,99,1.59,100,5.009,101,5.009,102,2.112,103,5.009,104,2.924,105,4.37,106,1.582,107,1.099,108,1.957,109,3.348,110,3.893,111,1.467,112,3.547,113,3.547,114,3.095]],["title/interfaces/DbReaction.html",[91,0.412,115,1.914]],["body/interfaces/DbReaction.html",[7,0.03,14,0.435,15,0.435,16,0.321,87,0.495,89,0.026,90,0.026,91,0.622,93,1.88,94,2.63,96,0.761,97,1.374,106,1.549,107,0.977,115,3.381,116,4.122,117,6.288,118,6.288]],["title/interfaces/DbRepo.html",[91,0.412,119,2.382]],["body/interfaces/DbRepo.html",[7,0.03,14,0.339,15,0.339,16,0.251,87,0.386,89,0.023,90,0.023,91,0.486,93,1.469,94,2.053,96,0.594,97,1.18,99,1.492,106,1.57,107,1.121,108,2.046,114,4.218,119,3.614,120,3.219,121,2.331,122,5.77,123,5.77,124,3.39,125,5.77,126,5.77,127,4.835,128,2.593,129,5.77,130,5.77,131,5.77,132,5.77,133,2.822,134,5.77,135,5.77]],["title/interfaces/DbUserHighlight.html",[91,0.412,136,1.914]],["body/interfaces/DbUserHighlight.html",[7,0.03,14,0.37,15,0.37,16,0.273,87,0.421,89,0.024,90,0.024,91,0.529,93,1.599,94,2.236,96,0.647,97,1.246,98,3.877,99,1.539,104,2.911,105,4.352,106,1.615,107,1.104,109,3.039,111,1.552,136,3.066,137,1.171,138,3.506,139,5.953,140,2.465,141,3.498,142,5.953,143,3.877,144,2.675,145,2.354]],["title/interfaces/DbUserInsightRepo.html",[91,0.412,110,2.122]],["body/interfaces/DbUserInsightRepo.html",[7,0.03,14,0.391,15,0.391,16,0.289,59,0.897,87,0.445,89,0.025,90,0.025,91,0.683,92,2.368,93,1.693,94,2.368,95,3.238,96,0.685,97,1.29,98,4.055,99,1.61,100,3.711,101,3.711,102,1.565,103,3.711,104,2.166,105,3.238,106,1.566,107,1.057,108,1.994,109,2.889,110,3.798,111,1.487,112,5.088,113,5.088,114,4.439,121,1.91]],["title/modules/GithubModule.html",[0,0.842,146,1.593]],["body/modules/GithubModule.html",[0,1.451,2,1.802,3,2.521,7,0.03,11,2.744,12,2.306,13,1.952,14,0.416,15,0.416,16,0.308,18,2.306,19,0.953,21,0.801,86,2.999,87,0.474,88,0.801,89,0.026,90,0.026,146,3.176,147,3.95,148,3.95,149,3.95,150,2.18,151,4.715,152,4.702,153,4.715]],["title/injectables/GithubService.html",[150,1.065,154,0.842]],["body/injectables/GithubService.html",[7,0.031,14,0.302,15,0.302,16,0.223,19,1.026,21,0.58,24,2.224,37,3.36,38,2.861,55,2.497,59,1.044,87,0.343,88,0.58,89,0.021,90,0.021,96,0.528,97,1.092,106,1.485,107,0.876,111,1.442,121,1.823,137,1.542,150,1.496,154,1.183,155,1.825,156,2.861,157,1.69,158,5.16,159,2.476,160,1.894,161,1.881,162,4.029,163,4.029,164,6.14,165,1.384,166,3.415,167,4.618,168,2.449,169,4.575,170,2.318,171,4.575,172,2.379,173,3.415,174,2.445,175,2.136,176,2.688,177,4.575,178,3.415,179,2.238,180,1.496,181,3.415,182,1.67,183,1.67,184,1.542,185,4.575,186,3.415,187,3.833,188,2.445,189,2.136,190,1.825,191,4.575,192,3.415,193,3.415,194,3.415,195,3.415,196,2.224,197,3.415,198,3.415,199,3.415,200,1.827,201,2.224,202,1.207,203,2.224,204,2.224,205,2.224,206,2.006,207,2.98,208,3.589,209,3.415,210,1.687,211,4.575,212,1.334,213,3.415,214,2.688,215,3.415,216,1.534,217,3.415,218,3.415,219,3.415]],["title/controllers/HealthController.html",[220,0.778,221,2.122]],["body/controllers/HealthController.html",[7,0.031,14,0.317,15,0.317,16,0.234,19,0.955,21,0.61,23,4.433,24,2.34,28,2.626,79,3.01,83,3.082,84,4.272,85,1.373,87,0.361,88,0.61,89,0.022,90,0.022,96,0.556,111,0.858,157,1.679,160,1.959,161,1.987,165,1.087,168,1.959,175,1.959,176,2.78,212,1.224,220,0.858,221,3.082,222,3.01,223,2.34,224,6.001,225,6.118,226,6.001,227,3.082,228,3.593,229,4.732,230,3.662,231,3.006,232,3.304,233,4.732,234,3.593,235,3.593,236,4.732,237,3.593,238,4.732,239,4.732,240,4.732,241,5.291,242,4.732,243,4.732,244,3.446,245,3.446,246,2.34,247,2.34,248,3.593,249,3.593,250,3.593,251,3.593,252,3.593,253,3.593,254,3.082,255,4.732,256,4.732,257,3.593,258,3.593,259,3.593,260,3.593,261,3.593,262,3.593,263,4.732,264,3.593,265,3.593,266,3.593,267,3.593,268,3.593,269,3.593,270,3.593,271,3.593,272,3.593,273,3.593,274,3.593,275,3.593,276,3.593,277,3.593,278,3.593,279,3.593]],["title/modules/HealthModule.html",[0,0.842,280,2.382]],["body/modules/HealthModule.html",[0,1.488,2,1.88,7,0.03,14,0.435,15,0.435,16,0.321,18,2.406,19,1.036,21,0.836,27,4.821,28,3.596,85,2.199,87,0.495,88,0.836,89,0.026,90,0.026,221,3.972,280,4.206,281,4.92,282,4.92]],["title/controllers/HighlightCardController.html",[220,0.778,283,2.122]],["body/controllers/HighlightCardController.html",[7,0.031,14,0.257,15,0.257,16,0.19,19,0.875,21,0.495,42,3.064,48,3.011,53,1.24,59,0.83,85,1.113,87,0.293,88,0.495,89,0.019,90,0.019,96,0.45,99,1.575,107,0.922,108,1.704,111,0.695,121,1.449,124,3.53,140,2.594,144,1.308,157,0.815,160,1.698,161,1.704,165,0.881,168,1.698,170,1.843,175,1.698,180,1.684,184,1.147,196,1.896,200,1.436,202,1.449,210,1.552,212,1.227,214,2.409,220,0.695,223,1.896,227,2.671,230,3.355,244,2.671,245,3.091,246,1.896,247,1.896,254,2.671,283,2.671,284,1.227,285,1.896,286,2.44,287,4.747,288,5.431,289,2.912,290,4.451,291,4.232,292,2.44,293,4.101,294,3.766,295,3.766,296,3.355,297,3.766,298,3.322,299,2.192,300,2.44,301,3.77,302,2.671,303,3.849,304,2.129,305,2.998,306,2.998,307,2.129,308,2.789,309,2.44,310,4.317,311,2.129,312,2.912,313,2.912,314,2.44,315,2.998,316,2.671,317,2.129,318,2.129,319,3.47,320,2.129,321,2.129,322,2.998,323,2.44,324,2.44,325,2.912,326,2.129,327,2.129,328,2.129,329,3.977,330,2.998,331,3.977,332,2.998,333,2.998,334,3.47,335,2.998,336,2.129,337,2.321,338,1.113,339,2.912,340,2.912,341,1.711,342,2.44,343,1.711,344,2.129,345,2.129,346,2.129,347,3.436,348,2.998,349,1.814,350,1.814,351,1.969,352,4.101,353,2.129,354,2.912,355,2.129,356,2.44,357,2.998,358,2.998,359,2.998,360,2.44,361,1.113,362,2.998,363,2.998,364,2.671,365,2.129,366,2.129,367,2.129,368,1.896,369,2.129,370,2.129]],["title/interfaces/HighlightCardData.html",[91,0.412,371,2.122]],["body/interfaces/HighlightCardData.html",[7,0.031,14,0.215,15,0.215,16,0.279,19,1.047,21,0.413,26,0.858,43,0.858,45,0.93,46,0.68,48,1.923,53,0.735,59,0.728,87,0.244,88,0.413,89,0.016,90,0.016,91,0.307,93,0.928,96,0.376,97,0.859,99,1.108,102,0.858,104,2.81,106,1.433,107,0.976,108,1.816,111,1.131,115,1.427,128,1.925,133,2.095,136,1.427,137,1.198,140,1.489,141,1.427,143,3.664,144,2.379,145,1.006,150,1.4,154,0.93,157,1.414,159,1.616,161,1.432,165,0.735,172,2.268,174,1.298,180,1.4,184,1.198,188,1.298,189,1.961,190,1.298,200,1.956,202,1.514,210,2.016,212,1.225,216,1.616,220,0.58,284,0.628,299,1.298,337,1.188,338,0.928,349,1.637,350,1.637,351,0.928,361,2.024,371,2.79,372,1.091,373,2.379,374,3.664,375,2.929,376,3.219,377,4.201,378,1.188,379,1.188,380,2.095,381,1.759,382,1.188,383,1.188,384,1.188,385,1.188,386,1.188,387,1.4,388,1.091,389,1.188,390,2.113,391,1.188,392,1.489,393,1.188,394,2.79,395,1.582,396,1.582,397,2.035,398,1.188,399,2.343,400,2.035,401,2.035,402,1.489,403,1.188,404,2.035,405,3.014,406,2.035,407,2.035,408,2.035,409,2.035,410,2.035,411,2.035,412,2.035,413,2.035,414,2.035,415,2.095,416,2.113,417,2.035,418,2.035,419,2.035,420,2.035,421,3.014,422,2.035,423,2.035,424,1.427,425,1.427,426,1.427,427,2.035,428,1.582,429,1.091,430,1.091,431,0.928,432,1.091,433,1.188,434,0.928,435,1.188,436,3.589,437,2.095,438,1.188,439,1.188,440,1.188,441,2.035,442,1.188,443,2.035,444,1.427,445,2.035,446,1.427,447,1.759,448,1.759,449,1.759,450,1.759,451,1.759,452,1.759,453,1.616,454,1.188,455,1.091,456,1.188,457,1.188,458,1.188,459,1.188,460,1.616,461,1.759,462,1.759,463,1.375,464,1.759,465,1.188,466,1.188,467,1.188,468,1.188,469,1.188,470,1.006,471,1.188,472,1.188,473,1.188,474,1.188,475,1.188,476,1.091,477,2.035,478,1.188,479,1.188,480,1.759,481,1.188,482,1.188,483,2.035,484,2.035,485,3.014,486,2.035,487,2.343,488,2.035,489,1.188,490,1.188,491,1.188,492,1.582,493,1.582,494,1.582,495,1.427,496,1.188,497,1.188,498,1.091,499,2.035,500,1.188]],["title/modules/HighlightCardModule.html",[0,0.842,6,1.914]],["body/modules/HighlightCardModule.html",[0,1.387,2,1.672,3,2.41,6,3.847,7,0.031,9,2.838,11,2.623,12,2.14,13,1.811,14,0.386,15,0.386,16,0.378,18,2.623,19,1.072,21,0.743,25,3.493,26,1.546,45,1.131,46,1.224,47,2.849,48,3.1,85,2.05,86,2.867,87,0.44,88,0.743,89,0.025,90,0.025,140,2.221,146,3.088,283,3.778,284,1.131,337,3.088,338,1.672,501,3.666,502,3.666,503,4.375,504,3.198,505,3.198,506,3.198]],["title/injectables/HighlightCardService.html",[154,0.842,337,1.593]],["body/injectables/HighlightCardService.html",[7,0.031,14,0.201,15,0.201,16,0.269,19,1.036,21,0.387,26,0.804,43,0.804,45,0.886,46,0.637,48,3.232,53,0.688,59,1.086,87,0.229,88,0.387,89,0.016,90,0.016,91,0.288,96,0.352,97,0.818,99,1.272,102,0.804,104,2.528,106,1.095,107,0.835,108,1.858,111,1.234,115,1.337,121,1.738,128,1.852,133,2.015,136,1.337,137,1.153,140,1.419,141,1.337,143,3.203,144,1.852,145,0.942,150,1.753,154,0.886,155,1.216,157,1.58,159,2.06,160,1.419,161,1.791,165,1.036,168,2.14,170,2.21,172,1.898,174,1.216,175,1.898,176,1.337,180,1.689,182,1.113,183,1.113,184,1.283,188,1.216,189,1.419,190,1.216,200,1.943,202,0.804,210,1.993,212,1.186,216,1.54,220,0.543,284,1.387,299,1.216,337,1.676,338,0.87,349,1.575,350,1.575,351,0.87,361,1.975,371,2.986,372,1.023,373,1.852,374,3.203,375,2.451,376,2.694,377,3.778,378,1.113,379,1.113,380,2.528,381,1.676,382,1.113,383,1.113,384,1.113,385,1.113,386,1.113,387,1.753,388,1.023,389,1.113,390,2.013,391,1.113,392,1.419,393,1.113,394,2.684,395,1.482,396,1.482,397,1.907,398,1.113,399,2.231,400,1.907,401,1.907,402,1.419,403,1.676,404,3.453,405,3.842,406,1.907,407,1.907,408,1.907,409,1.907,410,1.907,411,1.907,412,1.907,413,1.907,414,1.907,415,2.015,416,2.013,417,1.907,418,1.907,419,1.907,420,1.907,421,2.871,422,1.907,423,1.907,424,1.337,425,1.337,426,1.337,427,1.907,428,1.482,429,1.023,430,1.023,431,0.87,432,1.023,433,1.113,434,0.87,435,2.015,436,4.121,437,2.015,438,1.113,439,1.113,440,1.113,441,1.907,442,1.113,443,1.907,444,1.337,445,1.907,446,1.337,447,1.676,448,1.676,449,1.676,450,1.676,451,1.676,452,1.676,453,1.54,454,1.113,455,1.023,456,1.113,457,1.113,458,1.113,459,1.113,460,1.54,461,1.676,462,1.676,463,1.31,464,1.676,465,1.113,466,1.113,467,1.113,468,1.113,469,1.113,470,0.942,471,1.113,472,1.113,473,1.113,474,1.113,475,2.015,476,1.023,477,1.907,478,1.113,479,1.113,480,1.676,481,1.113,482,1.113,483,1.907,484,1.907,485,2.871,486,1.907,487,2.231,488,1.907,489,1.113,490,1.113,491,1.113,492,1.482,493,1.482,494,1.482,495,1.337,496,1.113,497,1.113,498,1.023,499,3.453,500,1.113,507,1.664,508,2.871,509,1.907,510,2.276,511,2.276,512,2.276,513,1.482,514,2.276,515,2.276,516,2.276,517,2.276]],["title/controllers/InsightCardController.html",[220,0.778,518,2.122]],["body/controllers/InsightCardController.html",[7,0.031,14,0.258,15,0.258,16,0.19,19,0.876,21,0.496,42,3.065,49,3.014,53,1.242,59,0.831,85,1.116,87,0.293,88,0.496,89,0.019,90,0.019,96,0.452,99,1.575,107,0.923,108,1.705,111,0.697,121,1.451,124,3.532,144,1.311,157,0.817,160,1.701,161,1.705,165,0.883,168,1.701,170,1.846,175,1.701,180,1.686,184,1.149,196,1.901,200,1.437,202,1.451,210,1.554,212,1.229,214,2.413,220,0.697,223,1.901,227,2.675,230,3.359,244,2.675,245,3.095,246,1.901,247,1.901,254,2.675,284,1.229,285,1.901,290,4.454,291,4.234,292,2.445,294,3.77,295,3.77,296,3.359,297,3.77,298,3.323,299,2.195,300,2.445,301,3.772,302,2.675,303,3.851,304,2.134,305,3.003,306,3.003,307,2.134,308,2.792,309,2.445,310,4.321,311,2.134,314,2.445,315,3.003,316,2.675,317,2.134,318,2.134,319,3.474,320,2.134,321,2.134,322,3.003,323,2.445,324,2.445,326,2.134,327,2.134,328,2.134,329,3.982,330,3.003,331,3.982,332,3.003,333,3.003,334,3.474,335,3.003,336,2.134,338,1.116,341,1.715,342,2.445,343,1.715,344,2.134,345,2.134,346,2.134,347,3.441,348,3.003,349,1.817,350,1.817,351,1.971,353,2.134,355,2.134,356,2.445,357,3.003,358,3.003,359,3.003,360,2.445,361,1.116,362,3.003,363,3.003,364,2.675,365,2.134,366,2.134,367,2.134,368,1.901,369,2.134,370,2.134,518,2.675,519,2.134,520,4.753,521,5.436,522,2.919,523,4.108,524,4.581,525,2.919,526,2.919,527,2.919,528,2.324,529,2.919,530,2.919,531,4.108,532,2.919]],["title/interfaces/InsightCardData.html",[91,0.412,533,2.122]],["body/interfaces/InsightCardData.html",[7,0.031,14,0.235,15,0.235,16,0.295,19,1.048,21,0.453,26,0.942,43,0.942,45,0.996,46,0.746,49,2.058,53,0.806,59,1.002,87,0.268,88,0.453,89,0.018,90,0.018,91,0.337,92,1.425,93,1.019,96,0.412,97,0.919,99,1.169,102,2.079,104,2.878,106,1.379,107,0.929,108,1.497,111,1.182,137,0.746,140,1.104,145,1.104,150,1.477,154,0.996,157,1.469,159,1.73,161,1.497,165,0.806,174,1.425,180,1.477,184,1.385,200,1.97,202,1.597,207,1.736,210,1.999,212,1.28,216,1.73,220,0.636,284,0.689,338,1.019,349,1.728,350,1.728,351,1.019,361,2.091,372,1.198,373,1.73,378,1.304,379,1.304,380,2.21,381,1.883,382,1.304,383,1.304,384,1.304,385,1.304,386,1.304,387,1.477,388,1.198,392,1.594,393,1.304,394,2.943,395,1.736,398,1.304,399,1.736,402,1.594,403,1.304,416,2.655,428,1.736,429,1.198,430,1.198,431,1.019,432,1.198,433,1.304,434,1.019,435,1.304,437,1.883,438,1.304,439,1.304,440,1.304,442,1.304,446,1.566,447,1.883,448,1.883,449,1.883,450,1.883,451,1.883,452,1.883,453,1.73,454,1.304,455,1.198,456,1.304,457,1.304,458,1.304,459,1.304,460,1.73,461,1.883,462,1.883,463,1.472,464,1.883,465,1.304,466,1.304,467,1.304,468,1.304,469,1.304,470,1.104,471,1.304,472,1.304,473,1.304,474,1.304,475,1.304,476,1.198,478,1.304,479,1.304,480,1.883,481,1.304,482,1.304,487,1.736,489,1.304,490,1.304,491,1.304,492,1.736,493,1.736,494,1.736,495,1.566,496,1.304,497,1.304,498,1.198,500,1.304,528,1.304,533,2.943,534,4.222,535,3.999,536,3.85,537,2.233,538,1.736,539,2.233,540,1.736,541,3.226,542,1.736,543,2.233,544,3.226,545,3.226,546,1.736,547,2.233,548,2.233,549,2.233,550,2.233,551,2.233,552,2.233,553,2.233,554,2.233,555,2.233,556,1.949,557,2.233,558,2.233,559,2.233,560,2.233,561,2.233,562,2.233,563,2.233,564,2.233,565,2.815,566,2.233,567,2.233,568,2.233,569,3.787,570,2.233,571,2.233,572,2.233,573,2.233,574,2.233,575,2.233,576,2.233]],["title/modules/InsightCardModule.html",[0,0.842,8,1.914]],["body/modules/InsightCardModule.html",[0,1.389,2,1.675,3,2.413,7,0.031,8,3.848,9,2.839,11,2.626,12,2.143,13,1.815,14,0.387,15,0.387,16,0.379,18,2.626,19,1.073,21,0.744,25,3.497,26,1.549,45,1.133,46,1.226,47,2.854,49,2.87,85,2.052,86,2.87,87,0.441,88,0.744,89,0.025,90,0.025,146,3.09,284,1.133,338,1.675,504,3.204,505,3.204,506,3.204,518,3.781,524,3.925,528,3.09,577,3.672,578,4.383,579,3.672]],["title/injectables/InsightCardService.html",[154,0.842,528,1.593]],["body/injectables/InsightCardService.html",[7,0.031,14,0.212,15,0.212,16,0.278,19,1.028,21,0.408,26,0.849,43,0.849,45,0.923,46,0.672,49,3.265,53,0.727,59,1.16,87,0.242,88,0.408,89,0.016,90,0.016,91,0.304,92,1.285,96,0.372,97,0.852,99,1.302,102,1.864,104,2.579,106,1.125,107,0.855,108,1.812,111,1.259,121,1.779,137,0.672,140,0.995,145,0.995,150,1.785,154,0.923,155,1.285,157,1.603,159,2.117,160,1.478,161,1.812,165,1.079,168,2.184,170,2.262,174,1.285,175,1.951,176,1.412,180,1.724,182,1.175,183,1.175,184,1.408,200,1.949,202,0.849,207,1.565,210,1.958,212,1.218,216,1.604,220,0.574,284,1.412,338,0.919,349,1.627,350,1.627,351,0.919,361,2.016,372,1.08,373,1.604,378,1.175,379,1.175,380,2.579,381,1.745,382,1.175,383,1.175,384,1.175,385,1.175,386,1.175,387,1.785,388,1.08,392,1.478,393,1.175,394,2.772,395,1.565,398,1.175,399,1.565,402,1.478,403,1.745,416,2.501,428,1.565,429,1.08,430,1.08,431,0.919,432,1.08,433,1.175,434,0.919,435,2.082,437,1.745,438,1.175,439,1.175,440,1.175,442,1.175,446,1.412,447,1.745,448,1.745,449,1.745,450,1.745,451,1.745,452,1.745,453,1.604,454,1.175,455,1.08,456,1.175,457,1.175,458,1.175,459,1.175,460,1.604,461,1.745,462,1.745,463,1.364,464,1.745,465,1.175,466,1.175,467,1.175,468,1.175,469,1.175,470,0.995,471,1.175,472,1.175,473,1.175,474,1.175,475,2.082,476,1.08,478,1.175,479,1.175,480,1.745,481,1.175,482,1.175,487,1.565,489,1.175,490,1.175,491,1.175,492,1.565,493,1.565,494,1.565,495,1.412,496,1.175,497,1.175,498,1.08,500,1.175,507,1.757,508,2.014,509,2.014,513,1.565,528,1.745,533,3.068,534,3.68,535,3.112,537,2.014,538,1.565,539,2.014,540,1.565,541,2.99,542,1.565,543,3.567,544,3.947,545,2.99,546,1.565,547,2.014,548,2.014,549,2.014,550,2.014,551,2.014,552,2.014,553,2.014,554,2.014,555,2.014,556,1.757,557,2.014,558,2.014,559,2.014,560,2.014,561,2.014,562,2.014,563,2.014,564,2.014,565,2.609,566,2.014,567,2.014,568,2.014,569,4.217,570,2.014,571,2.014,572,2.014,573,2.014,574,2.014,575,2.014,576,3.567,580,3.569,581,2.403,582,2.403,583,2.403,584,2.403,585,2.403,586,2.403]],["title/interfaces/RequiresUpdateMeta.html",[91,0.412,402,1.349]],["body/interfaces/RequiresUpdateMeta.html",[7,0.031,14,0.228,15,0.228,16,0.29,19,1.021,21,0.439,26,0.914,43,1.331,45,0.974,46,0.723,53,0.782,59,0.988,87,0.447,88,0.439,89,0.017,90,0.017,91,0.476,93,0.988,96,0.4,97,0.899,99,0.974,102,1.724,106,1.394,107,0.829,108,1.139,109,2.893,111,1.165,128,1.692,133,1.842,137,1.243,145,2.02,150,1.452,154,0.974,157,1.451,159,1.692,161,1.476,165,0.782,172,1.07,179,2.648,180,1.452,184,1.515,188,1.382,189,2.02,190,1.382,200,1.941,201,1.684,202,1.724,203,2.452,204,2.452,205,1.684,206,1.519,210,1.939,212,1.149,216,1.692,220,0.617,284,0.669,349,2.136,350,2.136,351,1.983,361,2.268,372,1.162,373,1.996,375,2.772,376,3.181,378,1.264,379,1.264,380,2.172,381,1.842,382,1.264,383,1.264,384,1.264,385,1.264,386,1.264,387,1.452,388,1.162,389,1.264,390,2.213,391,1.264,392,1.559,393,1.264,398,1.264,402,1.839,403,1.264,415,1.264,424,1.519,425,2.61,426,1.519,429,1.162,430,1.162,431,0.988,432,1.162,433,1.264,434,0.988,435,1.264,437,2.172,438,1.264,439,1.264,440,1.264,442,1.264,444,1.519,447,1.842,448,1.842,449,1.842,450,1.842,451,1.842,452,1.842,453,1.692,454,1.264,455,1.162,456,1.264,457,1.264,458,1.264,459,1.264,460,1.692,461,1.842,462,1.842,463,1.439,464,1.842,465,1.264,466,1.264,467,1.264,468,1.264,469,1.264,470,1.07,471,1.264,472,1.264,473,1.264,474,1.264,475,1.264,476,1.162,478,1.264,479,1.264,480,1.842,481,1.264,482,1.264,489,1.264,490,1.264,491,1.264,496,1.264,497,1.264,498,1.162,500,1.264,587,1.519,588,1.89,589,1.264,590,2.213,591,1.89,592,1.89,593,3.567,594,1.162,595,1.89,596,1.684,597,1.89,598,1.89,599,1.89,600,1.89,601,1.89,602,1.89,603,1.89,604,1.89,605,1.89,606,1.89,607,1.89,608,1.89,609,1.89,610,1.89,611,1.89,612,1.89,613,1.89,614,1.89,615,1.89,616,1.89,617,1.89,618,1.89,619,3.247,620,1.89,621,1.89,622,1.89,623,2.61,624,1.89,625,2.753,626,1.89,627,1.89,628,1.684,629,1.684,630,1.89,631,1.89]],["title/modules/S3FileStorageModule.html",[0,0.842,9,1.464]],["body/modules/S3FileStorageModule.html",[0,1.441,2,1.782,3,2.504,7,0.03,9,2.911,11,2.726,12,2.28,13,1.93,14,0.412,15,0.412,16,0.403,18,2.28,19,0.947,21,0.792,45,1.206,46,1.304,86,2.979,87,0.469,88,0.792,89,0.025,90,0.025,152,4.67,387,2.177,388,2.095,632,3.906,633,3.906,634,3.906,635,3.408,636,4.662]],["title/injectables/S3FileStorageService.html",[154,0.842,387,1.065]],["body/injectables/S3FileStorageService.html",[7,0.031,14,0.24,15,0.24,16,0.418,19,0.898,21,0.461,24,1.768,39,1.768,40,2.275,41,2.275,45,1.181,46,1.653,53,0.821,55,1.985,57,3.269,59,1.07,87,0.273,88,0.461,89,0.018,90,0.018,96,0.42,97,0.931,106,1.516,107,0.935,111,1.192,121,1.869,145,2.189,154,1.009,155,1.451,157,1.397,160,1.615,161,1.856,165,1.18,167,4.183,168,2.403,170,2.376,175,2.067,180,1.897,182,1.908,183,1.908,184,1.479,200,1.18,210,1.632,212,1.424,299,2.826,374,1.768,387,1.275,429,2.548,476,2.781,498,1.753,513,1.768,596,2.974,635,4.321,637,2.275,638,4.567,639,4.567,640,5.505,641,4.567,642,4.567,643,4.567,644,4.567,645,2.715,646,2.715,647,2.715,648,2.715,649,2.715,650,2.715,651,2.715,652,2.715,653,2.715,654,4.567,655,4.992,656,5.288,657,2.715,658,4.567,659,2.715,660,2.715,661,2.715,662,4.992,663,3.902,664,2.275,665,2.715,666,2.715,667,2.715,668,2.715,669,2.715,670,2.715,671,2.715,672,2.715,673,2.715,674,2.715,675,2.715,676,1.985,677,2.715,678,2.275,679,2.715,680,2.275,681,2.715,682,2.275,683,2.715,684,2.275,685,2.715,686,4.567,687,4.992,688,4.183,689,4.992,690,4.992,691,4.567,692,6.136,693,4.567,694,4.567,695,4.567,696,4.567,697,3.902,698,2.715,699,2.715,700,2.715,701,2.715]],["title/controllers/UserCardController.html",[220,0.778,702,2.122]],["body/controllers/UserCardController.html",[7,0.031,14,0.263,15,0.263,16,0.194,19,0.883,21,0.505,42,3.075,43,2.004,53,1.259,59,0.843,85,1.137,87,0.299,88,0.505,89,0.019,90,0.019,96,0.46,106,1.354,107,0.93,111,0.71,121,1.471,124,3.421,137,1.689,144,1.337,157,0.832,160,1.723,161,1.716,165,0.9,168,1.723,170,1.87,175,1.723,179,2.848,180,1.7,184,1.164,196,1.937,200,1.656,202,1.471,210,1.57,212,1.242,214,2.445,220,0.71,223,1.937,227,2.711,230,3.387,244,2.711,245,3.127,246,1.937,247,1.937,254,2.711,284,1.242,285,1.937,290,4.471,291,4.257,294,3.802,295,3.802,296,3.387,297,3.802,298,3.334,299,2.225,301,3.792,302,2.711,303,3.694,304,2.174,305,3.043,306,3.043,307,2.174,308,2.821,311,2.174,315,3.043,316,2.711,317,2.174,318,2.174,319,3.51,320,2.174,321,2.174,322,3.043,326,2.174,327,2.174,328,2.174,330,3.043,332,3.043,333,3.043,334,3.51,335,3.043,336,2.174,338,1.137,341,1.748,343,1.748,344,2.174,345,2.174,346,2.174,348,3.043,349,1.835,350,1.835,351,1.988,353,2.174,355,2.174,357,3.043,358,3.043,359,3.043,361,1.137,362,3.043,363,3.043,364,2.711,365,2.174,366,2.174,367,2.174,368,1.937,369,2.174,370,2.174,594,2.157,702,2.711,703,2.492,704,4.802,705,5.474,706,2.975,707,2.975,708,4.162,709,2.975,710,2.975,711,2.975,712,2.975,713,2.975,714,2.975,715,2.975,716,2.975,717,2.975,718,4.162,719,4.162,720,4.162,721,4.162,722,2.975,723,2.975]],["title/interfaces/UserCardData.html",[91,0.412,590,1.914]],["body/interfaces/UserCardData.html",[7,0.031,14,0.226,15,0.226,16,0.288,19,1.019,21,0.435,26,0.905,43,1.322,45,0.967,46,0.717,53,0.775,59,1.128,87,0.444,88,0.435,89,0.017,90,0.017,91,0.473,93,0.979,96,0.396,97,0.893,99,1.336,102,1.969,106,1.432,107,0.878,108,1.469,109,1.999,111,1.16,128,1.681,133,1.829,137,1.236,145,1.549,150,1.444,154,0.967,157,1.446,159,1.681,161,1.469,165,0.775,172,1.06,179,2.639,180,1.444,184,1.51,188,1.369,189,2.234,190,1.369,200,1.938,201,1.668,202,1.322,203,2.436,204,2.436,205,1.668,206,1.505,210,1.935,212,1.142,216,1.681,220,0.612,284,0.662,349,1.857,350,1.857,351,1.43,361,2.13,372,1.151,373,2.425,375,3.053,376,3.423,378,1.253,379,1.253,380,2.161,381,1.829,382,1.253,383,1.253,384,1.253,385,1.253,386,1.253,387,1.444,388,1.151,389,1.253,390,2.198,391,1.253,392,1.549,393,1.253,398,1.253,402,1.549,403,1.253,415,1.253,424,1.505,425,2.596,426,1.505,429,1.151,430,1.151,431,0.979,432,1.151,433,1.253,434,0.979,435,1.253,437,2.161,438,1.253,439,1.253,440,1.253,442,1.253,444,1.505,447,1.829,448,1.829,449,1.829,450,1.829,451,1.829,452,1.829,453,1.681,454,1.253,455,1.151,456,1.253,457,1.253,458,1.253,459,1.253,460,1.681,461,1.829,462,1.829,463,1.43,464,1.829,465,1.253,466,1.253,467,1.253,468,1.253,469,1.253,470,1.06,471,1.253,472,1.253,473,1.253,474,1.253,475,1.253,476,1.151,478,1.253,479,1.253,480,1.829,481,1.253,482,1.253,489,1.253,490,1.253,491,1.253,496,1.253,497,1.253,498,1.151,500,1.253,587,1.505,588,1.872,589,1.253,590,2.596,591,1.872,592,1.872,593,4.073,594,1.151,595,1.872,596,1.668,597,1.872,598,1.872,599,1.872,600,1.872,601,1.872,602,1.872,603,1.872,604,1.872,605,1.872,606,1.872,607,1.872,608,1.872,609,1.872,610,1.872,611,1.872,612,1.872,613,1.872,614,1.872,615,1.872,616,1.872,617,1.872,618,1.872,619,3.23,620,1.872,621,1.872,622,1.872,623,2.596,624,1.872,625,2.734,626,1.872,627,1.872,628,1.668,629,1.668,630,1.872,631,1.872]],["title/modules/UserCardModule.html",[0,0.842,10,1.914]],["body/modules/UserCardModule.html",[0,1.389,2,1.675,3,2.413,7,0.031,9,2.839,10,3.848,11,2.626,12,2.143,13,1.815,14,0.387,15,0.387,16,0.379,18,2.626,19,1.073,21,0.744,25,3.497,26,1.549,43,1.897,45,1.133,46,1.226,47,2.854,85,2.052,86,2.87,87,0.441,88,0.744,89,0.025,90,0.025,137,1.502,146,3.09,284,1.133,338,1.675,504,3.204,505,3.204,506,3.204,594,2.839,702,3.781,724,3.672,725,4.383,726,3.672]],["title/injectables/UserCardService.html",[154,0.842,594,1.464]],["body/injectables/UserCardService.html",[7,0.031,14,0.207,15,0.207,16,0.273,19,0.999,21,0.398,26,0.828,43,2.148,45,0.905,46,0.655,53,0.708,59,1.152,87,0.421,88,0.398,89,0.016,90,0.016,91,0.443,96,0.362,97,0.836,99,0.905,102,1.644,106,1.463,107,0.846,108,1.059,109,1.871,111,1.247,121,1.759,128,1.573,133,1.712,137,1.173,145,1.449,150,1.77,154,0.905,155,1.252,157,1.592,159,2.09,160,1.449,161,1.802,165,1.059,168,2.163,170,2.237,172,0.97,175,1.926,176,1.376,179,2.834,180,1.708,182,1.145,183,1.145,184,1.515,188,1.252,189,1.926,190,1.252,200,1.917,201,1.525,202,1.237,203,2.28,204,2.28,205,1.525,206,1.376,210,1.894,212,1.084,216,1.573,220,0.559,284,1.4,349,1.778,350,1.778,351,1.338,361,2.07,372,1.052,373,1.884,375,2.661,376,3.069,378,1.145,379,1.145,380,2.555,381,1.712,382,1.145,383,1.145,384,1.145,385,1.145,386,1.145,387,1.77,388,1.052,389,1.145,390,2.057,391,1.145,392,1.449,393,1.145,398,1.145,402,1.449,403,1.712,415,1.145,424,1.376,425,2.463,426,1.376,429,1.052,430,1.052,431,0.895,432,1.052,433,1.145,434,0.895,435,2.05,437,2.05,438,1.145,439,1.145,440,1.145,442,1.145,444,1.376,447,1.712,448,1.712,449,1.712,450,1.712,451,1.712,452,1.712,453,1.573,454,1.145,455,1.052,456,1.145,457,1.145,458,1.145,459,1.145,460,1.573,461,1.712,462,1.712,463,1.338,464,1.712,465,1.145,466,1.145,467,1.145,468,1.145,469,1.145,470,0.97,471,1.145,472,1.145,473,1.145,474,1.145,475,2.05,476,1.052,478,1.145,479,1.145,480,1.712,481,1.145,482,1.145,489,1.145,490,1.145,491,1.145,496,1.145,497,1.145,498,1.052,500,1.145,507,1.712,513,1.525,587,1.376,588,1.712,589,1.145,590,2.733,591,1.712,592,1.712,593,3.401,594,1.573,595,3.065,596,1.525,597,1.712,598,1.712,599,1.712,600,1.712,601,1.712,602,1.712,603,1.712,604,1.712,605,1.712,606,1.712,607,1.712,608,1.712,609,1.712,610,1.712,611,1.712,612,1.712,613,1.712,614,1.712,615,1.712,616,1.712,617,1.712,618,1.712,619,3.64,620,1.712,621,1.712,622,1.712,623,2.463,624,1.712,625,2.559,626,1.712,627,1.712,628,1.525,629,1.525,630,1.712,631,3.065,727,3.501,728,2.342,729,2.342,730,2.342,731,2.342,732,2.342,733,2.342,734,2.342,735,2.342]],["title/changelog.html",[736,1.776,737,1.994,738,2.285]],["body/changelog.html",[0,0.696,3,1.519,7,0.03,16,0.253,42,1.896,45,1.175,59,0.92,83,1.088,89,0.012,90,0.012,99,0.696,102,0.951,107,0.284,127,3.807,128,1.742,137,1.271,140,1.114,141,0.981,144,1.209,172,1.881,179,2.432,183,0.817,184,0.467,187,2.832,206,0.981,212,0.874,231,1.438,286,2.255,296,1.753,298,2.554,301,2.525,302,1.753,308,0.981,341,2.808,364,1.088,431,1.625,434,1.029,460,0.75,463,0.638,519,1.967,546,2.202,565,1.221,589,1.316,623,1.581,628,1.753,629,1.753,676,1.967,688,2.255,736,1.753,738,2.255,739,1.67,740,2.691,741,3.877,742,2.255,743,2.691,744,2.832,745,5.362,746,4.252,747,2.691,748,6.062,749,6.062,750,4.544,751,2.691,752,2.691,753,2.691,754,2.691,755,5.79,756,5.27,757,2.691,758,2.691,759,3.322,760,5.133,761,2.691,762,3.248,763,2.255,764,2.691,765,2.691,766,4.252,767,1.67,768,4.779,769,2.691,770,1.67,771,2.691,772,5.133,773,2.255,774,6.372,775,2.691,776,2.691,777,4.166,778,2.691,779,4.004,780,3.381,781,2.691,782,2.255,783,2.691,784,4.779,785,4.544,786,2.691,787,2.691,788,3.248,789,2.691,790,2.691,791,2.691,792,2.691,793,2.691,794,2.691,795,3.877,796,2.691,797,2.691,798,2.691,799,4.004,800,2.691,801,2.691,802,2.691,803,2.691,804,2.691,805,3.877,806,2.691,807,2.691,808,2.691,809,2.691,810,2.691,811,2.691,812,2.691,813,2.691,814,6.358,815,3.381,816,1.67,817,1.67,818,3.381,819,3.381,820,4.779,821,2.691,822,2.691,823,5.27,824,2.255,825,2.691,826,2.691,827,3.108,828,2.691,829,3.877,830,3.562,831,2.691,832,2.255,833,2.691,834,2.691,835,2.691,836,3.877,837,3.877,838,3.248,839,3.248,840,2.255,841,2.691,842,2.832,843,2.691,844,2.255,845,4.599,846,3.877,847,2.691,848,2.691,849,2.691,850,2.255,851,2.691,852,2.691,853,2.834,854,2.691,855,2.832,856,3.877,857,2.255,858,2.691,859,3.807,860,3.807,861,3.248,862,2.691,863,2.255,864,2.255,865,2.832,866,2.691,867,2.691,868,4.252,869,3.381,870,2.691,871,2.691,872,2.691,873,2.691,874,2.691,875,2.691,876,2.691,877,2.255,878,2.691,879,2.691,880,3.877,881,2.691,882,2.691,883,2.691,884,1.967,885,2.255,886,2.691,887,2.691,888,2.691,889,2.691,890,2.691,891,2.255,892,2.691,893,2.691,894,3.877,895,3.248,896,2.691,897,2.691,898,2.255,899,2.691,900,2.691,901,2.255,902,2.691,903,2.691,904,2.691,905,3.877,906,2.691,907,2.691,908,2.691,909,2.691,910,2.691,911,2.691,912,1.967,913,2.691,914,2.691,915,2.691,916,2.255,917,3.381,918,3.381,919,2.691,920,2.691,921,2.691,922,2.255,923,2.691,924,5.27,925,1.67,926,1.67,927,1.67,928,1.67,929,1.67,930,1.67,931,2.691,932,2.691,933,1.67,934,1.67,935,1.67,936,1.399,937,1.67,938,1.67,939,1.67,940,2.691,941,1.67,942,1.67,943,1.399,944,2.832,945,1.67,946,1.67,947,1.67,948,1.67,949,1.67,950,1.67,951,1.67,952,1.399,953,1.67,954,1.67,955,1.67,956,1.67,957,3.381,958,1.67,959,1.67,960,1.67,961,1.67,962,1.67,963,1.67,964,2.691,965,1.67,966,1.67,967,1.67,968,1.67,969,1.67,970,1.67,971,1.67,972,1.67,973,1.67,974,1.67,975,2.691,976,1.67,977,1.67,978,1.221,979,1.67,980,1.67,981,1.67,982,1.67,983,1.67,984,2.691,985,1.67,986,1.67,987,1.67,988,1.67,989,1.67,990,1.67,991,1.67,992,1.67,993,1.67,994,1.399,995,1.67,996,1.67,997,1.67,998,1.399,999,1.399,1000,1.67,1001,1.67,1002,1.67,1003,2.832,1004,1.67,1005,1.67,1006,1.67,1007,1.67,1008,1.67,1009,1.67,1010,2.691,1011,1.67,1012,2.832,1013,1.67,1014,1.221,1015,1.67,1016,1.67,1017,1.67,1018,1.399,1019,1.67,1020,1.67,1021,2.255,1022,1.399,1023,1.67,1024,1.67,1025,1.399,1026,1.67,1027,1.67,1028,1.67,1029,1.67,1030,1.399,1031,1.67,1032,1.67,1033,1.67,1034,1.67,1035,1.399,1036,1.67,1037,1.67]],["title/coverage.html",[1038,3.713]],["body/coverage.html",[7,0.031,16,0.326,35,2.348,37,2.092,39,2.092,43,2.139,46,0.899,48,3.105,49,3.105,89,0.02,90,0.02,91,0.777,92,1.717,94,3.008,95,3.209,107,0.546,110,2.092,115,1.887,116,2.692,119,2.348,120,2.692,136,1.887,137,0.899,138,2.692,150,1.05,154,1.455,156,2.692,162,2.348,163,2.348,184,0.899,220,1.283,221,2.092,222,2.692,283,2.092,284,1.706,285,3.257,337,1.571,371,2.092,372,2.672,387,1.05,389,1.571,391,1.571,392,1.33,396,2.092,402,1.33,415,3.286,463,1.228,518,2.092,528,1.571,533,2.092,538,2.092,540,2.092,542,2.092,587,1.887,589,1.571,590,1.887,594,1.443,635,2.348,637,2.692,702,2.092,759,2.348,912,2.348,1038,2.692,1039,3.213,1040,3.213,1041,2.692,1042,5.455,1043,6.532,1044,2.692,1045,2.692,1046,2.692,1047,4.39,1048,3.213,1049,5.627,1050,3.213,1051,3.213,1052,5.375,1053,3.678,1054,2.692,1055,2.692,1056,2.692,1057,3.213,1058,2.692,1059,3.213,1060,4.39,1061,2.692,1062,4.19,1063,2.692,1064,4.19,1065,4.19,1066,2.692,1067,2.692,1068,2.692,1069,2.692,1070,4.19,1071,2.692,1072,2.692,1073,3.678,1074,2.692,1075,2.692,1076,2.692,1077,3.678,1078,2.692,1079,2.692,1080,2.692,1081,3.213,1082,3.213,1083,3.213]],["title/miscellaneous/functions.html",[978,2.862,1084,1.776]],["body/miscellaneous/functions.html",[7,0.027,89,0.027,90,0.027,96,0.801,978,3.783,1056,4.336,1058,5.217,1084,3.37,1085,5.175]],["title/index.html",[96,0.422,736,1.776,737,1.994]],["body/index.html",[7,0.029,13,1.249,15,0.267,16,0.197,42,2.056,45,0.78,53,0.913,59,0.611,83,1.965,84,3.537,89,0.019,90,0.019,91,0.382,121,1.066,137,1.176,140,1.249,157,0.844,172,1.249,182,2.056,189,1.741,208,3.584,231,3.046,232,3.075,298,1.613,308,1.773,316,1.965,341,3.348,343,1.773,430,1.356,431,2,432,2.352,434,1.607,495,1.773,524,2.206,556,2.206,589,1.476,664,2.528,703,2.528,742,3.523,762,3.523,763,3.523,777,4.054,779,4.054,788,2.528,827,2.206,832,2.528,838,2.528,839,4.385,840,2.528,842,3.523,844,2.528,845,3.523,850,2.528,853,4.166,855,2.528,857,2.528,859,2.528,860,2.528,861,2.528,863,2.528,864,4.054,865,2.528,877,3.523,885,2.528,895,2.528,901,3.523,916,2.528,922,4.611,936,2.528,952,2.528,994,2.528,1018,4.054,1021,4.054,1022,2.528,1030,4.054,1035,3.523,1042,2.528,1086,3.074,1087,2.528,1088,3.018,1089,4.385,1090,3.018,1091,3.018,1092,4.205,1093,3.018,1094,4.205,1095,3.018,1096,3.018,1097,3.018,1098,4.839,1099,6.342,1100,4.205,1101,4.611,1102,2.528,1103,3.018,1104,3.018,1105,3.018,1106,3.018,1107,3.018,1108,3.018,1109,3.018,1110,6.135,1111,3.018,1112,3.018,1113,2.528,1114,2.528,1115,2.528,1116,3.018,1117,4.385,1118,3.018,1119,2.528,1120,3.018,1121,3.018,1122,3.018,1123,3.018,1124,4.839,1125,3.018,1126,3.018,1127,3.018,1128,3.018,1129,3.018,1130,3.018,1131,4.205,1132,3.018,1133,3.018,1134,3.018,1135,3.018,1136,3.018,1137,3.018,1138,3.018,1139,3.018,1140,3.018,1141,3.018,1142,3.018,1143,3.018,1144,3.018,1145,3.018,1146,3.018,1147,3.018,1148,3.018,1149,3.018,1150,3.018,1151,3.018,1152,3.018,1153,3.018,1154,3.018,1155,3.018,1156,3.018,1157,3.018,1158,3.018,1159,3.018,1160,3.018,1161,3.018,1162,3.018,1163,3.018,1164,4.205,1165,3.018,1166,4.205,1167,3.018,1168,4.205,1169,3.018,1170,3.523,1171,3.018,1172,3.018,1173,3.018,1174,3.018,1175,3.018,1176,3.018,1177,3.018,1178,3.018,1179,3.018,1180,3.018,1181,3.018,1182,3.018,1183,3.018,1184,3.018,1185,3.018,1186,3.018,1187,4.205,1188,3.018,1189,4.839,1190,3.018,1191,3.018,1192,3.018,1193,3.018,1194,3.018,1195,3.018,1196,3.018,1197,3.018,1198,3.018,1199,3.018,1200,3.523,1201,3.018,1202,3.018,1203,4.205,1204,4.205,1205,3.018,1206,3.018,1207,2.528,1208,4.205,1209,3.018,1210,3.018,1211,3.018,1212,3.018,1213,3.018,1214,3.018,1215,3.018,1216,3.018,1217,3.018,1218,3.018,1219,3.018,1220,3.018,1221,3.018,1222,3.018,1223,4.205,1224,3.018,1225,3.018,1226,3.018,1227,3.018,1228,3.018,1229,3.018,1230,3.018,1231,3.018,1232,3.018,1233,1.965,1234,2.206]],["title/license.html",[736,1.776,737,1.994,1233,1.776]],["body/license.html",[7,0.025,13,1.821,89,0.025,90,0.025,231,2.351,232,2.584,434,2.057,745,3.685,759,3.215,782,3.685,1101,3.685,1102,5.457,1113,4.509,1119,4.871,1207,4.509,1233,2.864,1234,3.215,1235,5.814,1236,4.398,1237,5.381,1238,4.398,1239,4.398,1240,4.398,1241,4.398,1242,4.398,1243,4.398,1244,4.398,1245,4.398,1246,4.398,1247,4.398,1248,4.398,1249,4.398,1250,4.398,1251,4.398,1252,4.398,1253,4.398,1254,4.398,1255,4.398,1256,5.381,1257,4.398,1258,4.398,1259,4.398,1260,4.398,1261,4.398,1262,4.398,1263,5.381,1264,5.381,1265,4.398,1266,4.398,1267,4.398,1268,4.398,1269,4.398,1270,4.398,1271,4.398,1272,4.398,1273,4.398,1274,4.398,1275,4.398,1276,4.398,1277,4.398,1278,3.685,1279,4.398,1280,4.398,1281,4.398,1282,4.398,1283,4.398,1284,4.398,1285,4.398,1286,4.398,1287,4.398,1288,4.398,1289,4.398,1290,4.398,1291,4.398,1292,4.398,1293,4.398,1294,4.398]],["title/modules.html",[2,1.694]],["body/modules.html",[1,3.191,2,1.873,6,2.879,7,0.026,8,2.879,9,2.202,10,2.879,89,0.026,90,0.026,146,2.397,280,3.582,453,2.913,1295,6.482,1296,6.482,1297,6.543,1298,4.9,1299,4.9]],["title/overview.html",[1300,3.713]],["body/overview.html",[1,4.234,2,1.597,3,2.342,4,3.5,5,3.5,6,3.794,7,0.031,8,3.794,9,2.901,10,3.794,11,2.549,12,2.043,13,1.729,85,1.597,89,0.024,90,0.024,93,1.597,146,3.131,147,3.5,148,3.5,149,3.5,150,2.07,155,2.233,337,2.779,387,2.07,470,1.729,501,3.5,502,3.5,528,2.779,577,3.5,579,3.5,594,2.553,632,3.5,633,3.5,634,3.5,724,3.5,726,3.5,884,3.053,1014,3.053,1300,3.5,1301,3.5]],["title/properties.html",[97,0.935,944,2.285]],["body/properties.html",[7,0.03,42,2.387,89,0.026,90,0.026,97,1.165,124,2.868,189,2.021,231,2.609,232,2.868,298,2.609,744,4.09,1025,4.09,1086,3.568,1087,4.09,1233,3.179,1234,3.568,1278,4.09,1302,4.881,1303,4.881,1304,4.881,1305,4.881,1306,5.728,1307,4.881,1308,4.881,1309,4.881,1310,4.881,1311,4.881,1312,4.881,1313,4.881,1314,4.881,1315,4.881]],["title/miscellaneous/variables.html",[208,2.549,1084,1.776]],["body/miscellaneous/variables.html",[7,0.031,14,0.096,35,1.368,37,1.219,39,1.219,59,1.048,89,0.009,90,0.009,96,0.167,98,0.704,99,1.119,102,1.688,106,1.427,107,0.184,108,1.007,128,0.486,133,2.2,141,1.731,143,1.219,144,1.324,162,1.368,163,1.368,172,1.22,174,2.21,179,1.441,182,2.606,183,2.606,189,0.775,200,1.183,207,1.919,208,1.61,212,0.861,214,2.429,231,0.578,232,1.099,284,1.235,303,0.704,343,1.099,368,0.704,373,2.088,374,1.219,375,1.948,377,2.665,389,0.915,391,0.915,392,0.775,396,1.219,415,2.394,416,1.099,431,0.413,446,2.807,455,0.841,463,0.715,470,1.978,519,0.791,534,2.154,535,1.368,538,1.219,540,1.219,542,1.219,546,3.424,587,1.099,589,0.915,623,2.807,676,0.791,678,0.906,680,4.52,682,0.906,684,0.906,773,4.268,799,0.906,824,2.469,827,0.791,830,4.003,853,0.791,884,3.492,891,2.072,898,0.906,912,1.368,943,0.906,998,0.906,999,0.906,1003,0.906,1012,1.568,1014,3.724,1041,0.906,1044,0.906,1045,1.568,1046,0.906,1053,1.568,1054,1.568,1055,1.568,1061,0.906,1062,3.054,1063,0.906,1064,1.568,1065,2.79,1066,1.568,1067,1.568,1068,1.568,1069,2.79,1070,2.072,1071,1.568,1072,1.568,1073,2.469,1074,0.906,1075,1.568,1076,2.072,1077,1.568,1078,1.568,1079,0.906,1080,0.906,1084,0.704,1086,1.368,1089,0.906,1114,0.906,1115,0.906,1117,0.906,1170,0.906,1200,0.906,1301,4.34,1316,1.082,1317,2.473,1318,1.082,1319,1.871,1320,1.082,1321,1.082,1322,2.947,1323,1.082,1324,1.082,1325,2.473,1326,1.082,1327,1.082,1328,1.082,1329,1.082,1330,1.082,1331,1.082,1332,1.082,1333,1.082,1334,1.082,1335,1.082,1336,1.082,1337,1.082,1338,1.082,1339,1.082,1340,1.082,1341,1.082,1342,3.91,1343,1.082,1344,1.082,1345,1.082,1346,1.082,1347,1.082,1348,1.082,1349,1.082,1350,1.082,1351,6.025,1352,1.082,1353,1.082,1354,1.082,1355,1.082,1356,1.082,1357,1.082,1358,1.082,1359,1.871,1360,1.082,1361,1.082,1362,1.082,1363,3.645,1364,1.871,1365,1.082,1366,1.871,1367,1.082,1368,1.871,1369,1.082,1370,1.082,1371,1.871,1372,1.082,1373,1.871,1374,1.082,1375,1.082,1376,1.871,1377,1.082,1378,1.871,1379,1.082,1380,1.082,1381,1.082,1382,1.082,1383,1.082,1384,1.082,1385,1.082,1386,1.082,1387,1.082,1388,1.871,1389,1.082,1390,1.082,1391,1.082,1392,1.082,1393,1.082,1394,1.082,1395,1.082,1396,1.082,1397,1.082,1398,1.082,1399,1.082,1400,1.082,1401,1.082,1402,1.082,1403,1.082,1404,1.082,1405,1.871,1406,1.082,1407,1.082,1408,1.871,1409,1.082,1410,1.082,1411,1.871,1412,1.082,1413,1.082,1414,1.871,1415,1.082,1416,1.082,1417,1.871,1418,1.082,1419,1.871,1420,1.082,1421,1.871,1422,1.082,1423,1.082,1424,1.871,1425,1.082,1426,1.871,1427,1.082,1428,1.082,1429,1.871,1430,1.082,1431,1.871,1432,1.082,1433,1.082,1434,1.082,1435,1.082,1436,1.082,1437,1.082,1438,1.082,1439,1.082,1440,1.082,1441,1.082,1442,1.871,1443,1.082,1444,1.082,1445,1.082,1446,1.082,1447,1.871,1448,1.082,1449,1.082,1450,1.871,1451,1.082,1452,1.871,1453,1.082,1454,1.082,1455,1.082,1456,1.082,1457,1.082,1458,1.082,1459,1.082,1460,1.082,1461,1.082,1462,1.082,1463,1.082,1464,1.082,1465,1.082,1466,1.082,1467,1.082,1468,1.082,1469,1.082,1470,1.082,1471,1.082,1472,1.082,1473,1.082,1474,1.082,1475,1.871,1476,1.082,1477,1.871,1478,3.33,1479,3.33,1480,3.33,1481,2.947,1482,1.871,1483,2.473,1484,1.871,1485,3.33,1486,2.947,1487,1.082,1488,1.082,1489,1.082,1490,1.082,1491,1.082,1492,1.082,1493,1.082,1494,1.082,1495,1.082,1496,1.082,1497,1.082,1498,1.082,1499,1.082,1500,1.082,1501,1.082,1502,1.082,1503,1.082,1504,1.082,1505,1.082,1506,1.082,1507,1.082,1508,1.082,1509,1.082,1510,1.082,1511,1.082,1512,1.082,1513,1.082,1514,1.082,1515,1.082,1516,1.082,1517,1.871,1518,1.082,1519,1.082,1520,2.947,1521,1.082,1522,1.082,1523,1.082,1524,1.082,1525,1.082,1526,1.082,1527,1.082,1528,1.871,1529,1.871,1530,1.082,1531,1.871,1532,1.082,1533,1.082,1534,1.082,1535,1.082,1536,1.082,1537,1.082,1538,1.082,1539,1.082,1540,1.082,1541,1.082,1542,3.33,1543,1.082,1544,1.082,1545,1.871,1546,1.082,1547,1.871,1548,1.082,1549,2.473,1550,1.082,1551,1.082,1552,2.473,1553,1.082,1554,3.33,1555,2.947,1556,2.947,1557,1.871,1558,2.473,1559,1.871,1560,1.082,1561,1.871,1562,1.082,1563,1.871,1564,1.082,1565,1.082,1566,1.082,1567,1.082,1568,1.082,1569,1.082,1570,1.871,1571,1.871,1572,1.871,1573,1.082,1574,1.871,1575,1.082,1576,1.082,1577,1.082,1578,1.082,1579,1.871,1580,2.947,1581,1.871,1582,2.473,1583,1.871,1584,1.871,1585,1.871,1586,1.871,1587,1.871,1588,1.871,1589,1.871,1590,3.33,1591,1.082,1592,2.473,1593,1.871,1594,1.871,1595,1.082,1596,1.082,1597,1.082,1598,1.082,1599,1.082,1600,1.082,1601,2.947,1602,4.894,1603,2.473,1604,2.947,1605,3.33,1606,1.082,1607,1.871,1608,3.645,1609,1.082,1610,2.473,1611,1.082,1612,1.871,1613,2.947,1614,1.082,1615,2.473,1616,4.777,1617,1.871,1618,1.082,1619,1.871,1620,1.871,1621,1.082,1622,4.777,1623,1.082,1624,1.082,1625,1.082,1626,3.645,1627,1.082,1628,1.082,1629,1.082,1630,1.082,1631,1.871,1632,1.082,1633,1.871,1634,3.33,1635,1.082,1636,1.082,1637,1.082,1638,1.082,1639,1.871,1640,1.082,1641,1.082,1642,1.082,1643,1.082,1644,1.082,1645,1.082,1646,1.082,1647,1.082,1648,2.947,1649,1.082,1650,1.082,1651,1.082,1652,1.082,1653,1.082,1654,1.082,1655,1.871,1656,1.082,1657,1.082,1658,1.082,1659,1.082,1660,1.871,1661,1.082,1662,1.082,1663,2.473,1664,1.082,1665,1.082,1666,1.082,1667,1.082,1668,1.082,1669,5.094,1670,1.871,1671,1.082,1672,1.082,1673,3.33,1674,1.082,1675,1.082,1676,1.082,1677,1.082,1678,1.082,1679,1.082,1680,3.645,1681,4.135,1682,2.473,1683,1.082,1684,1.082,1685,1.871,1686,1.082,1687,1.871,1688,1.082,1689,1.871,1690,1.082,1691,1.082,1692,1.082,1693,1.082,1694,1.082,1695,1.082,1696,1.082,1697,1.082,1698,1.082,1699,2.947,1700,1.082,1701,1.082,1702,1.871,1703,2.947,1704,1.871,1705,1.082,1706,2.947,1707,1.871,1708,1.082,1709,1.871,1710,1.082,1711,1.082,1712,1.871,1713,1.082,1714,1.082,1715,1.871,1716,1.082,1717,3.91,1718,1.871,1719,1.871,1720,1.082,1721,1.871,1722,1.871,1723,1.082,1724,1.082,1725,1.082,1726,1.871,1727,1.082,1728,1.871,1729,1.871,1730,1.082,1731,1.082,1732,1.082,1733,1.082,1734,1.871,1735,1.082,1736,1.082,1737,1.082,1738,1.082,1739,1.871,1740,1.082,1741,1.082,1742,1.082,1743,1.082,1744,3.645,1745,1.082,1746,1.082,1747,1.871,1748,1.082,1749,1.082,1750,1.082,1751,1.082,1752,1.082,1753,1.082,1754,1.082,1755,1.082,1756,1.082,1757,1.871,1758,1.082,1759,1.082,1760,1.082,1761,1.082,1762,1.082,1763,1.082,1764,1.082,1765,1.082,1766,1.082,1767,1.082,1768,1.082,1769,1.871,1770,1.082,1771,1.082,1772,1.082,1773,1.082,1774,1.082,1775,1.082,1776,1.082,1777,1.082,1778,1.082,1779,1.082,1780,1.082,1781,1.082,1782,1.082,1783,1.082,1784,1.082,1785,1.082,1786,1.082,1787,2.473,1788,1.082,1789,2.947,1790,1.871,1791,1.082,1792,1.082,1793,1.082,1794,1.082,1795,1.082,1796,1.082,1797,1.082,1798,1.082,1799,1.082,1800,1.082,1801,1.082,1802,1.082,1803,1.082,1804,1.082,1805,1.082,1806,1.082,1807,1.082,1808,1.082,1809,1.082,1810,1.082,1811,1.082,1812,1.082,1813,1.082,1814,1.082,1815,1.082,1816,1.082,1817,1.082,1818,1.082,1819,1.082,1820,1.082,1821,1.082,1822,1.082,1823,1.082,1824,1.082,1825,1.082,1826,1.082,1827,1.082,1828,1.871,1829,1.082,1830,1.082,1831,1.082,1832,1.082,1833,1.871,1834,1.082,1835,1.082,1836,1.082,1837,1.082,1838,1.082,1839,1.082,1840,1.082,1841,1.082,1842,1.082,1843,1.082,1844,1.082,1845,1.082,1846,1.082,1847,1.082,1848,1.082,1849,1.082,1850,1.082,1851,1.082,1852,1.871,1853,1.082,1854,1.082,1855,2.947,1856,1.082,1857,1.082,1858,1.082,1859,1.082,1860,1.082,1861,1.082,1862,1.082,1863,1.082,1864,1.082,1865,1.082,1866,1.082,1867,1.082,1868,1.082,1869,1.082,1870,1.082,1871,1.082,1872,1.082,1873,1.871,1874,1.082,1875,2.473,1876,1.082,1877,1.082,1878,1.082,1879,1.082,1880,1.082,1881,1.082,1882,1.082,1883,1.082,1884,1.082,1885,1.082,1886,1.082,1887,1.082,1888,1.082,1889,1.082,1890,1.082,1891,1.082,1892,1.082,1893,1.082,1894,4.135,1895,1.082,1896,1.082,1897,1.082,1898,1.082,1899,1.082,1900,1.082,1901,1.082,1902,1.082,1903,1.082,1904,1.082,1905,1.082,1906,1.082,1907,1.871,1908,3.33,1909,1.082,1910,1.082,1911,1.082,1912,3.645,1913,1.871,1914,1.871,1915,1.871,1916,1.082,1917,1.871,1918,1.871,1919,1.082,1920,1.871,1921,1.082,1922,1.082,1923,1.082,1924,1.082,1925,1.871,1926,1.082,1927,1.082,1928,1.871,1929,1.082,1930,1.082,1931,1.082,1932,1.082,1933,1.082]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":415,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.016",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.026",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.028",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.055",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.057",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.075",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.083",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.099",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.109",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.126",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.139",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.157",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.182",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.19",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.244",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.265",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.412",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.467",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.472",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":898,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["0.506",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.593",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.615",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.927",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.934",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["076ace0",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["077e473",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["08cead1",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":680,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":546,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0004",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7965",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9029",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100px",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["108",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":830,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["11.0",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1922",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2885",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3906",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.5582",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6209",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6223",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6557",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.7",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8652",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.9269",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":773,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["12.0",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2378",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3228",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3318",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3438",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.6543",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7115",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7344",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.8078",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":456,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["1200px",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.1192",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.2035",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.4627",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.5078",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.7",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.9996",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138a847",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["14.1",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4738",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.6",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.9",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1440px",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1454cbb",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.3",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.393",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.5735",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.8",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1555a25",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["16.0",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.2945",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c19.1764",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c8.60701",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6388",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.7",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["16px",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.2635",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6112",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6948",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c20.1986",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c7.70549",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.9",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["18.5479",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.8973",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18a3e23",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["19.1",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c11.2656",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c14.1434",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.3425",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.4301",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.6567",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.7929",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091c12.3443",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091l12",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.85l12.0731",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19043fc",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":446,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":744,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.4",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c14.9702",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c3.82903",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5zm6.73649",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["20.171",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c10.4922",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c14.9816",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.5",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.7157",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.9544",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":745,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21.1169c11.4093",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.1169c13.0971",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2031",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2388",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2886",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.318",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3516c11.7407",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3693c12.5003",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4132",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4238",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527c12.1193",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.5",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.9",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22px",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.0",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.1",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.8",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":469,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["235",{"_index":468,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["24",{"_index":824,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["24.0",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.3",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24bfb15",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.9",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["26.5",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.0",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e6cb05",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2xl",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":623,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["3.72621",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.80141",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":206,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["30.0",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":1115,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3047cec",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["31.6",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.8",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.5",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["34.1",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.4",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.0",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["36.0",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.0",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.1",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.6",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["38.1",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.7",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["39.0",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["3dc1a0a",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1301,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.8",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8236",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.1",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.3",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.4",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":449,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["41",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["41.0",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["42.2",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.6",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425px",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.0",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.1",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.2",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.4",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.5",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.9",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.5",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.3",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.5",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.6",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4748b98",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["48.7",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["49.5",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a434e6",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["4c15.1581",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c4.65746",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c7d29a",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xl",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4z",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1014,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5).join",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.052",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.38899",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.4",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.6",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.60482c10.8808",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.8",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.88043",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.9",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50.0",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":452,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["51",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["51.1",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.1",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.3",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52b97ed",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["53",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["53.6",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55.2",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.1",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.3",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57.2",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5797c54",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["58.5",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5846c42",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["58px",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.0",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.4",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5ae3704",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["5rem",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.38882",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.73649",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.8",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.0",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.2",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.6",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.2",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["627",{"_index":458,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["627px",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63.0",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.0",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.3",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64372f4",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["64px",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.0",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.3",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.8",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.1",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6893d90",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["68d0202",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["69.4",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.5",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6efe0e6",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":884,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.36118",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.4",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c10.5373",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c12.6094",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.94883",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.0",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.2",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.2",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["715e349",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72.0",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.2",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.3",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.0",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.3",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.9",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.4",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["778ad4e",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["78.0",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["792992e",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["7c6f199",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["7d82c0d",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541c11.6772",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c1",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c2.5",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c21.5",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c23",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.84185",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80px",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.2",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.7",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.9",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.3",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84.5",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.1",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.3",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.9",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8594508",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["86.5",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86.7",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.6",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.7",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.8",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8757519",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["88.2",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.3",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.6",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.9",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.0",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.7",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8a82a48",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["8b48513",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":470,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9.0",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.01844",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.02981",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.2",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.8",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.85656",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.2",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.3",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.1",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.4",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.8",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.9",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.2",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.4",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.6",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.0",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.2",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.4",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.5",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.9",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.0",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.1",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.7",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.8",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.0",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.2",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.3",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.8",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.0",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.4",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.5",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.8",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96px",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.0",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.1",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.3",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.6",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.9",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977df75",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["98.0",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.5",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.6",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.7",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.8",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.9",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.0",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.1",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.2",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.4",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.6",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.size",{"_index":612,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["a0e6d3f",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1262,"title":{},"body":{"license.html":{}}}],["acbe81a",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":413,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["access",{"_index":1147,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":682,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":700,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":1288,"title":{},"body":{"license.html":{}}}],["actions",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":845,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":1202,"title":{},"body":{"index.html":{}}}],["adding",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["adjust",{"_index":1199,"title":{},"body":{"index.html":{}}}],["adjustments",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["advised",{"_index":1164,"title":{},"body":{"index.html":{}}}],["ago",{"_index":630,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["ahmed",{"_index":1313,"title":{},"body":{"properties.html":{}}}],["amz",{"_index":363,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["and/or",{"_index":1254,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1173,"title":{},"body":{"index.html":{}}}],["api_domain=opengraph.opensauced.pizza",{"_index":1182,"title":{},"body":{"index.html":{}}}],["api_host=0.0.0.0",{"_index":1180,"title":{},"body":{"index.html":{}}}],["api_port=3005",{"_index":1181,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":331,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["apiconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":332,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinocontentresponse",{"_index":333,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinotfoundresponse",{"_index":334,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiokresponse",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apioperation",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiresponse",{"_index":335,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags(\"health",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"highlight",{"_index":340,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apitags(\"insight",{"_index":530,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["apitags(\"user",{"_index":716,"title":{},"body":{"controllers/UserCardController.html":{}}}],["app",{"_index":885,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":1177,"title":{},"body":{"index.html":{}}}],["application",{"_index":1018,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1292,"title":{},"body":{"license.html":{}}}],["array",{"_index":1126,"title":{},"body":{"index.html":{}}}],["array.from(object.values(langs)).sort((a",{"_index":609,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["asc",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":952,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":1244,"title":{},"body":{"license.html":{}}}],["async",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["atwa",{"_index":1315,"title":{},"body":{"properties.html":{}}}],["author",{"_index":1312,"title":{},"body":{"properties.html":{}}}],["author_login",{"_index":563,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["authorization",{"_index":197,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":1281,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1299,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":373,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1165,"title":{},"body":{"index.html":{}}}],["await",{"_index":210,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["awaits",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":297,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["aws",{"_index":664,"title":{},"body":{"injectables/S3FileStorageService.html":{},"index.html":{}}}],["axios",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":610,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b.size",{"_index":611,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b1f870c",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["b6abefa",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":466,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["backgroundimage",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["bee0e6e",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1193,"title":{},"body":{"index.html":{}}}],["being",{"_index":936,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":1224,"title":{},"body":{"index.html":{}}}],["beta",{"_index":1094,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["beta.opengraph.opensauced",{"_index":1096,"title":{},"body":{"index.html":{}}}],["beta@digital",{"_index":1095,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":1103,"title":{},"body":{"index.html":{}}}],["bio",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":374,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["body.length",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.slice(0",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":855,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["boolean",{"_index":109,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["bootstrap",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxshadow",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":1231,"title":{},"body":{"index.html":{}}}],["break",{"_index":1191,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1297,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1295,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":688,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{}}}],["bucketname",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":654,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1308,"title":{},"body":{"properties.html":{}}}],["build",{"_index":777,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":1236,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["c5a5fec",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":296,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["cached",{"_index":1167,"title":{},"body":{"index.html":{}}}],["caching",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":298,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["card.controller",{"_index":506,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.controller.ts",{"_index":285,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"coverage.html":{}}}],["card.controller.ts:31",{"_index":714,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:33",{"_index":325,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:41",{"_index":527,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.controller.ts:55",{"_index":710,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:57",{"_index":312,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:65",{"_index":525,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":504,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.service",{"_index":338,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{}}}],["card.service.ts",{"_index":372,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["card.service.ts:120",{"_index":581,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:123",{"_index":510,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:131",{"_index":729,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:150",{"_index":585,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:155",{"_index":515,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:159",{"_index":733,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:26",{"_index":580,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:34",{"_index":508,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{}}}],["card.service.ts:35",{"_index":727,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:42",{"_index":517,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:43",{"_index":735,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:81",{"_index":512,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:82",{"_index":583,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:89",{"_index":731,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.template",{"_index":398,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["card.template.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/highlight",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["card/insight",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["card/templates/highlight",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/insight",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/card",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/insight",{"_index":1070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/repo",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/user",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/tailwind.config.ts",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/user",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["cardfooter",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfooter(langs",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cards",{"_index":341,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["cardstylesetup",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":691,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["catching",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["cba7521",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["ccc8a96",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["cdn",{"_index":864,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdn.opensauced.pizzaother",{"_index":1172,"title":{},"body":{"index.html":{}}}],["cdncustomdomain",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1175,"title":{},"body":{"index.html":{}}}],["changed",{"_index":832,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":738,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":1222,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1241,"title":{},"body":{"license.html":{}}}],["charlimit",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charlimit).replace",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["checkhighlightsocialcard",{"_index":287,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkhighlightsocialcard(id",{"_index":289,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkin",{"_index":1205,"title":{},"body":{"index.html":{}}}],["checkinsightsocialcard",{"_index":520,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkinsightsocialcard(id",{"_index":522,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkrequiresupdate",{"_index":475,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["checkrequiresupdate(id",{"_index":509,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{}}}],["checkrequiresupdate(username",{"_index":728,"title":{},"body":{"injectables/UserCardService.html":{}}}],["checkusersocialcard",{"_index":704,"title":{},"body":{"controllers/UserCardController.html":{}}}],["checkusersocialcard(username",{"_index":706,"title":{},"body":{"controllers/UserCardController.html":{}}}],["churntotalcount",{"_index":122,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["cito",{"_index":1111,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1284,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["classes",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["clc",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["clip",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed_prs_count",{"_index":123,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["closes",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":147,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":148,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":149,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule",{"_index":501,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule_imports",{"_index":503,"title":{},"body":{"modules/HighlightCardModule.html":{}}}],["cluster_highlightcardmodule_providers",{"_index":502,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule",{"_index":577,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule_imports",{"_index":578,"title":{},"body":{"modules/InsightCardModule.html":{}}}],["cluster_insightcardmodule_providers",{"_index":579,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":632,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":633,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":634,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_usercardmodule",{"_index":724,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["cluster_usercardmodule_imports",{"_index":725,"title":{},"body":{"modules/UserCardModule.html":{}}}],["cluster_usercardmodule_providers",{"_index":726,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["code",{"_index":779,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codename",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":943,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["colors.util",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":1189,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commits",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":1194,"title":{},"body":{"index.html":{}}}],["community",{"_index":1215,"title":{},"body":{"index.html":{}}}],["company",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":1206,"title":{},"body":{"index.html":{}}}],["component",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["concept",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1261,"title":{},"body":{"license.html":{}}}],["config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":683,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":677,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":685,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":1143,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":167,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":865,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configured",{"_index":1178,"title":{},"body":{"index.html":{}}}],["connected",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1293,"title":{},"body":{"license.html":{}}}],["const",{"_index":200,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":165,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["constructor(config",{"_index":645,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":166,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":507,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["container",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":656,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1289,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1210,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1208,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":916,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["contributor",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors",{"_index":534,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["contributors.map",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors.ts",{"_index":1071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributorsreq",{"_index":557,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsreq.data.data",{"_index":561,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres",{"_index":560,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres.map",{"_index":562,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["controller",{"_index":220,"title":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"highlights",{"_index":339,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["controller(\"insights",{"_index":529,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["controller(\"users",{"_index":715,"title":{},"body":{"controllers/UserCardController.html":{}}}],["controllers",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":1217,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1256,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1113,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1235,"title":{},"body":{"license.html":{}}}],["correct",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":215,"title":{},"body":{"injectables/GithubService.html":{}}}],["count",{"_index":487,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["couple",{"_index":1198,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1038,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":98,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":681,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["curr",{"_index":412,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["custom",{"_index":863,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customprops",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["d84015b",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["d='m6.73649",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1285,"title":{},"body":{"license.html":{}}}],["dark",{"_index":891,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":461,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["data:image/svg+xml,%3csvg",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":202,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date((new",{"_index":204,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":600,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(updated_at",{"_index":428,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["date).getdate",{"_index":627,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate((new",{"_index":626,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate(today.getdate",{"_index":205,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["datesince",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":629,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["dbinsight",{"_index":92,"title":{"interfaces/DbInsight.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["dbreaction",{"_index":115,"title":{"interfaces/DbReaction.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbrepo",{"_index":119,"title":{"interfaces/DbRepo.html":{}},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["dbuserhighlight",{"_index":136,"title":{"interfaces/DbUserHighlight.html":{}},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbuserinsightrepo",{"_index":110,"title":{"interfaces/DbUserInsightRepo.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["dc9f3a4",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["dd096ca",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1246,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1294,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["defauls",{"_index":1159,"title":{},"body":{"index.html":{}}}],["default",{"_index":182,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1174,"title":{},"body":{"index.html":{}}}],["defined",{"_index":168,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["deleted_at",{"_index":139,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":1022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deployment",{"_index":842,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":124,"title":{},"body":{"interfaces/DbRepo.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"properties.html":{}}}],["design",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":1117,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev/usercards.ts",{"_index":1129,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1123,"title":{},"body":{"index.html":{}}}],["development",{"_index":853,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devit",{"_index":1163,"title":{},"body":{"index.html":{}}}],["differently",{"_index":1179,"title":{},"body":{"index.html":{}}}],["digital",{"_index":859,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitalocean",{"_index":1150,"title":{},"body":{"index.html":{}}}],["digitaloceanconfig",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":433,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["direction",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discord.find",{"_index":1218,"title":{},"body":{"index.html":{}}}],["disk",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_percentage=0.7",{"_index":1185,"title":{},"body":{"index.html":{}}}],["disk_size",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size=100",{"_index":1186,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":827,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/local",{"_index":1131,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1252,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":998,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["do_spaces_",{"_index":1156,"title":{},"body":{"index.html":{}}}],["do_spaces_access_key_id",{"_index":1152,"title":{},"body":{"index.html":{}}}],["do_spaces_bucket_name=opengraph",{"_index":1162,"title":{},"body":{"index.html":{}}}],["do_spaces_cdn_disabled=trueif",{"_index":1169,"title":{},"body":{"index.html":{}}}],["do_spaces_endpoint=digitaloceanspaces.com",{"_index":1160,"title":{},"body":{"index.html":{}}}],["do_spaces_region=sfo3",{"_index":1161,"title":{},"body":{"index.html":{}}}],["do_spaces_secret_access_key=*******************************************ping",{"_index":1153,"title":{},"body":{"index.html":{}}}],["do_spaces_subdomain=beta.opengraph",{"_index":1171,"title":{},"body":{"index.html":{}}}],["docker",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":1108,"title":{},"body":{"index.html":{}}}],["document",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":759,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1170,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":1302,"title":{},"body":{"properties.html":{}}}],["double",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["downgrade",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["draft_prs_count",{"_index":125,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["dry",{"_index":1201,"title":{},"body":{"index.html":{}}}],["during",{"_index":1168,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["e152d09",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["e91c43f",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["earlier",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":679,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge",{"_index":423,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["edge.node",{"_index":424,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge.size",{"_index":425,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge?.node.id",{"_index":603,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edges",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji_id",{"_index":117,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["enable",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":1209,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":676,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["engineer",{"_index":1141,"title":{},"body":{"index.html":{}}}],["engines",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["env.example",{"_index":1139,"title":{},"body":{"index.html":{}}}],["environment",{"_index":901,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["error",{"_index":692,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":694,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":877,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["etl",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1280,"title":{},"body":{"license.html":{}}}],["exceeded",{"_index":346,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["exceeded'})@apibadrequestresponse({description",{"_index":323,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["exceeded'})@redirect",{"_index":713,"title":{},"body":{"controllers/UserCardController.html":{}}}],["except",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":490,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["explanation",{"_index":1145,"title":{},"body":{"index.html":{}}}],["export",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["exports",{"_index":152,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":1271,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraneous",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["extrenaous",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["f7db713",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":498,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fastify",{"_index":336,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fastifyreply",{"_index":291,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fc9211c",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["fe44711",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":1118,"title":{},"body":{"index.html":{}}}],["ff5f13",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":658,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":641,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":647,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":1245,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":349,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fill",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='%2324292f'/%3e%3c/svg%3e",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='none",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter(boolean",{"_index":617,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["filter(repo",{"_index":614,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["filteredlangs",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs.length",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1138,"title":{},"body":{"index.html":{}}}],["first",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":394,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["fitness",{"_index":1276,"title":{},"body":{"license.html":{}}}],["fix",{"_index":788,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":999,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":1136,"title":{},"body":{"index.html":{}}}],["following",{"_index":1101,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":459,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["footer.ts",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":378,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["forcepathstyle",{"_index":675,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":1192,"title":{},"body":{"index.html":{}}}],["formattedname",{"_index":593,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["found",{"_index":308,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":321,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["free",{"_index":1240,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":384,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fs.readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":448,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["full",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["full_name",{"_index":114,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["function",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":978,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1259,"title":{},"body":{"license.html":{}}}],["gaps",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1303,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":994,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatecardbuffer",{"_index":435,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["generatecardbuffer(highlightid",{"_index":511,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["generatecardbuffer(insightid",{"_index":582,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["generatecardbuffer(username",{"_index":730,"title":{},"body":{"injectables/UserCardService.html":{}}}],["generated",{"_index":1227,"title":{},"body":{"index.html":{}}}],["generatehighlightsocialcard",{"_index":288,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generatehighlightsocialcard(id",{"_index":313,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generateinsightsocialcard",{"_index":521,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generateinsightsocialcard(id",{"_index":526,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generates",{"_index":316,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{}}}],["generateusersocialcard",{"_index":705,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generateusersocialcard(username",{"_index":711,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generating",{"_index":1124,"title":{},"body":{"index.html":{}}}],["generation",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":1087,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:id",{"_index":342,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:id/metadata",{"_index":356,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:username",{"_index":717,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/:username/metadata",{"_index":723,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/service",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":314,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:id/metadata')@apioperation({operationid",{"_index":292,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":712,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/:username/metadata')@apioperation({operationid",{"_index":707,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":638,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":642,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":649,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta",{"_index":643,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta(hash",{"_index":651,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getgetinsightcard",{"_index":576,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getgetinsightcard(id",{"_index":584,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["gethighlightcard",{"_index":499,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightcard(id",{"_index":514,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightdata",{"_index":404,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightdata(highlightid",{"_index":516,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightsocialcardmetadata",{"_index":293,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["getinsightdata",{"_index":543,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getinsightdata(insightid",{"_index":586,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["getinsightsocialcardmetadata",{"_index":523,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["getoriginendpoint",{"_index":639,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getrepo",{"_index":162,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrepo(owner",{"_index":171,"title":{},"body":{"injectables/GithubService.html":{}}}],["gets",{"_index":294,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["getting",{"_index":736,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["getuser",{"_index":163,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":177,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":631,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getusercard(username",{"_index":732,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getuserdata",{"_index":595,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getuserdata(username",{"_index":734,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getusersocialcardmetadata",{"_index":708,"title":{},"body":{"controllers/UserCardController.html":{}}}],["gfonts",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1310,"title":{},"body":{"properties.html":{}}}],["github",{"_index":840,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":153,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/entities/db",{"_index":399,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["github/github.module",{"_index":505,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["github/github.service",{"_index":386,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["github_pat_user=ghp_",{"_index":1149,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":199,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":146,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":150,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":1122,"title":{},"body":{"index.html":{}}}],["goes",{"_index":1132,"title":{},"body":{"index.html":{}}}],["gql/get",{"_index":191,"title":{},"body":{"injectables/GithubService.html":{}}}],["gradient",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient(var",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1239,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1298,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":187,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":195,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":158,"title":{},"body":{"injectables/GithubService.html":{}}}],["grass",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":1212,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1213,"title":{},"body":{"index.html":{}}}],["handler",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["hasfile",{"_index":350,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hash",{"_index":476,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hassponsorslisting",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["having",{"_index":1120,"title":{},"body":{"index.html":{}}}],["head",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":326,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["header(\"content",{"_index":344,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headers",{"_index":196,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headobjectcommand",{"_index":662,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":282,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":221,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":280,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["hearticondata",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":457,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["height='24",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1158,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1238,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":140,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{},"index.html":{}}}],["highlight.entity",{"_index":400,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlight.entity.ts",{"_index":138,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"coverage.html":{}}}],["highlightcardcontroller",{"_index":283,"title":{"controllers/HighlightCardController.html":{}},"body":{"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"coverage.html":{}}}],["highlightcarddata",{"_index":371,"title":{"interfaces/HighlightCardData.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["highlightcardmodule",{"_index":6,"title":{"modules/HighlightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["highlightcardservice",{"_index":337,"title":{"injectables/HighlightCardService.html":{}},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["highlightcardtemplate",{"_index":396,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlightcardtemplate(avatarurl",{"_index":443,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightdata",{"_index":436,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightid",{"_index":405,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq",{"_index":406,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq.data",{"_index":408,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlights",{"_index":286,"title":{},"body":{"controllers/HighlightCardController.html":{},"changelog.html":{}}}],["highlights/${string(id)}.png",{"_index":477,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["higlight",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1282,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1305,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host_id",{"_index":126,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["hsl(116",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(120",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(121",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(122",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(124",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(126",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(130",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(131",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(132",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(133",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(134",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(135",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(136",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(137",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(146",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(15",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(19",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(195",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(197",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(198",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(199",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(200",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(201",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(203",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(205",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(206",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(207",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(208",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(209",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(210",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(211",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(212",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(213",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(214",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(216",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(23",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(24",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(25",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(26",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(28",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(30",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(33",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(351",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(353",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(354",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(356",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(357",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(358",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(359",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(360",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(0",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(181",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(182",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(19",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(200",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(202",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(204",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(205",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(206",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(207",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(208",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(209",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(210",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(211",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(216",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":437,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["html(insightcardtemplate(pagename",{"_index":571,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["http",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["https",{"_index":1003,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://api.opensauced.pizza/v1/contributors/search?${string(query",{"_index":559,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["https://github.com/open",{"_index":1306,"title":{},"body":{"properties.html":{}}}],["https://www.github.com/${author_login}.png?size=50",{"_index":564,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["https://www.github.com/${owner}.png?size=50",{"_index":568,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["httpservice",{"_index":380,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["httpstatus",{"_index":327,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.bad_request",{"_index":360,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["httpstatus.no_content",{"_index":357,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_found",{"_index":359,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_modified",{"_index":358,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["icon",{"_index":912,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":99,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["id'})@apinocontentresponse({description",{"_index":300,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["id'})@redirect",{"_index":324,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["identifier",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":301,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["image'})@apinotfoundresponse({description",{"_index":320,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png",{"_index":345,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":318,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["images",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1272,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori",{"_index":438,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori\")).default",{"_index":440,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["included",{"_index":1265,"title":{},"body":{"license.html":{}}}],["including",{"_index":1207,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":96,"title":{"index.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":673,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":193,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":154,"title":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"overview.html":{}}}],["input",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insertion",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":1127,"title":{},"body":{"index.html":{}}}],["insight",{"_index":524,"title":{},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"index.html":{}}}],["insight.entity",{"_index":537,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insight.entity.ts",{"_index":95,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["insight_id",{"_index":112,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["insightcardcontroller",{"_index":518,"title":{"controllers/InsightCardController.html":{}},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"coverage.html":{}}}],["insightcarddata",{"_index":533,"title":{"interfaces/InsightCardData.html":{}},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["insightcardmodule",{"_index":8,"title":{"modules/InsightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InsightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["insightcardservice",{"_index":528,"title":{"injectables/InsightCardService.html":{}},"body":{"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["insightcardtemplate",{"_index":538,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors",{"_index":542,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors(contributors",{"_index":572,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightdata",{"_index":569,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightfooter",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightfooter(contributors",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insightid",{"_index":544,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq",{"_index":547,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq.data",{"_index":549,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightrepos",{"_index":540,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightrepos(repos",{"_index":573,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insights",{"_index":519,"title":{},"body":{"controllers/InsightCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["insights/${string(id)}.png",{"_index":574,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["install",{"_index":1109,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1104,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":693,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":460,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":447,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interarraybuffermedium",{"_index":451,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interface",{"_index":91,"title":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":93,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"overview.html":{}}}],["invalid",{"_index":310,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["is_favorite",{"_index":100,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["is_public",{"_index":101,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["isbountyhunter",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":127,"title":{},"body":{"interfaces/DbRepo.html":{},"changelog.html":{}}}],["join",{"_index":556,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"index.html":{}}}],["join(joinliteral",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":383,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["json.stringify(ratelimit",{"_index":219,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":690,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keys",{"_index":1155,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":1304,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1270,"title":{},"body":{"license.html":{}}}],["langlist",{"_index":421,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["langrepos",{"_index":598,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langrepos.map(repo",{"_index":601,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs",{"_index":375,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":605,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs[edge.node.id].size",{"_index":606,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langtotal",{"_index":376,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["language",{"_index":128,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":799,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages(first",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":365,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodified",{"_index":361,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified.toisostring",{"_index":491,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified?.toisostring",{"_index":367,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["latest",{"_index":295,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["layout",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":628,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["level",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1286,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1283,"title":{},"body":{"license.html":{}}}],["license",{"_index":1233,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["light",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":214,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["limit).join",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit).join(\"\")}${repolist.length",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":1248,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1273,"title":{},"body":{"license.html":{}}}],["link",{"_index":315,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lins",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1187,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":1190,"title":{},"body":{"index.html":{}}}],["literal",{"_index":536,"title":{},"body":{"interfaces/InsightCardData.html":{}}}],["little",{"_index":1144,"title":{},"body":{"index.html":{}}}],["live",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":431,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":763,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["location",{"_index":368,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["logger(githubservice.name",{"_index":185,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":403,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["loggermodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":141,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["lowercase",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1105,"title":{},"body":{"index.html":{}}}],["main",{"_index":1090,"title":{},"body":{"index.html":{}}}],["make",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(repo",{"_index":554,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["matching",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxrepoqueryidslenght",{"_index":545,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["media",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_heap=200",{"_index":1183,"title":{},"body":{"index.html":{}}}],["memory_rss",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss=3000",{"_index":1184,"title":{},"body":{"index.html":{}}}],["memoryhealthindicator",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1275,"title":{},"body":{"license.html":{}}}],["merge",{"_index":782,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["merged_prs_count",{"_index":129,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["message",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":364,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["metadata",{"_index":299,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{}}}],["metadata?.[\"reactions",{"_index":486,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["method",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["min",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1084,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1200,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1234,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":366,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["modify",{"_index":1250,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":1314,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":1146,"title":{},"body":{"index.html":{}}}],["move",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":1142,"title":{},"body":{"index.html":{}}}],["namewithowner",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1100,"title":{},"body":{"index.html":{}}}],["needs",{"_index":305,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["needsupdate",{"_index":351,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["nestjs",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["nestjs/terminus",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":492,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["next",{"_index":1088,"title":{},"body":{"index.html":{}}}],["nextjs",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1012,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":385,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["node:stream",{"_index":666,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":1106,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1279,"title":{},"body":{"license.html":{}}}],["normal",{"_index":464,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["normal.woff",{"_index":450,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notable",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":695,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notfoundexception",{"_index":379,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notice",{"_index":1263,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1110,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":1107,"title":{},"body":{"index.html":{}}}],["null",{"_index":145,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["number",{"_index":108,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["number(curr.reaction_count",{"_index":414,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":604,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["obtaining",{"_index":1243,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":860,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.app",{"_index":1092,"title":{},"body":{"index.html":{}}}],["ocean.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":1228,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":188,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["one",{"_index":343,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["one'})@header('content",{"_index":317,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["opacity",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["open_prs_count",{"_index":130,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["opengraph",{"_index":1086,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced",{"_index":1093,"title":{},"body":{"index.html":{}}}],["opengraph.opensauced.pizza",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opengraph@digital",{"_index":1091,"title":{},"body":{"index.html":{}}}],["opening",{"_index":1195,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["optimize",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":121,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["options",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["orange",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1098,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":1291,"title":{},"body":{"license.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1135,"title":{},"body":{"index.html":{}}}],["outputs",{"_index":1130,"title":{},"body":{"index.html":{}}}],["overflowing",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1300,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1220,"title":{},"body":{"index.html":{}}}],["owner",{"_index":174,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":944,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1203,"title":{},"body":{"index.html":{}}}],["pagename",{"_index":535,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["paginate",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":328,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["param(\"id",{"_index":347,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["param(\"username",{"_index":718,"title":{},"body":{"controllers/UserCardController.html":{}}}],["parameters",{"_index":170,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["parseintpipe",{"_index":329,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["partial",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1277,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":348,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["path",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["permission",{"_index":1237,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1257,"title":{},"body":{"license.html":{}}}],["person",{"_index":1242,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1258,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["pinned",{"_index":142,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["pinneditems",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1211,"title":{},"body":{"index.html":{}}}],["png",{"_index":473,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata",{"_index":471,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata.aspng",{"_index":474,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["port",{"_index":1114,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1267,"title":{},"body":{"license.html":{}}}],["pr's",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["pr_active_count",{"_index":131,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["pr_velocity_count",{"_index":132,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["prefix",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["prerequisites",{"_index":1097,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["proceed",{"_index":1214,"title":{},"body":{"index.html":{}}}],["process.env.ci",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1089,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":589,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":742,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pronouns",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proof",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"properties.html":{}}}],["protocol",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1268,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["prpat",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":429,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["publish",{"_index":1251,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1196,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1278,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":663,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":1188,"title":{},"body":{"index.html":{}}}],["query",{"_index":207,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["query.set",{"_index":551,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["questions",{"_index":1216,"title":{},"body":{"index.html":{}}}],["radial",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":322,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["ratelimit",{"_index":164,"title":{},"body":{"injectables/GithubService.html":{}}}],["reaction",{"_index":494,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["reaction.entity",{"_index":401,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reaction.entity.ts",{"_index":116,"title":{},"body":{"interfaces/DbReaction.html":{},"coverage.html":{}}}],["reaction_count",{"_index":118,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["reactions",{"_index":377,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["reactionsreq",{"_index":409,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reactionsreq.data.reduce((acc",{"_index":411,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["read",{"_index":701,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":655,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readme",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":111,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["realpercent",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":596,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["red",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":330,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["redirecting",{"_index":496,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["refactoring",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["regeneration",{"_index":306,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["region",{"_index":678,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":839,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":216,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["remove",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":172,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repo.full_name.split",{"_index":567,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.languages?.edges?.flatmap(edge",{"_index":422,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":602,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo.languages?.totalsize",{"_index":427,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.repo_id",{"_index":555,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.ts",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo?.isprivate",{"_index":615,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo?.owner.login",{"_index":616,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo_id",{"_index":113,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["repoiconwithname",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoiconwithname(`${name.substring(0",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repoids",{"_index":552,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repolist",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame",{"_index":416,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["reponame.length",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame.substring(0",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos",{"_index":102,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repos.entity.ts",{"_index":120,"title":{},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["repos.length",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map(repo",{"_index":566,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repos.ts",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":565,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{}}}],["repositories(first",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":189,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":1226,"title":{},"body":{"index.html":{}}}],["request",{"_index":1197,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":1021,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requiresupdatemeta",{"_index":402,"title":{"interfaces/RequiresUpdateMeta.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["res",{"_index":290,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(fileurl",{"_index":353,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(url",{"_index":355,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":217,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":697,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":698,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.metadata",{"_index":699,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":1247,"title":{},"body":{"license.html":{}}}],["results",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":381,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg(svg",{"_index":465,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg.render",{"_index":472,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg/resvg",{"_index":382,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["return",{"_index":212,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":175,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["returnval",{"_index":480,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.lastmodified",{"_index":482,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.needsupdate",{"_index":497,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["reverse",{"_index":1140,"title":{},"body":{"index.html":{}}}],["rewrite",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["rewrites",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(17",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(181",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(237",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(238",{"_index":467,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["rights",{"_index":1249,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["rolled",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["rule='evenodd",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1099,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":395,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["s3",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{}}}],["s3client",{"_index":640,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":9,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":387,"title":{"injectables/S3FileStorageService.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["same",{"_index":495,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"index.html":{}}}],["sanitizedusername",{"_index":719,"title":{},"body":{"controllers/UserCardController.html":{}}}],["satori",{"_index":439,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["satori(template",{"_index":454,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["sauced",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/maintainers",{"_index":1154,"title":{},"body":{"index.html":{}}}],["sauced/opengraph",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":1307,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":1311,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":1309,"title":{},"body":{"properties.html":{}}}],["savedreactions",{"_index":485,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["schema",{"_index":190,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["screens",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":432,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["sdk",{"_index":857,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sdk/client",{"_index":665,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":684,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1255,"title":{},"body":{"license.html":{}}}],["send",{"_index":370,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["sensibly",{"_index":1157,"title":{},"body":{"index.html":{}}}],["server",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["set",{"_index":1030,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setup.ts",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sfo3",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1264,"title":{},"body":{"license.html":{}}}],["short_code",{"_index":103,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["singleline",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":133,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":553,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["social",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1102,"title":{},"body":{"index.html":{},"license.html":{}}}],["sometimes",{"_index":1176,"title":{},"body":{"index.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["spaces",{"_index":861,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["spacing",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spam_prs_count",{"_index":134,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["spec",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":418,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["splitting",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../highlight",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../insight",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tailwind.config.ts",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":1046,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/entities/db",{"_index":94,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["src/github/github.module.ts",{"_index":151,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:12",{"_index":186,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:13",{"_index":169,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:22",{"_index":178,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:33",{"_index":173,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:41",{"_index":181,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":281,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":635,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":284,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stars",{"_index":135,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["start",{"_index":1112,"title":{},"body":{"index.html":{}}}],["start:devlocal",{"_index":1116,"title":{},"body":{"index.html":{}}}],["started",{"_index":737,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":895,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":303,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["status(hasfile",{"_index":369,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["stops",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["storage.module.ts",{"_index":636,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":388,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["storage.service.ts",{"_index":637,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":661,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:13",{"_index":660,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:15",{"_index":659,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:17",{"_index":646,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:34",{"_index":648,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:54",{"_index":650,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:75",{"_index":652,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:96",{"_index":657,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["strategy",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["streamablefile",{"_index":319,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["string",{"_index":106,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(reactions",{"_index":488,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":426,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["style",{"_index":463,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":844,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styling",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1260,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1253,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1266,"title":{},"body":{"license.html":{}}}],["suite",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["superlative",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1296,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":453,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"modules.html":{}}}],["switch",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["tailwind",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["tailwindconfig",{"_index":392,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":442,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["templates/highlight",{"_index":397,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["templates/insight",{"_index":539,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/insight",{"_index":541,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/user",{"_index":390,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/tailwind.config",{"_index":393,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/user",{"_index":588,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["terminusmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":1035,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test/local",{"_index":1128,"title":{},"body":{"index.html":{}}}],["test:local:highlight",{"_index":1134,"title":{},"body":{"index.html":{}}}],["test:local:insight",{"_index":1133,"title":{},"body":{"index.html":{}}}],["test:local:user",{"_index":1125,"title":{},"body":{"index.html":{}}}],["testing",{"_index":762,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.config.bucketname",{"_index":689,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":672,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":671,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":668,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":667,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":670,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":279,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":271,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":275,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":277,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":273,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.gethighlightdata(highlightid",{"_index":441,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(id",{"_index":483,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getinsightdata(id",{"_index":575,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getinsightdata(insightid",{"_index":570,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getoriginendpoint",{"_index":669,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.getuserdata(username",{"_index":620,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.getrepo(owner",{"_index":420,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(login",{"_index":419,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(username",{"_index":597,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":500,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.graphqlwithauth",{"_index":194,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":213,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":211,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.highlightcardservice.checkrequiresupdate(id",{"_index":352,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.highlightcardservice.gethighlightcard(id",{"_index":354,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":278,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":274,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":276,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":272,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpservice.get",{"_index":558,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`https://api.opensauced.pizza/v1/highlights/${highlightid}/reactions",{"_index":410,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.httpservice.get(`https://api.opensauced.pizza/v1/insights/${insightid",{"_index":548,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightid",{"_index":407,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.insightcardservice.checkrequiresupdate(id",{"_index":531,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.insightcardservice.getgetinsightcard(id",{"_index":532,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.logger.debug",{"_index":489,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.logger.debug(`rate",{"_index":218,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":674,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":687,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.fileexists(hash",{"_index":479,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getcdnendpoint()}${hash",{"_index":478,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilelastmodified(hash",{"_index":481,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilemeta(hash",{"_index":484,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.usercardservice.checkrequiresupdate(sanitizedusername",{"_index":721,"title":{},"body":{"controllers/UserCardController.html":{}}}],["this.usercardservice.getusercard(sanitizedusername",{"_index":722,"title":{},"body":{"controllers/UserCardController.html":{}}}],["thresholdpercent",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":1151,"title":{},"body":{"index.html":{}}}],["throw",{"_index":696,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["title",{"_index":143,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["title.length",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title.slice(0",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["today",{"_index":201,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago",{"_index":203,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago.toisostring",{"_index":209,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":625,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["token",{"_index":198,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":1148,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1290,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["try",{"_index":686,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ts5",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["tw",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitterusername",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":107,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":192,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":922,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":1204,"title":{},"body":{"index.html":{}}}],["ui",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":311,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":309,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":307,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apiresponse({description",{"_index":304,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["unexisting",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":176,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["up",{"_index":302,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["update",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1230,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":104,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updated_at.toisostring",{"_index":493,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updatedat",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["uploadfile",{"_index":644,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":653,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":144,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["url.replace(\"https://github.com",{"_index":417,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["urlsearchparams",{"_index":550,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["usage",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":434,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":430,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["usefactory",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":137,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["user(login",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":607,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.login",{"_index":618,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.name",{"_index":608,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.repositories.nodes?.filter",{"_index":599,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.toprepositories.nodes",{"_index":613,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.ts",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user[\"databaseid",{"_index":591,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user[\"name",{"_index":592,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user_id",{"_index":105,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["usercardcontroller",{"_index":702,"title":{"controllers/UserCardController.html":{}},"body":{"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"coverage.html":{}}}],["usercarddata",{"_index":590,"title":{"interfaces/UserCardData.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["usercardmodule",{"_index":10,"title":{"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["usercardservice",{"_index":594,"title":{"injectables/UserCardService.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["userdata",{"_index":619,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userlangs",{"_index":389,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":444,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["username",{"_index":179,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinocontentresponse({description",{"_index":709,"title":{},"body":{"controllers/UserCardController.html":{}}}],["username.tolowercase",{"_index":720,"title":{},"body":{"controllers/UserCardController.html":{}}}],["userpat",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecardtemplate",{"_index":587,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilecardtemplate(avatarurl",{"_index":621,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userprofilerepos",{"_index":391,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos([repo",{"_index":445,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["userprofilerepos(repos",{"_index":622,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["users",{"_index":703,"title":{},"body":{"controllers/UserCardController.html":{},"index.html":{}}}],["users/${string(username)}.png",{"_index":624,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["using",{"_index":1166,"title":{},"body":{"index.html":{}}}],["utc:hh:mm:ss.l",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":183,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":1042,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":208,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1025,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1219,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visual",{"_index":1225,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1223,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":1229,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1274,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1269,"title":{},"body":{"license.html":{}}}],["way",{"_index":1121,"title":{},"body":{"index.html":{}}}],["web",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":462,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["well",{"_index":1137,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1287,"title":{},"body":{"license.html":{}}}],["width",{"_index":455,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["width='24",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1119,"title":{},"body":{"index.html":{},"license.html":{}}}],["workflow",{"_index":1232,"title":{},"body":{"index.html":{}}}],["x",{"_index":362,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cpath",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xs",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":513,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}}}],["yoga",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1221,"title":{},"body":{"index.html":{}}}],["zero",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HighlightCardModule\n                        \n                        \n                            InsightCardModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                        \n                            UserCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { UserCardModule } from \"./social-card/user-card/user-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardModule } from \"./social-card/highlight-card/highlight-card.module\";\nimport { InsightCardModule } from \"./social-card/insight-card/insight-card.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [ApiConfig, GitHubConfig, DigitalOceanConfig],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    S3FileStorageModule,\n    UserCardModule,\n    HighlightCardModule,\n    InsightCardModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbInsight.html":{"url":"interfaces/DbInsight.html","title":"interface - DbInsight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbInsight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_favorite\n                                        \n                                \n                                \n                                        \n                                            is_public\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            short_code\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_favorite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_favorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:         DbUserInsightRepo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DbUserInsightRepo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        short_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        short_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbReaction.html":{"url":"interfaces/DbReaction.html","title":"interface - DbReaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-reaction.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji_id\n                                        \n                                \n                                \n                                        \n                                            reaction_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction_count:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbReaction {\n  emoji_id: string;\n  reaction_count: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbRepo.html":{"url":"interfaces/DbRepo.html","title":"interface - DbRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-repos.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            churnTotalCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closed_prs_count\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draft_prs_count\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            host_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            issues\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            merged_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_active_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_velocity_count\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spam_prs_count\n                                        \n                                \n                                \n                                        \n                                            stars\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        churnTotalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        churnTotalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closed_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draft_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draft_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issues:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        merged_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        merged_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_active_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_active_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_velocity_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_velocity_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spam_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spam_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stars:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbRepo {\n  id: string;\n  host_id: string;\n  size: number;\n  stars: number;\n  issues: number;\n  full_name: string;\n  pr_active_count?: number;\n  open_prs_count?: number;\n  merged_prs_count?: number;\n  closed_prs_count?: number;\n  draft_prs_count?: number;\n  spam_prs_count?: number;\n  pr_velocity_count?: number;\n  churnTotalCount?: number;\n  language: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserHighlight.html":{"url":"interfaces/DbUserHighlight.html","title":"interface - DbUserHighlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-user-highlight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            deleted_at\n                                        \n                                \n                                \n                                        \n                                            highlight\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            pinned\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted_at:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pinned\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pinned:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbUserHighlight {\n  readonly id: string;\n  readonly user_id: string;\n  readonly url: string;\n  readonly title: string;\n  readonly highlight: string;\n  readonly pinned: boolean;\n  readonly created_at: string;\n  readonly updated_at: string;\n  readonly deleted_at: string | null;\n  readonly login: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserInsightRepo.html":{"url":"interfaces/DbUserInsightRepo.html","title":"interface - DbUserInsightRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserInsightRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            insight_id\n                                        \n                                \n                                \n                                        \n                                            repo_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insight_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        insight_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRepo\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, Repository, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getRepo from \"./gql/get-repo\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async getRepo (owner: string, repo: string) {\n    const { query, variables } = getRepo(owner, repo);\n\n    const { repository } = await this.graphqlWithAuth(query, variables);\n\n    return repository;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HighlightCardController.html":{"url":"controllers/HighlightCardController.html","title":"controller - HighlightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HighlightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHighlightSocialCard\n                            \n                            \n                                    Async\n                                generateHighlightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getHighlightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Highlight social card image is up to date', status: undefined})@ApiResponse({description: 'Highlight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Highlight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid highlight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateHighlightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Highlight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid highlight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, ParseIntPipe, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { HighlightCardService } from \"./highlight-card.service\";\n\n\n@Controller(\"highlights\")\n@ApiTags(\"Highlight social cards\")\nexport class HighlightCardController {\n  constructor (\n    private readonly highlightCardService: HighlightCardService,\n  ) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateHighlightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Highlight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\" })\n  @Redirect()\n  async generateHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.highlightCardService.getHighlightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getHighlightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Highlight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Highlight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Highlight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\", status: HttpStatus.BAD_REQUEST })\n  async checkHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightCardData.html":{"url":"interfaces/HighlightCardData.html","title":"interface - HighlightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HighlightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            reactions\n                                        \n                                \n                                \n                                        \n                                            repo\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo:     Repository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\n\ninterface HighlightCardData {\n  title: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`),\n    );\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`),\n    );\n    const reactions = reactionsReq.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HighlightCardModule.html":{"url":"modules/HighlightCardModule.html","title":"module - HighlightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    HighlightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_HighlightCardModule_imports\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HighlightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HighlightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardService } from \"../highlight-card/highlight-card.service\";\nimport { HighlightCardController } from \"./highlight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [HighlightCardService],\n  controllers: [HighlightCardController],\n})\nexport class HighlightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HighlightCardService.html":{"url":"injectables/HighlightCardService.html","title":"injectable - HighlightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HighlightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getHighlightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getHighlightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(highlightId: number, highlightData?: HighlightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightData\n                                    \n                                                HighlightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHighlightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getHighlightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightData(highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\n\ninterface HighlightCardData {\n  title: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`),\n    );\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`),\n    );\n    const reactions = reactionsReq.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InsightCardController.html":{"url":"controllers/InsightCardController.html","title":"controller - InsightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InsightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkInsightSocialCard\n                            \n                            \n                                    Async\n                                generateInsightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getInsightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Insight social card image is up to date', status: undefined})@ApiResponse({description: 'Insight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Insight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid insight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateInsightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Insight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid insight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Header,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Redirect,\n  Res,\n  StreamableFile,\n} from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { InsightCardService } from \"./insight-card.service\";\n\n@Controller(\"insights\")\n@ApiTags(\"Insight social cards\")\nexport class InsightCardController {\n  constructor (private readonly insightCardService: InsightCardService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateInsightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Insight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\" })\n  @Redirect()\n  async generateInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.insightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.insightCardService.getgetInsightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getInsightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Insight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Insight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Insight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\", status: HttpStatus.BAD_REQUEST })\n  async checkInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.insightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? (needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT) : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InsightCardData.html":{"url":"interfaces/InsightCardData.html","title":"interface - InsightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InsightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contributors\n                                        \n                                \n                                \n                                        \n                                            pageName\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contributors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `https://api.opensauced.pizza/v1/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 2)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InsightCardModule.html":{"url":"modules/InsightCardModule.html","title":"module - InsightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    InsightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_imports\n\n\n\ncluster_InsightCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InsightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InsightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\nimport { InsightCardService } from \"./insight-card.service\";\nimport { InsightCardController } from \"./insight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [InsightCardService],\n  controllers: [InsightCardController],\n})\nexport class InsightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightCardService.html":{"url":"injectables/InsightCardService.html","title":"injectable - InsightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getgetInsightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getInsightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(insightId: number, insightData?: InsightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightData\n                                    \n                                                InsightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getgetInsightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getgetInsightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getInsightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInsightData(insightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `https://api.opensauced.pizza/v1/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 2)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequiresUpdateMeta.html":{"url":"interfaces/RequiresUpdateMeta.html","title":"interface - RequiresUpdateMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequiresUpdateMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            hasFile\n                                        \n                                \n                                \n                                        \n                                            lastModified\n                                        \n                                \n                                \n                                        \n                                            needsUpdate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasFile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastModified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastModified:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsUpdate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                getFileMeta\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileMeta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileMeta(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string, metadata?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileMeta (hash: string): Promise | null> {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.Metadata ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n    metadata?: Record,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n        Metadata: metadata,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserCardController.html":{"url":"controllers/UserCardController.html","title":"controller - UserCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserSocialCard\n                            \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/metadata')@ApiOperation({operationId: 'getUserSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :username'})@ApiNoContentResponse({description: 'User social card image is up to date', status: undefined})@ApiResponse({description: 'User social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'User social card image not found', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\n\nimport { UserCardService } from \"./user-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class UserCardController {\n  constructor (\n    private readonly userCardService: UserCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.userCardService.getUserCard(sanitizedUsername);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:username/metadata\")\n  @ApiOperation({\n    operationId: \"getUserSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :username\",\n  })\n  @ApiNoContentResponse({ description: \"User social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"User social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"User social card image not found\", status: HttpStatus.NOT_FOUND })\n  async checkUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCardData.html":{"url":"interfaces/UserCardData.html","title":"interface - UserCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            formattedName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     Repository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserCardModule.html":{"url":"modules/UserCardModule.html","title":"module - UserCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UserCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_imports\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/user-card/user-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { UserCardService } from \"./user-card.service\";\nimport { UserCardController } from \"./user-card.controller\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [UserCardService],\n  controllers: [UserCardController],\n})\nexport class UserCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserCardService.html":{"url":"injectables/UserCardService.html","title":"injectable - UserCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Private\n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(username: string, userData?: UserCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UserCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.2.0 (2023-06-20)\n🐛 Bug Fixes\n\nremove issue templates (#49) (778ad4e)\n\n🍕 Features\n\ninsights social card generation (#51) (8a82a48)\n\n📝 Documentation\n\nupdate instructions on testing cards generation locally (#53) (e152d09)\n\n2.2.0-beta.2 (2023-06-20)\n📝 Documentation\n\nupdate instructions on testing cards generation locally (#53) (e152d09)\n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.2.0-beta.1 (2023-06-08)\n🍕 Features\n\ninsights social card generation (#51) (8a82a48)\n\n2.1.2-beta.1 (2023-06-06)\n🐛 Bug Fixes\n\nremove issue templates (#49) (778ad4e)\n\n2.1.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.1-beta.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.0 (2023-05-09)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\nhiglight card upload & storage (#39) (b6abefa)\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.6 (2023-05-09)\n🍕 Features\n\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.5 (2023-05-05)\n🍕 Features\n\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\n\n2.1.0-beta.4 (2023-05-04)\n🍕 Features\n\nhiglight card upload & storage (#39) (b6abefa)\n\n2.1.0-beta.3 (2023-05-02)\n🍕 Features\n\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\n\n2.1.0-beta.2 (2023-04-30)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n2.1.0-beta.1 (2023-04-26)\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\n\n2.0.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.2 (2023-04-19)\n🐛 Bug Fixes\n\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\n\n2.0.0 (2023-04-11)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\nimplement no-content verification strategy (6efe0e6)\noptimize image loading and return errors (7c6f199), closes #17\n\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\ncorrect dark logo render and make it static (dc9f3a4)\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect server generation environment (68d0202)\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\nupdate graphql types (f7db713)\n\n2.0.0-beta.3 (2023-04-11)\n🤖 Build System\n\nupdate graphql types (f7db713)\n\n2.0.0-beta.2 (2023-04-11)\n🐛 Bug Fixes\n\ncorrect dark logo render and make it static (dc9f3a4)\n\n2.0.0-beta.1 (2023-04-10)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🐛 Bug Fixes\n\ncorrect server generation environment (68d0202)\n\n1.2.0-beta.10 (2023-04-10)\n🐛 Bug Fixes\n\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\n\n1.2.0-beta.9 (2023-04-10)\n🍕 Features\n\noptimize image loading and return errors (7c6f199), closes #17\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\n\n1.2.0-beta.8 (2023-04-09)\n🍕 Features\n\nimplement no-content verification strategy (6efe0e6)\n\n🐛 Bug Fixes\n\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n1.2.0-beta.7 (2023-04-09)\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n1.2.0-beta.6 (2023-04-09)\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\n\n1.2.0-beta.5 (2023-04-09)\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n🐛 Bug Fixes\n\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\n\n1.2.0-beta.4 (2023-04-08)\n🍕 Features\n\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbInsight\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbUserInsightRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/github/entities/db-reaction.entity.ts\n            \n            interface\n            DbReaction\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/github/entities/db-repos.entity.ts\n            \n            interface\n            DbRepo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/github/entities/db-user-highlight.entity.ts\n            \n            interface\n            DbUserHighlight\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/github/gql/get-repo.ts\n            \n            variable\n            getRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.controller.ts\n            \n            controller\n            HighlightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            injectable\n            HighlightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            interface\n            HighlightCardData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.controller.ts\n            \n            controller\n            InsightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            injectable\n            InsightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            interface\n            InsightCardData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/templates/highlight-card.template.ts\n            \n            variable\n            highlightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/insight-card.template.ts\n            \n            variable\n            insightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            cardFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            heartIconData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-style-setup.ts\n            \n            variable\n            cardStyleSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-contributors.ts\n            \n            variable\n            insightContributors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-footer.ts\n            \n            variable\n            insightFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-repos.ts\n            \n            variable\n            insightRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/tailwind.config.ts\n            \n            variable\n            tailwindConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.template.ts\n            \n            variable\n            userProfileCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.controller.ts\n            \n            controller\n            UserCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            injectable\n            UserCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            RequiresUpdateMeta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            UserCardData\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n\n\n\n\n\n\n\n\n\n🚀 Live release environments\nProduction (main)\n\nopengraph@digital-ocean.app\nopengraph.opensauced\n\nBeta (beta)\n\nopengraph-beta@digital-ocean.app\nbeta.opengraph.opensauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\n node>=18.15.0\n npm>=9.6.3\n docker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:devLocal dev scripts\nThere are a few scripts that can be used to generate and test the social cards locally without having to deploy to the CDN. This is the way to go when developing & testing the interface for the social cards.\nGenerating user profile cards\nnpm run test:local:user\nGenerates user cards for all users in the test array inside test/local-dev/UserCards.ts and outputs them in dist/local-dev/ for testing.\n\nThe same goes for the other card types:\n\nnpm run test:local:insight is for generating insight cards.\nnpm run test:local:highlight is for generating highlight cards.\n\nThe output of these scripts can be found in the dist/local-dev/ folder as well.\n📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nOne can reverse engineer the named configs but some need a little explanation.\nBoilerplate, changed mostly locally:\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************\n\n# DigitalOcean Spaces through aws-sdk configuration\nDO_SPACES_ACCESS_KEY_ID=********************\nDO_SPACES_SECRET_ACCESS_KEY=*******************************************Ping @open-sauced/maintainers to get the dev CDN keys for the DO_SPACES_* variables.\nOther Digital Ocean S3 variables are sensibly set to default for local development, here are the defauls:\nDO_SPACES_ENDPOINT=digitaloceanspaces.com\nDO_SPACES_REGION=sfo3\nDO_SPACES_BUCKET_NAME=opengraph-devIt is also advised to set the following variables to true to avoid using the cached CDN during development:\nDO_SPACES_CDN_DISABLED=trueIf using a custom domain, you can set the following variable to the domain name:\nDO_SPACES_SUBDOMAIN=beta.opengraph-cdn.opensauced.pizzaOther API defaults you can change are not required in local development, but can sometimes appear configured differently for production:\nAPI_HOST=0.0.0.0\nAPI_PORT=3005\nAPI_DOMAIN=opengraph.opensauced.pizza\nMEMORY_HEAP=200\nMEMORY_RSS=3000\nDISK_PERCENTAGE=0.7\nDISK_SIZE=100🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-checkIn order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HighlightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InsightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.2.0\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            cardFooter   (src/.../card-footer.ts)\n                        \n                        \n                            cardStyleSetup   (src/.../card-style-setup.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            getRepo   (src/.../get-repo.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            heartIconData   (src/.../card-footer.ts)\n                        \n                        \n                            highlightCardTemplate   (src/.../highlight-card.template.ts)\n                        \n                        \n                            insightCardTemplate   (src/.../insight-card.template.ts)\n                        \n                        \n                            insightContributors   (src/.../insight-contributors.ts)\n                        \n                        \n                            insightFooter   (src/.../insight-footer.ts)\n                        \n                        \n                            insightRepos   (src/.../insight-repos.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            tailwindConfig   (src/.../tailwind.config.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCardTemplate   (src/.../user-profile-card.template.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: string, repos: string, reactions?: number) => `\n    \n      \n        \n          ${repos}\n        \n\n        ${\n  reactions\n    ? `\n          \n            \n            \n              ${reactions} Reactions\n            \n          \n        `\n    : \"\"\n}\n      \n\n      \n        \n          ${langs}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heartIconData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M6.73649 2.5C3.82903 2.5 1 5.052 1 8.51351C1 12.3318 3.80141 15.5735 6.38882 17.7763C7.70549 18.8973 9.01844 19.7929 10.0004 20.4077C10.4922 20.7157 10.9029 20.9544 11.1922 21.1169C11.4093 21.2388 11.5582 21.318 11.6223 21.3516C11.7407 21.4132 11.8652 21.4527 12 21.4527C12.1193 21.4527 12.2378 21.4238 12.3438 21.3693C12.5003 21.2886 12.6543 21.2031 12.8078 21.1169C13.0971 20.9544 13.5078 20.7157 13.9996 20.4077C14.9816 19.7929 16.2945 18.8973 17.6112 17.7763C20.1986 15.5735 23 12.3318 23 8.51351C23 5.052 20.171 2.5 17.2635 2.5C14.9702 2.5 13.1192 3.72621 12 5.60482C10.8808 3.72621 9.02981 2.5 6.73649 2.5ZM6.73649 4C4.65746 4 2.5 5.88043 2.5 8.51351C2.5 11.6209 4.8236 14.4738 7.36118 16.6342C8.60701 17.6948 9.85656 18.5479 10.7965 19.1364C11.2656 19.4301 11.6557 19.6567 11.9269 19.8091L12 19.85L12.0731 19.8091C12.3443 19.6567 12.7344 19.4301 13.2035 19.1364C14.1434 18.5479 15.393 17.6948 16.6388 16.6342C19.1764 14.4738 21.5 11.6209 21.5 8.51351C21.5 5.88043 19.3425 4 17.2635 4C15.1581 4 13.4627 5.38899 12.7115 7.64258C12.6094 7.94883 12.3228 8.15541 12 8.15541C11.6772 8.15541 11.3906 7.94883 11.2885 7.64258C10.5373 5.38899 8.84185 4 6.73649 4Z' fill='%2324292F'/%3e%3c/svg%3e`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-style-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardStyleSetup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  \n    div {\n      display: flex;\n    }\n  \n`\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRepo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (owner: string, repo: string) => ({\n  query: `\nquery ($owner: String!, $repo: String!) {\n  repository(\n    owner: $owner\n    name: $repo\n  ) {\n    id\n    name\n    databaseId\n    nameWithOwner\n    owner {\n      id\n      login\n      avatarUrl\n    }\n    languages (first: 100, orderBy: { field: SIZE, direction: DESC }) {\n      edges {\n        node {\n          id\n          color\n          name\n        }\n        size\n      }\n      totalSize\n      totalCount\n    }\n  }\n}`,\n  variables: {\n    owner,\n    repo,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/highlight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  avatarUrl: string,\n  title: string,\n  body: string,\n  langs: string,\n  repos: string,\n  reactions: number,\n): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n      \n\n      \n        \n          ${title.length > 50 ? `${title.slice(0, 50)}...` : title}\n        \n        \n          ${body.length > 108 ? `${body.slice(0, 108)}...` : body}\n        \n      \n\n      \n        \n      \n    \n\n    ${cardFooter(langs, repos, reactions)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/insight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (pageName: string, contributors: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          ${pageName}: Insights\n        \n      \n    \n\n    ${insightFooter(contributors, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-contributors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightContributors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string[]): string => {\n  const repoList = contributors.map(\n    contributor => ``,\n  );\n\n  return `${repoList.slice(0, 5).join(\"\")}${\n    repoList.length > 5\n      ? `+${\n        repoList.length - 5\n      }`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string, repos: string) => `\n    \n      \n        \n          ${repos}\n        \n        \n           \n        \n      \n\n      \n        \n          ${contributors}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: { repoName: string; avatarUrl: string }[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 15;\n  const repoList = repos.map(({ repoName, avatarUrl }) =>\n    repoIconWithName(\n      `${repoName.substring(0, charLimit).replace(/\\.+$/, \"\")}${repoName.length > charLimit ? \"...\" : \"\"}`,\n      `${String(avatarUrl)}&size=40`,\n    ));\n\n  return `${repoList.slice(0, limit).join(\"\")}${\n    repoList.length > limit\n      ? `+${repoList.length - limit}`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n  \n    \n      \n      \n        \n          ${name}\n        \n      \n    \n  \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/tailwind.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tailwindConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  theme: {\n    extend: {\n      screens: {\n        xs: \"425px\",\n\n        // => @media (min-width: 425px) { ... }\n\n        \"2xl\": \"1440px\",\n\n        // => @media (min-width: 1440px) { ... }\n      },\n      blur: { \"4xl\": \"5rem\" },\n      spacing: {\n        \"6px\": \"6px\",\n        \"8px\": \"8px\",\n        \"12px\": \"12px\",\n        \"16px\": \"16px\",\n        \"32px\": \"32px\",\n        \"48px\": \"48px\",\n        \"58px\": \"58px\",\n        \"96px\": \"96px\",\n        \"134px\": \"134px\",\n        \"627px\": \"627px\",\n        \"1200px\": \"1200px\",\n      },\n      colors: {\n        sauced: { orange: \"hsla(19, 100%, 50%, 1)\" },\n        gradient: {\n          \"dark-two\": \"hsl(26, 54%, 15%)\",\n          \"dark-one\": \"hsl(23, 75%, 5%)\",\n          \"orange-one\": \"\thsl(33, 100%, 50%)\",\n          \"orange-two\": \"\thsl(19, 100%, 50%)\",\n        },\n        light: {\n          slate: {\n            1: \"hsl(206, 30.0%, 98.8%)\",\n            2: \"hsl(210, 16.7%, 97.6%)\",\n            3: \"hsl(209, 13.3%, 95.3%)\",\n            4: \"hsl(209, 12.2%, 93.2%)\",\n            5: \"hsl(208, 11.7%, 91.1%)\",\n            6: \"hsl(208, 11.3%, 88.9%)\",\n            7: \"hsl(207, 11.1%, 85.9%)\",\n            8: \"hsl(205, 10.7%, 78.0%)\",\n            9: \"hsl(206, 6.0%, 56.1%)\",\n            10: \"hsl(206, 5.8%, 52.3%)\",\n            11: \"hsl(206, 6.0%, 43.5%)\",\n            12: \"hsl(206, 24.0%, 9.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(210, 92.6%, 26.5%, 0.016)\",\n            2: \"hsla(210, 87.7%, 16.0%, 0.028)\",\n            3: \"hsla(210, 98.8%, 14.4%, 0.055)\",\n            4: \"hsla(210, 94.1%, 11.1%, 0.075)\",\n            5: \"hsla(216, 91.1%, 10.9%, 0.099)\",\n            6: \"hsla(206, 96.4%, 11.3%, 0.126)\",\n            7: \"hsla(210, 99.1%, 10.1%, 0.157)\",\n            8: \"hsla(205, 96.5%, 10.0%, 0.244)\",\n            9: \"hsla(206, 98.8%, 5.9%, 0.467)\",\n            10: \"hsla(206, 99.6%, 5.4%, 0.506)\",\n            11: \"hsla(206, 97.0%, 4.8%, 0.593)\",\n            12: \"hsla(202, 97.0%, 2.4%, 0.934)\",\n          },\n          orange: {\n            1: \"hsl(24, 70.0%, 99.0%)\",\n            2: \"hsl(24, 83.3%, 97.6%)\",\n            3: \"hsl(24, 100%, 95.3%)\",\n            4: \"hsl(25, 100%, 92.2%)\",\n            5: \"hsl(25, 100%, 88.2%)\",\n            6: \"hsl(25, 100%, 82.8%)\",\n            7: \"hsl(24, 100%, 75.3%)\",\n            8: \"hsl(24, 94.5%, 64.3%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 46.5%)\",\n            11: \"hsl(24, 100%, 37.0%)\",\n            12: \"hsl(15, 60.0%, 17.0%)\",\n          },\n          blue: {\n            1: \"hsl(206, 100%, 99.2%)\",\n            2: \"hsl(210, 100%, 98.0%)\",\n            3: \"hsl(209, 100%, 96.5%)\",\n            4: \"hsl(210, 98.8%, 94.0%)\",\n            5: \"hsl(209, 95.0%, 90.1%)\",\n            6: \"hsl(209, 81.2%, 84.5%)\",\n            7: \"hsl(208, 77.5%, 76.9%)\",\n            8: \"hsl(206, 81.9%, 65.3%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(208, 100%, 47.3%)\",\n            11: \"hsl(211, 100%, 43.2%)\",\n            12: \"hsl(211, 100%, 15.0%)\",\n          },\n          red: {\n            1: \"hsl(359, 100%, 99.4%)\",\n            2: \"hsl(359, 100%, 98.6%)\",\n            3: \"hsl(360, 100%, 96.8%)\",\n            4: \"hsl(360, 97.9%, 94.8%)\",\n            5: \"hsl(360, 90.2%, 91.9%)\",\n            6: \"hsl(360, 81.7%, 87.8%)\",\n            7: \"hsl(359, 74.2%, 81.7%)\",\n            8: \"hsl(359, 69.5%, 74.3%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 69.4%, 55.2%)\",\n            11: \"hsl(358, 65.0%, 48.7%)\",\n            12: \"hsl(354, 50.0%, 14.6%)\",\n          },\n          grass: {\n            1: \"hsl(116, 50.0%, 98.9%)\",\n            2: \"hsl(120, 60.0%, 97.1%)\",\n            3: \"hsl(120, 53.6%, 94.8%)\",\n            4: \"hsl(121, 47.5%, 91.4%)\",\n            5: \"hsl(122, 42.6%, 86.5%)\",\n            6: \"hsl(124, 39.0%, 79.7%)\",\n            7: \"hsl(126, 37.1%, 70.2%)\",\n            8: \"hsl(131, 38.1%, 56.3%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(132, 43.1%, 42.2%)\",\n            11: \"hsl(133, 50.0%, 32.5%)\",\n            12: \"hsl(130, 30.0%, 14.9%)\",\n          },\n        },\n        dark: {\n          slate: {\n            1: \"hsl(200, 7.0%, 8.8%)\",\n            2: \"hsl(195, 7.1%, 11.0%)\",\n            3: \"hsl(197, 6.8%, 13.6%)\",\n            4: \"hsl(198, 6.6%, 15.8%)\",\n            5: \"hsl(199, 6.4%, 17.9%)\",\n            6: \"hsl(201, 6.2%, 20.5%)\",\n            7: \"hsl(203, 6.0%, 24.3%)\",\n            8: \"hsl(207, 5.6%, 31.6%)\",\n            9: \"hsl(206, 6.0%, 43.9%)\",\n            10: \"hsl(206, 5.2%, 49.5%)\",\n            11: \"hsl(206, 6.0%, 63.0%)\",\n            12: \"hsl(210, 6.0%, 93.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(0, 0%, 0%, 0)\",\n            2: \"hsla(181, 98.9%, 91.8%, 0.026)\",\n            3: \"hsla(182, 86.7%, 91.4%, 0.057)\",\n            4: \"hsla(209, 86.7%, 93.9%, 0.083)\",\n            5: \"hsla(200, 90.3%, 93.4%, 0.109)\",\n            6: \"hsla(209, 95.3%, 93.5%, 0.139)\",\n            7: \"hsla(204, 98.5%, 93.9%, 0.182)\",\n            8: \"hsla(209, 94.0%, 94.7%, 0.265)\",\n            9: \"hsla(207, 97.3%, 94.0%, 0.412)\",\n            10: \"hsla(209, 99.4%, 95.2%, 0.472)\",\n            11: \"hsla(208, 98.7%, 96.8%, 0.615)\",\n            12: \"hsla(211, 86.7%, 99.6%, 0.927)\",\n          },\n          orange: {\n            1: \"hsl(30, 70.0%, 7.2%)\",\n            2: \"hsl(28, 100%, 8.4%)\",\n            3: \"hsl(26, 91.1%, 11.6%)\",\n            4: \"hsl(25, 88.3%, 14.1%)\",\n            5: \"hsl(24, 87.6%, 16.6%)\",\n            6: \"hsl(24, 88.6%, 19.8%)\",\n            7: \"hsl(24, 92.4%, 24.0%)\",\n            8: \"hsl(25, 100%, 29.0%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 58.5%)\",\n            11: \"hsl(24, 100%, 62.2%)\",\n            12: \"hsl(24, 97.0%, 93.2%)\",\n          },\n          blue: {\n            1: \"hsl(212, 35.0%, 9.2%)\",\n            2: \"hsl(216, 50.0%, 11.8%)\",\n            3: \"hsl(214, 59.4%, 15.3%)\",\n            4: \"hsl(214, 65.8%, 17.9%)\",\n            5: \"hsl(213, 71.2%, 20.2%)\",\n            6: \"hsl(212, 77.4%, 23.1%)\",\n            7: \"hsl(211, 85.1%, 27.4%)\",\n            8: \"hsl(211, 89.7%, 34.1%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(209, 100%, 60.6%)\",\n            11: \"hsl(210, 100%, 66.1%)\",\n            12: \"hsl(206, 98.0%, 95.8%)\",\n          },\n          red: {\n            1: \"hsl(353, 23.0%, 9.8%)\",\n            2: \"hsl(357, 34.4%, 12.0%)\",\n            3: \"hsl(356, 43.4%, 16.4%)\",\n            4: \"hsl(356, 47.6%, 19.2%)\",\n            5: \"hsl(356, 51.1%, 21.9%)\",\n            6: \"hsl(356, 55.2%, 25.9%)\",\n            7: \"hsl(357, 60.2%, 31.8%)\",\n            8: \"hsl(358, 65.0%, 40.4%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 85.3%, 64.0%)\",\n            11: \"hsl(358, 100%, 69.5%)\",\n            12: \"hsl(351, 89.0%, 96.0%)\",\n          },\n          grass: {\n            1: \"hsl(146, 30.0%, 7.4%)\",\n            2: \"hsl(136, 33.3%, 8.8%)\",\n            3: \"hsl(137, 36.0%, 11.4%)\",\n            4: \"hsl(137, 37.6%, 13.7%)\",\n            5: \"hsl(136, 38.7%, 16.0%)\",\n            6: \"hsl(135, 39.6%, 19.1%)\",\n            7: \"hsl(134, 40.3%, 23.8%)\",\n            8: \"hsl(131, 40.1%, 30.8%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(131, 39.0%, 52.1%)\",\n            11: \"hsl(131, 43.0%, 57.2%)\",\n            12: \"hsl(137, 72.0%, 94.0%)\",\n          },\n        },\n      },\n      boxShadow: {\n        login: \"0px 64px 100px -80px #FF5F13, 0px 16px 56px rgba(181, 107, 72, 0.19)\",\n        superlative: \"0px 22px 24px -8px rgba(0, 0, 0, 0.05), 0px 4px 8px rgba(0, 0, 0, 0.1)\",\n        paginate: \"0px 1px 2px rgba(237, 95, 0, 0.05), 0px 1px 1px rgba(237, 95, 0, 0.05)\",\n        input: \"0px 1px 2px rgba(17, 24, 28, 0.05), 0px 1px 1px rgba(17, 24, 28, 0.05)\",\n      },\n      backgroundImage: { \"gradient-radial\": \"radial-gradient(var(--tw-gradient-stops))\" },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & { size: number })[], totalCount = 0, joinLiteral = \"\") => {\n  const filteredLangs = langs\n    .filter(({ size }) => size > 0 && (size / totalCount) * 100 >= 0.5);\n\n  return filteredLangs\n    .map(({ color, size }) => {\n      const realPercent = size / totalCount * 100;\n\n      return ` 0 ? realPercent : 100 / filteredLangs.length}%\"/>`;\n    })\n    .join(joinLiteral);\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n\n      \n        ${name}\n      \n\n      \n    \n\n    ${cardFooter(langs, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 15;\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(`${name.substring(0, charLimit).replace(/\\.+$/, \"\")}${name.length > charLimit ? \"...\" : \"\"}`, `${String(avatarUrl)}&size=40`));\n\n  return `${repoList.slice(0, limit).join(\"\")}${repoList.length > limit\n    ? `+${repoList.length - limit}`\n    : ``}`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
