var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.761,1,1.906]],["body/modules/AppModule.html",[0,1.124,1,3.705,2,1.281,3,2.029,4,2.863,5,2.863,6,3.133,7,0.039,8,2.536,9,3.133,10,2.25,11,1.731,12,1.413,13,0.429,14,0.429,15,0.452,16,3.469,17,2.5,18,1.086,19,3.469,20,0.627,21,4.509,22,4.135,23,2.167,24,3.203,25,1.413,26,3.722,27,2.465,28,3.469,29,3.469,30,4.509,31,3.469,32,3.469,33,3.469,34,3.203,35,3.469,36,2.816,37,2.863,38,2.816,39,2.863,40,2.863,41,2.25,42,1.665,43,4.509,44,0.956,45,1.055,46,2.465,47,2.25,48,3.469,49,3.469,50,3.469,51,1.777,52,3.469,53,2.465,54,3.469,55,2.863,56,3.469,57,0.865,58,3.469,59,3.469,60,3.469,61,3.469,62,3.469,63,3.469,64,3.469,65,3.469,66,3.469,67,3.469,68,3.469,69,3.469,70,3.469,71,3.469,72,3.469,73,3.469,74,3.469,75,3.469,76,3.469,77,2.863,78,3.469,79,3.469,80,3.469,81,2.167,82,2.465,83,1.413,84,1.929,85,0.491,86,0.627,87,0.028,88,0.028]],["title/interfaces/DbReaction.html",[89,0.686,90,1.697]],["body/interfaces/DbReaction.html",[7,0.037,13,0.564,14,0.564,15,0.412,85,0.646,87,0.033,88,0.033,89,1.026,90,2.97,91,2.278,92,3.243,93,3.768,94,0.922,95,1.624,96,5.839,97,5.839,98,1.832,99,1.201]],["title/interfaces/DbUserHighlight.html",[89,0.686,100,1.697]],["body/interfaces/DbUserHighlight.html",[7,0.038,13,0.479,14,0.479,15,0.349,85,0.548,87,0.03,88,0.03,89,0.87,91,1.932,92,2.751,94,0.782,95,1.47,98,1.911,99,1.358,100,2.689,101,1.067,102,3.196,103,4.559,104,5.523,105,2.756,106,2.04,107,3.071,108,5.523,109,3.45,110,3.924,111,2.486,112,5.523,113,2.373,114,3.294,115,1.836]],["title/modules/GithubModule.html",[0,0.761,116,1.523]],["body/modules/GithubModule.html",[0,1.298,2,1.614,3,2.344,7,0.038,10,2.598,11,2.181,12,1.78,13,0.54,14,0.54,15,0.395,17,2.181,18,0.941,20,0.79,84,2.895,85,0.619,86,0.79,87,0.032,88,0.032,116,3.009,117,3.608,118,3.608,119,3.608,120,2.076,121,4.371,122,4.298,123,4.371]],["title/injectables/GithubService.html",[120,1.023,124,0.841]],["body/injectables/GithubService.html",[7,0.039,13,0.39,14,0.39,15,0.284,18,1.013,20,0.569,23,1.968,36,2.984,37,2.601,53,2.239,57,1.191,85,0.446,86,0.569,87,0.026,88,0.026,94,0.637,95,1.287,98,1.754,99,1.074,101,1.407,115,1.704,120,1.418,124,1.166,125,1.752,126,2.601,127,1.704,128,4.777,129,2.548,130,1.904,131,1.934,132,3.628,133,3.628,134,5.696,135,1.418,136,3.151,137,4.215,138,2.469,139,4.231,140,2.384,141,2.15,142,4.231,143,2.658,144,3.151,145,2.643,146,2.15,147,2.643,148,4.231,149,3.151,150,1.904,151,1.563,152,3.151,153,1.572,154,1.572,155,1.553,156,4.231,157,3.151,158,3.493,159,2.111,160,1.764,161,1.572,162,4.231,163,3.151,164,3.151,165,3.151,166,3.151,167,2.239,168,3.151,169,3.151,170,3.151,171,1.878,172,1.968,173,1.283,174,1.968,175,1.968,176,1.968,177,1.752,178,3.493,179,3.19,180,3.151,181,1.764,182,4.231,183,1.316,184,3.151,185,2.643,186,3.151,187,1.572,188,3.151,189,3.151,190,3.151]],["title/controllers/HealthController.html",[191,0.841,192,1.906]],["body/controllers/HealthController.html",[7,0.039,13,0.41,14,0.41,15,0.299,18,0.942,20,0.599,22,4.046,23,2.072,27,2.357,77,2.738,81,2.735,82,3.85,83,1.351,85,0.47,86,0.599,87,0.027,88,0.027,94,0.67,115,1.008,127,1.692,130,1.971,131,2.045,135,1.112,138,1.971,146,1.971,147,2.735,183,1.206,191,0.914,192,2.735,193,2.738,194,2.357,195,5.566,196,5.676,197,5.566,198,3.111,199,3.317,200,4.378,201,3.703,202,2.601,203,2.898,204,4.378,205,3.317,206,3.317,207,4.378,208,3.317,209,4.378,210,4.378,211,4.378,212,4.901,213,4.378,214,4.378,215,3.482,216,3.482,217,2.357,218,2.357,219,3.317,220,3.317,221,3.317,222,3.317,223,3.317,224,3.317,225,3.111,226,4.378,227,4.378,228,3.317,229,3.317,230,3.317,231,3.317,232,3.317,233,3.317,234,4.378,235,3.317,236,3.317,237,3.317,238,3.317,239,3.317,240,3.317,241,3.317,242,3.317,243,3.317,244,3.317,245,3.317,246,3.317,247,3.317,248,3.317,249,3.317,250,3.317]],["title/modules/HealthModule.html",[0,0.761,251,2.168]],["body/modules/HealthModule.html",[0,1.332,2,1.686,7,0.038,13,0.564,14,0.564,15,0.412,17,2.278,18,1.023,20,0.825,26,4.41,27,3.243,83,2.176,85,0.646,86,0.825,87,0.033,88,0.033,192,3.538,251,3.795,252,4.564,253,4.564]],["title/controllers/HighlightCardController.html",[191,0.841,254,1.906]],["body/controllers/HighlightCardController.html",[7,0.039,13,0.332,14,0.332,15,0.242,18,0.862,20,0.485,41,2.9,47,2.605,51,1.269,57,0.944,83,1.092,85,0.38,86,0.485,87,0.023,88,0.023,94,0.542,99,1.131,105,2.9,106,2.086,111,1.207,115,0.815,127,0.815,130,1.704,131,1.749,135,0.899,138,1.704,140,1.889,141,1.704,146,1.704,151,1.761,155,1.151,167,1.905,171,1.471,173,1.542,181,1.621,183,1.209,185,2.365,191,0.739,194,1.905,198,2.69,201,3.388,215,2.69,216,3.119,217,1.905,218,1.905,225,2.69,254,2.365,255,1.335,256,1.905,257,2.214,258,4.389,259,5.03,260,2.682,261,2.349,262,4.662,263,4.429,264,2.682,265,3.787,266,3.936,267,3.936,268,3.388,269,3.936,270,3.601,271,2.106,272,2.682,273,3.812,274,2.69,275,3.893,276,2.214,277,3.126,278,3.126,279,2.214,280,3.119,281,2.682,282,4.769,283,2.214,284,2.682,285,2.682,286,2.682,287,3.126,288,2.69,289,2.214,290,2.214,291,3.623,292,3.959,293,2.214,294,2.214,295,3.126,296,2.682,297,2.682,298,2.682,299,2.214,300,2.214,301,2.214,302,4.389,303,3.126,304,4.389,305,3.126,306,3.126,307,3.623,308,3.126,309,2.214,310,1.976,311,1.338,312,2.682,313,2.682,314,1.675,315,2.682,316,1.675,317,2.214,318,2.214,319,2.214,320,3.787,321,3.126,322,1.976,323,1.976,324,2.146,325,3.787,326,2.214,327,2.682,328,2.214,329,2.682,330,3.126,331,3.126,332,3.126,333,2.682,334,1.207,335,3.126,336,3.126,337,2.69,338,2.214,339,2.214,340,2.214,341,1.905,342,2.214,343,2.214]],["title/interfaces/HighlightCardData.html",[89,0.686,344,1.906]],["body/interfaces/HighlightCardData.html",[7,0.039,13,0.283,14,0.283,15,0.362,18,1.038,20,0.413,25,0.932,42,0.845,44,0.93,45,0.695,47,1.684,51,0.766,57,0.57,85,0.324,86,0.413,87,0.021,88,0.021,89,0.514,90,1.272,91,1.141,94,0.462,95,1.026,98,1.7,99,1.205,100,1.272,101,1.105,105,1.141,106,1.482,107,1.272,109,3.278,110,3.807,111,2.225,113,1.029,115,1.347,120,1.344,124,0.93,127,1.436,129,1.684,131,1.484,135,0.766,143,2.551,145,1.429,151,1.482,155,1.22,159,1.141,160,1.636,161,1.141,171,2.012,173,1.634,181,2.105,183,1.22,187,1.684,191,0.63,255,0.695,261,2.517,271,1.272,310,1.029,311,1.141,322,1.806,323,1.806,324,1.029,334,2.225,344,2.506,345,1.141,346,2.467,347,3.278,348,2.551,349,2.843,350,3.807,351,1.272,352,1.272,353,2.231,354,1.877,355,1.272,356,1.272,357,1.806,358,1.272,359,1.272,360,1.272,361,1.344,362,1.141,363,1.029,364,1.877,365,1.029,366,1.029,367,1.519,368,1.272,369,1.888,370,1.888,371,1.429,372,1.888,373,1.272,374,2.786,375,1.888,376,1.888,377,1.519,378,2.002,379,1.272,380,1.888,381,2.786,382,1.888,383,1.888,384,1.888,385,1.888,386,1.888,387,1.888,388,2.786,389,1.888,390,1.888,391,1.806,392,2.786,393,1.888,394,1.888,395,1.888,396,1.888,397,2.786,398,1.888,399,1.888,400,1.272,401,1.272,402,1.272,403,1.888,404,1.888,405,1.141,406,1.141,407,0.932,408,1.141,409,1.272,410,0.932,411,1.272,412,3.311,413,1.877,414,1.272,415,1.272,416,1.272,417,1.888,418,1.272,419,1.888,420,1.272,421,1.888,422,1.625,423,1.877,424,1.272,425,1.877,426,1.272,427,1.684,428,1.272,429,1.141,430,1.272,431,1.272,432,1.272,433,1.272,434,1.141,435,1.272,436,1.272,437,0.932,438,1.272,439,1.272,440,1.272,441,1.272,442,1.272,443,1.272,444,1.141,445,1.272,446,1.272,447,1.272,448,1.272,449,1.272,450,1.141,451,1.888,452,1.272,453,1.272,454,1.877,455,1.272,456,1.272,457,1.888,458,1.888,459,2.786,460,1.888,461,2.786,462,1.888,463,1.888,464,1.272,465,1.272,466,1.888,467,1.888,468,1.888,469,1.888,470,1.272,471,1.272,472,1.141,473,1.888,474,1.272]],["title/modules/HighlightCardModule.html",[0,0.761,6,1.697]],["body/modules/HighlightCardModule.html",[0,1.24,2,1.496,3,2.238,6,3.381,7,0.038,8,2.639,10,2.482,11,2.021,12,1.65,13,0.501,14,0.501,15,0.486,17,2.482,18,1.059,20,0.732,24,3.533,25,1.65,44,1.116,45,1.232,46,2.878,47,2.685,83,2.026,84,2.765,85,0.574,86,0.732,87,0.031,88,0.031,105,2.482,116,2.925,254,3.361,255,1.232,310,2.639,311,2.021,475,3.344,476,4.051,477,3.344,478,3.344,479,3.344,480,3.344]],["title/injectables/HighlightCardService.html",[124,0.841,310,1.373]],["body/injectables/HighlightCardService.html",[7,0.039,13,0.264,14,0.264,15,0.348,18,1.026,20,0.386,25,0.871,42,0.79,44,0.885,45,0.65,47,2.809,51,0.717,57,1.202,85,0.303,86,0.386,87,0.02,88,0.02,89,0.481,90,1.189,94,0.432,95,0.976,98,1.303,99,1.032,100,1.189,101,1.062,105,1.067,106,1.696,107,1.189,109,2.868,110,3.426,111,1.735,113,0.962,115,1.466,120,1.676,124,0.885,125,1.189,127,1.6,129,2.138,130,1.445,131,1.848,135,1.076,138,2.171,140,2.291,141,2.067,143,2.138,145,1.336,146,1.929,147,1.336,151,1.781,153,1.067,154,1.067,155,1.303,159,1.067,160,1.186,161,1.067,171,1.997,173,0.871,181,2.079,183,1.181,187,1.602,191,0.589,255,1.521,261,2.574,271,1.189,310,1.445,311,1.067,322,1.735,323,1.735,324,0.962,334,2.171,344,2.676,345,1.067,346,1.924,347,2.868,348,2.138,349,2.383,350,3.426,351,1.189,352,1.189,353,2.682,354,1.785,355,1.189,356,1.189,357,1.735,358,1.189,359,1.189,360,1.189,361,1.676,362,1.067,363,0.962,364,1.785,365,0.962,366,0.962,367,1.445,368,1.189,369,1.765,370,1.765,371,1.336,372,1.765,373,1.189,374,2.65,375,1.765,376,1.765,377,1.445,378,1.924,379,1.785,380,3.182,381,3.537,382,1.765,383,1.765,384,1.765,385,1.765,386,1.765,387,1.765,388,2.65,389,1.765,390,1.765,391,1.735,392,2.65,393,1.765,394,1.765,395,1.765,396,1.765,397,2.65,398,1.765,399,1.765,400,1.189,401,1.189,402,1.189,403,1.765,404,1.765,405,1.067,406,1.067,407,0.871,408,1.067,409,1.189,410,0.871,411,2.144,412,3.79,413,1.785,414,1.189,415,1.189,416,1.189,417,1.765,418,1.189,419,1.765,420,1.189,421,1.765,422,1.519,423,1.785,424,1.189,425,1.785,426,1.189,427,1.602,428,1.189,429,1.067,430,1.189,431,1.189,432,1.189,433,1.189,434,1.067,435,1.189,436,1.189,437,0.871,438,1.189,439,1.189,440,1.189,441,1.189,442,1.189,443,1.189,444,1.067,445,1.189,446,1.189,447,1.189,448,1.189,449,2.144,450,1.067,451,1.765,452,1.189,453,1.189,454,1.785,455,1.189,456,1.189,457,1.765,458,1.765,459,2.65,460,1.765,461,2.65,462,1.765,463,1.765,464,1.189,465,1.189,466,1.765,467,1.765,468,1.765,469,1.765,470,1.189,471,1.189,472,1.067,473,3.182,474,1.189,481,1.765,482,3.211,483,2.138,484,2.138,485,2.138,486,2.138,487,1.519,488,2.138,489,2.138,490,2.138,491,2.138]],["title/interfaces/RequiresUpdateMeta.html",[89,0.686,377,1.373]],["body/interfaces/RequiresUpdateMeta.html",[7,0.039,13,0.302,14,0.302,15,0.376,18,1.013,20,0.441,25,0.995,42,1.308,44,0.976,45,0.743,51,0.818,57,1.038,85,0.59,86,0.441,87,0.022,88,0.022,89,0.796,91,1.219,94,0.493,95,1.077,98,1.656,99,1.027,101,0.976,106,1.308,113,2.057,114,3.16,115,1.389,120,1.396,124,0.976,127,1.475,129,1.767,131,1.531,135,0.818,150,2.277,151,1.539,155,1.538,159,1.219,160,1.688,161,1.219,171,1.995,172,1.525,173,1.861,174,2.212,175,2.212,176,1.525,177,1.358,181,2.012,183,1.148,187,1.767,191,0.673,255,0.743,261,1.594,322,2.349,323,2.349,324,2.183,334,2.491,345,1.219,346,2.079,348,2.421,349,2.813,351,1.358,352,1.358,353,2.317,354,1.969,355,1.358,356,1.358,357,1.594,358,1.358,359,1.358,360,1.358,361,1.396,362,1.219,363,1.099,364,1.969,365,1.099,366,2.057,367,1.594,368,1.358,373,1.358,377,1.875,378,1.767,379,1.358,391,1.099,400,1.358,401,2.317,402,1.358,405,1.219,406,1.219,407,0.995,408,1.219,409,1.358,410,0.995,411,1.358,413,1.969,414,1.358,415,1.358,416,1.358,418,1.358,420,1.358,423,1.969,424,1.358,425,1.969,426,1.358,427,1.767,428,1.358,429,1.219,430,1.358,431,1.358,432,1.358,433,1.358,434,1.219,435,1.358,436,1.358,437,0.995,438,1.358,439,1.358,440,1.358,441,1.358,442,1.358,443,1.358,444,1.219,445,1.358,446,1.358,447,1.358,448,1.358,449,1.358,450,1.219,452,1.358,453,1.358,454,1.969,455,1.358,456,1.358,464,1.358,465,1.358,470,1.358,471,1.358,472,1.219,474,1.358,492,1.358,493,1.735,494,1.099,495,1.969,496,1.735,497,1.735,498,3.247,499,0.995,500,1.735,501,1.525,502,1.735,503,1.735,504,1.735,505,1.735,506,1.735,507,1.735,508,1.735,509,1.735,510,1.735,511,1.735,512,1.735,513,1.735,514,1.735,515,1.735,516,1.735,517,1.735,518,1.735,519,1.735,520,1.735,521,1.735,522,2.96,523,1.735,524,1.735,525,1.735,526,2.079,527,1.735,528,2.516,529,1.735,530,1.735,531,1.735,532,1.525,533,1.525,534,1.735,535,1.735]],["title/modules/S3FileStorageModule.html",[0,0.761,8,1.373]],["body/modules/S3FileStorageModule.html",[0,1.289,2,1.596,3,2.328,7,0.038,8,2.708,10,2.581,11,2.156,12,1.76,13,0.534,14,0.534,15,0.518,17,2.156,18,0.934,20,0.781,44,1.191,45,1.314,84,2.876,85,0.612,86,0.781,87,0.032,88,0.032,122,4.269,361,2.073,362,2.156,536,3.567,537,3.567,538,3.567,539,3.07,540,4.321]],["title/injectables/S3FileStorageService.html",[124,0.841,361,1.023]],["body/injectables/S3FileStorageService.html",[7,0.039,13,0.309,14,0.309,15,0.537,18,0.885,20,0.452,23,1.561,38,1.561,39,2.063,40,2.063,44,1.163,45,1.666,51,0.837,53,1.775,55,2.972,57,1.22,85,0.354,86,0.452,87,0.022,88,0.022,94,0.505,95,1.095,98,1.792,99,1.146,113,2.203,115,1.404,124,0.992,125,1.389,127,1.404,130,1.62,131,1.907,135,1.207,137,3.812,138,2.421,140,2.443,141,2.203,146,2.079,151,1.986,153,1.796,154,1.796,155,1.488,171,1.207,181,1.706,183,1.405,271,2.722,347,1.561,361,1.207,405,2.622,450,2.865,472,1.796,487,1.775,501,2.636,539,3.893,541,2.063,542,4.22,543,4.22,544,5.099,545,4.22,546,4.22,547,4.22,548,4.22,549,2.499,550,2.499,551,2.499,552,2.499,553,2.499,554,2.499,555,2.499,556,2.499,557,2.499,558,4.22,559,4.618,560,4.895,561,2.499,562,4.22,563,2.499,564,2.499,565,2.499,566,4.618,567,3.6,568,2.063,569,2.499,570,2.499,571,2.499,572,2.499,573,2.499,574,2.499,575,2.499,576,2.499,577,2.499,578,2.499,579,2.499,580,1.775,581,2.499,582,2.063,583,2.499,584,2.063,585,2.499,586,2.063,587,2.499,588,2.063,589,2.499,590,4.22,591,4.618,592,3.812,593,4.618,594,4.618,595,4.22,596,5.691,597,4.22,598,4.22,599,4.22,600,4.22,601,3.6,602,2.499,603,2.499,604,2.499,605,2.499]],["title/controllers/UserCardController.html",[191,0.841,606,1.906]],["body/controllers/UserCardController.html",[7,0.039,13,0.339,14,0.339,15,0.247,18,0.87,20,0.495,41,2.911,42,1.941,51,1.288,57,0.958,83,1.116,85,0.388,86,0.495,87,0.024,88,0.024,94,0.554,98,1.598,99,1.14,101,1.543,111,1.233,115,0.833,127,0.833,130,1.73,131,1.762,135,0.918,138,1.73,140,1.918,141,1.73,146,1.73,150,2.43,151,1.778,155,1.169,167,1.947,171,1.699,173,1.566,181,1.64,183,1.224,185,2.401,191,0.755,194,1.947,198,2.731,201,3.42,215,2.731,216,3.155,217,1.947,218,1.947,225,2.731,255,1.35,256,1.947,262,4.683,263,4.456,266,3.974,267,3.974,268,3.42,269,3.974,270,3.615,271,2.138,273,3.835,274,2.731,275,3.735,276,2.262,277,3.173,278,3.173,279,2.262,280,3.155,283,2.262,287,3.173,288,2.731,289,2.262,290,2.262,291,3.666,292,3.835,293,2.262,294,2.262,295,3.173,299,2.262,300,2.262,301,2.262,303,3.173,305,3.173,306,3.173,307,3.666,308,3.173,309,2.262,311,1.367,314,1.712,316,1.712,317,2.262,318,2.262,319,2.262,321,3.173,322,1.999,323,1.999,324,2.167,326,2.262,328,2.262,330,3.173,331,3.173,332,3.173,334,1.233,335,3.173,336,3.173,337,2.731,338,2.262,339,2.262,340,2.262,341,1.947,342,2.262,343,2.262,499,1.809,606,2.401,607,2.262,608,4.441,609,5.07,610,2.74,611,2.74,612,3.844,613,2.74,614,2.74,615,2.74,616,2.74,617,2.74,618,2.74,619,2.74,620,2.74,621,2.74,622,3.844,623,3.844,624,3.844,625,3.844,626,2.74,627,2.74]],["title/interfaces/UserCardData.html",[89,0.686,495,1.697]],["body/interfaces/UserCardData.html",[7,0.039,13,0.299,14,0.299,15,0.374,18,1.011,20,0.437,25,0.985,42,1.299,44,0.969,45,0.735,51,0.811,57,1.257,85,0.587,86,0.437,87,0.022,88,0.022,89,0.791,91,1.207,94,0.489,95,1.069,98,1.701,99,1.087,101,0.969,106,1.785,113,1.583,114,2.197,115,1.383,120,1.389,124,0.969,127,1.469,129,1.755,131,1.524,135,0.811,150,2.269,151,1.53,155,1.533,159,1.207,160,1.862,161,1.207,171,1.992,172,1.511,173,1.432,174,2.197,175,2.197,176,1.511,177,1.345,181,2.007,183,1.142,187,1.755,191,0.667,255,0.735,261,2.047,322,2.047,323,2.047,324,1.583,334,2.342,345,1.207,346,2.516,348,2.66,349,3.022,351,1.345,352,1.345,353,2.304,354,1.955,355,1.345,356,1.345,357,1.583,358,1.345,359,1.345,360,1.345,361,1.389,362,1.207,363,1.089,364,1.955,365,1.089,366,2.342,367,1.583,368,1.345,373,1.345,377,1.583,378,1.755,379,1.345,391,1.089,400,1.345,401,2.304,402,1.345,405,1.207,406,1.207,407,0.985,408,1.207,409,1.345,410,0.985,411,1.345,413,1.955,414,1.345,415,1.345,416,1.345,418,1.345,420,1.345,423,1.955,424,1.345,425,1.955,426,1.345,427,1.755,428,1.345,429,1.207,430,1.345,431,1.345,432,1.345,433,1.345,434,1.207,435,1.345,436,1.345,437,0.985,438,1.345,439,1.345,440,1.345,441,1.345,442,1.345,443,1.345,444,1.207,445,1.345,446,1.345,447,1.345,448,1.345,449,1.345,450,1.207,452,1.345,453,1.345,454,1.955,455,1.345,456,1.345,464,1.345,465,1.345,470,1.345,471,1.345,472,1.207,474,1.345,492,1.345,493,1.719,494,1.089,495,2.304,496,1.719,497,1.719,498,3.697,499,0.985,500,1.719,501,1.511,502,1.719,503,1.719,504,1.719,505,1.719,506,1.719,507,1.719,508,1.719,509,1.719,510,1.719,511,1.719,512,1.719,513,1.719,514,1.719,515,1.719,516,1.719,517,1.719,518,1.719,519,1.719,520,1.719,521,1.719,522,2.944,523,1.719,524,1.719,525,1.719,526,2.068,527,1.719,528,2.499,529,1.719,530,1.719,531,1.719,532,1.511,533,1.511,534,1.719,535,1.719]],["title/modules/UserCardModule.html",[0,0.761,9,1.697]],["body/modules/UserCardModule.html",[0,1.241,2,1.499,3,2.241,7,0.038,8,2.64,9,3.382,10,2.484,11,2.025,12,1.653,13,0.502,14,0.502,15,0.486,17,2.484,18,1.06,20,0.733,24,3.537,25,1.653,42,1.839,44,1.118,45,1.234,46,2.883,83,2.028,84,2.768,85,0.575,86,0.733,87,0.031,88,0.031,101,1.372,116,2.927,255,1.234,311,2.025,478,3.35,479,3.35,480,3.35,499,2.389,606,3.364,628,3.35,629,4.058,630,3.35]],["title/injectables/UserCardService.html",[124,0.841,499,1.243]],["body/injectables/UserCardService.html",[7,0.039,13,0.273,14,0.273,15,0.354,18,0.991,20,0.398,25,0.898,42,2.091,44,0.905,45,0.67,51,0.739,57,1.294,85,0.556,86,0.398,87,0.02,88,0.02,89,0.739,94,0.446,95,0.999,98,1.736,99,1.046,101,0.905,106,1.213,113,1.479,114,2.052,115,1.483,120,1.693,124,0.905,125,1.226,127,1.613,129,2.171,130,1.479,131,1.86,135,1.101,138,2.195,140,2.321,141,2.094,146,1.958,147,1.377,150,2.431,151,1.801,153,1.1,154,1.1,155,1.536,159,1.1,160,1.607,161,1.1,171,1.969,172,1.377,173,1.338,174,2.052,175,2.052,176,1.377,177,1.226,181,1.96,183,1.082,187,1.639,191,0.608,255,1.536,261,1.479,322,1.958,323,1.958,324,1.479,334,2.274,345,1.1,346,1.959,348,2.321,349,2.712,351,1.226,352,1.226,353,2.712,354,1.827,355,1.226,356,1.226,357,1.479,358,1.226,359,1.226,360,1.226,361,1.693,362,1.1,363,0.992,364,1.827,365,0.992,366,1.958,367,1.479,368,1.226,373,1.226,377,1.479,378,1.639,379,1.827,391,0.992,400,1.226,401,2.183,402,1.226,405,1.1,406,1.1,407,0.898,408,1.1,409,1.226,410,0.898,411,2.183,413,1.827,414,1.226,415,1.226,416,1.226,418,1.226,420,1.226,423,1.827,424,1.226,425,1.827,426,1.226,427,1.639,428,1.226,429,1.1,430,1.226,431,1.226,432,1.226,433,1.226,434,1.1,435,1.226,436,1.226,437,0.898,438,1.226,439,1.226,440,1.226,441,1.226,442,1.226,443,1.226,444,1.1,445,1.226,446,1.226,447,1.226,448,1.226,449,2.183,450,1.1,452,1.226,453,1.226,454,1.827,455,1.226,456,1.226,464,1.226,465,1.226,470,1.226,471,1.226,472,1.1,474,1.226,481,1.82,487,1.567,492,1.226,493,1.567,494,0.992,495,2.419,496,1.567,497,1.567,498,3.091,499,1.338,500,2.789,501,1.377,502,1.567,503,1.567,504,1.567,505,1.567,506,1.567,507,1.567,508,1.567,509,1.567,510,1.567,511,1.567,512,1.567,513,1.567,514,1.567,515,1.567,516,1.567,517,1.567,518,1.567,519,1.567,520,1.567,521,1.567,522,3.305,523,1.567,524,1.567,525,1.567,526,1.959,527,1.567,528,2.334,529,1.567,530,1.567,531,1.567,532,1.377,533,1.377,534,1.567,535,2.789,631,3.285,632,2.205,633,2.205,634,2.205,635,2.205,636,2.205,637,2.205,638,2.205,639,2.205]],["title/changelog.html",[640,1.599,641,1.819,642,2.113]],["body/changelog.html",[0,0.645,3,1.454,7,0.038,15,0.292,41,1.291,44,1.186,57,1.073,81,1.011,87,0.016,88,0.016,99,0.364,101,1.186,105,1.291,106,0.955,107,0.9,111,1.164,143,2.147,150,2.112,154,0.808,155,0.492,158,2.667,177,0.9,183,0.89,202,0.808,257,2.135,268,1.838,270,2.52,273,2.622,274,1.838,280,1.15,314,2.52,337,1.15,357,1.661,366,1.164,407,1.644,410,1.054,434,0.808,437,0.659,494,1.164,526,1.291,532,1.616,533,1.616,580,1.838,592,2.135,640,1.616,642,1.336,643,1.618,644,1.618,645,3.231,646,1.336,647,1.618,648,2.135,649,4.887,650,4.838,651,2.135,652,5.604,653,5.604,654,5.947,655,2.587,656,2.587,657,3.873,658,2.587,659,3.729,660,3.231,661,2.587,662,2.135,663,4.303,664,2.587,665,4.035,666,4.517,667,4.303,668,2.587,669,2.587,670,3.046,671,2.587,672,2.587,673,5.309,674,2.587,675,2.587,676,4.303,677,2.135,678,2.587,679,2.587,680,3.691,681,2.587,682,2.587,683,2.587,684,3.729,685,2.587,686,2.587,687,2.587,688,2.587,689,2.587,690,3.691,691,2.587,692,2.587,693,2.587,694,2.587,695,2.587,696,2.587,697,2.587,698,2.587,699,5.934,700,3.231,701,1.618,702,3.691,703,1.618,704,3.231,705,3.231,706,4.517,707,2.587,708,2.587,709,4.961,710,2.135,711,2.587,712,2.587,713,2.867,714,2.587,715,3.691,716,3.331,717,2.587,718,2.135,719,2.587,720,2.587,721,2.587,722,3.691,723,3.691,724,3.046,725,3.046,726,2.135,727,2.587,728,2.667,729,2.587,730,2.135,731,4.258,732,3.691,733,2.587,734,2.587,735,2.587,736,2.622,737,4.517,738,2.135,739,2.587,740,2.587,741,2.622,742,2.587,743,2.667,744,3.691,745,2.135,746,2.587,747,3.552,748,3.552,749,3.046,750,2.587,751,2.135,752,2.135,753,2.667,754,2.587,755,2.587,756,4.035,757,3.231,758,2.587,759,2.587,760,2.587,761,2.587,762,2.587,763,2.587,764,2.587,765,2.135,766,2.587,767,2.587,768,3.691,769,2.587,770,2.587,771,2.587,772,2.135,773,2.135,774,2.587,775,2.587,776,2.587,777,2.587,778,2.587,779,2.135,780,2.587,781,2.587,782,3.691,783,3.046,784,2.587,785,2.587,786,2.135,787,2.587,788,2.587,789,2.135,790,2.587,791,2.587,792,2.587,793,3.691,794,2.587,795,2.587,796,2.587,797,2.587,798,2.587,799,2.587,800,3.691,801,1.838,802,2.587,803,2.587,804,2.587,805,2.135,806,3.231,807,3.231,808,2.587,809,2.587,810,2.587,811,2.135,812,2.587,813,2.667,814,4.961,815,1.618,816,1.618,817,1.618,818,1.618,819,1.618,820,1.618,821,1.618,822,2.587,823,2.587,824,1.618,825,1.618,826,1.618,827,1.336,828,1.618,829,1.618,830,1.618,831,2.587,832,1.618,833,1.618,834,1.336,835,2.667,836,1.618,837,1.618,838,1.618,839,1.618,840,1.618,841,1.618,842,1.618,843,1.618,844,1.336,845,1.618,846,1.618,847,1.618,848,1.618,849,3.231,850,1.618,851,1.618,852,1.618,853,1.618,854,1.618,855,1.618,856,2.587,857,1.618,858,1.618,859,1.618,860,1.618,861,1.618,862,1.618,863,1.618,864,1.618,865,1.618,866,1.618,867,2.587,868,1.618,869,1.618,870,1.15,871,1.618,872,1.618,873,1.618,874,1.618,875,1.618,876,2.587,877,1.618,878,1.618,879,1.618,880,1.618,881,1.618,882,1.618,883,1.618,884,1.618,885,1.618,886,1.336,887,1.618,888,1.618,889,1.618,890,1.336,891,1.336,892,1.618,893,1.618,894,1.618,895,2.667,896,1.618,897,1.618,898,1.618,899,1.618,900,1.618,901,1.618,902,2.587,903,1.618,904,2.667,905,1.618,906,1.15,907,1.618,908,1.618,909,1.618,910,1.336,911,1.618,912,1.618,913,2.135,914,1.336,915,1.618,916,1.618,917,1.336,918,1.618,919,1.618,920,1.618,921,1.618,922,1.336,923,1.618,924,1.618,925,1.618,926,1.618,927,1.336,928,1.618,929,1.618]],["title/coverage.html",[930,3.418]],["body/coverage.html",[7,0.038,15,0.442,34,2.35,36,2.066,38,2.066,42,2.126,45,1.006,47,2.775,87,0.027,88,0.027,89,1.217,90,1.839,92,3.105,93,2.73,99,0.744,100,1.839,101,0.911,102,2.73,120,1.108,124,1.435,126,2.73,132,2.35,133,2.35,155,1.006,191,1.349,192,2.066,193,2.73,254,2.066,255,1.848,256,3.105,310,1.489,344,2.066,345,2.701,361,1.108,363,1.489,365,1.489,367,1.489,371,2.066,377,1.489,391,2.8,437,1.347,492,1.839,494,1.489,495,1.839,499,1.347,539,2.35,541,2.73,606,2.066,736,2.35,801,2.35,930,2.73,931,3.307,932,3.307,933,2.73,934,4.978,935,6.056,936,2.73,937,2.73,938,2.73,939,5.206,940,3.307,941,4.894,942,3.607,943,2.73,944,2.73,945,2.73,946,3.307,947,2.73,948,3.307,949,3.307,950,2.73,951,3.607,952,4.04,953,3.607,954,2.73,955,2.73,956,2.73,957,2.73,958,2.73,959,2.73,960,2.73,961,3.607,962,2.73,963,2.73,964,2.73,965,2.73,966,3.307,967,3.307,968,3.307,969,3.307]],["title/miscellaneous/functions.html",[870,2.603,970,1.599]],["body/miscellaneous/functions.html",[7,0.034,87,0.034,88,0.034,94,0.971,870,3.415,945,3.967,947,4.774,970,3.002,971,4.806]],["title/index.html",[94,0.517,640,1.599,641,1.819]],["body/index.html",[7,0.037,12,1.164,14,0.353,15,0.258,41,1.975,44,0.787,51,0.958,57,0.712,81,1.785,82,3.483,87,0.024,88,0.024,89,0.642,101,1.091,127,0.869,141,1.286,143,1.426,153,1.975,160,1.462,179,3.216,202,2.658,203,2.726,288,2.03,314,3.062,316,1.785,406,1.426,407,2.097,408,2.266,410,1.612,494,1.286,568,2.359,607,2.359,646,3.267,657,3.749,659,3.749,670,2.359,677,3.267,713,2.03,718,2.359,724,2.359,725,4.047,726,2.359,728,3.267,730,2.359,731,3.267,738,2.359,741,3.784,743,2.359,745,2.359,747,2.359,748,2.359,749,2.359,751,2.359,752,3.749,753,2.359,765,3.267,773,2.359,783,2.359,789,3.267,805,2.359,811,4.047,827,2.359,844,2.359,886,2.359,910,3.749,913,3.749,914,2.359,922,3.749,927,3.267,934,2.359,972,2.812,973,2.359,974,2.857,975,4.047,976,2.857,977,2.857,978,3.958,979,2.857,980,3.958,981,2.857,982,2.857,983,2.857,984,4.541,985,5.83,986,3.958,987,4.25,988,2.359,989,2.857,990,2.857,991,2.857,992,2.857,993,2.857,994,2.857,995,2.857,996,5.567,997,2.857,998,2.857,999,2.359,1000,2.359,1001,2.359,1002,2.857,1003,3.749,1004,2.857,1005,3.958,1006,2.359,1007,2.857,1008,2.857,1009,2.857,1010,2.857,1011,2.857,1012,2.857,1013,2.857,1014,2.857,1015,2.857,1016,2.857,1017,2.857,1018,2.857,1019,2.857,1020,2.857,1021,2.857,1022,2.857,1023,2.857,1024,2.857,1025,2.857,1026,2.857,1027,2.857,1028,2.857,1029,2.857,1030,2.857,1031,2.857,1032,2.857,1033,2.857,1034,2.857,1035,2.857,1036,2.857,1037,2.857,1038,2.857,1039,2.857,1040,2.857,1041,2.857,1042,2.857,1043,2.857,1044,2.857,1045,3.958,1046,2.857,1047,3.958,1048,2.857,1049,3.958,1050,2.857,1051,3.267,1052,2.857,1053,2.857,1054,2.857,1055,2.857,1056,2.857,1057,2.857,1058,2.857,1059,2.857,1060,2.857,1061,2.857,1062,2.857,1063,2.857,1064,2.857,1065,2.857,1066,2.857,1067,2.857,1068,3.958,1069,2.857,1070,4.541,1071,2.857,1072,2.857,1073,2.857,1074,2.857,1075,2.857,1076,2.857,1077,2.857,1078,2.857,1079,2.857,1080,2.857,1081,3.267,1082,2.857,1083,2.857,1084,3.958,1085,3.958,1086,2.857,1087,2.359,1088,3.958,1089,2.857,1090,2.857,1091,2.857,1092,2.857,1093,2.857,1094,2.857,1095,2.857,1096,2.857,1097,2.857,1098,2.857,1099,2.857,1100,2.857,1101,2.857,1102,2.857,1103,2.857,1104,3.958,1105,2.857,1106,2.857,1107,2.857,1108,2.857,1109,2.857,1110,2.857,1111,2.857,1112,2.857,1113,2.857,1114,1.785,1115,2.03]],["title/license.html",[640,1.599,641,1.819,1114,1.599]],["body/license.html",[7,0.031,12,1.659,87,0.031,88,0.031,202,2.032,203,2.265,410,2.032,649,3.362,662,3.362,736,2.894,987,3.362,988,4.993,999,4.119,1006,4.453,1087,4.119,1114,2.544,1115,2.894,1116,5.394,1117,4.073,1118,4.99,1119,4.073,1120,4.073,1121,4.073,1122,4.073,1123,4.073,1124,4.073,1125,4.073,1126,4.073,1127,4.073,1128,4.073,1129,4.073,1130,4.073,1131,4.073,1132,4.073,1133,4.073,1134,4.073,1135,4.073,1136,4.073,1137,4.99,1138,4.073,1139,4.073,1140,4.073,1141,4.073,1142,4.073,1143,4.073,1144,4.99,1145,4.99,1146,4.073,1147,4.073,1148,4.073,1149,4.073,1150,4.073,1151,4.073,1152,4.073,1153,4.073,1154,4.073,1155,4.073,1156,4.073,1157,4.073,1158,4.073,1159,3.362,1160,4.073,1161,4.073,1162,4.073,1163,4.073,1164,4.073,1165,4.073,1166,4.073,1167,4.073,1168,4.073,1169,4.073,1170,4.073,1171,4.073,1172,4.073,1173,4.073,1174,4.073,1175,4.073]],["title/modules.html",[2,1.529]],["body/modules.html",[1,2.868,2,1.696,6,2.554,7,0.033,8,2.067,9,2.554,87,0.033,88,0.033,116,2.291,251,3.263,427,2.974,1176,5.96,1177,5.96,1178,6.034,1179,4.592,1180,4.592]],["title/overview.html",[1181,3.418]],["body/overview.html",[1,3.74,2,1.483,3,2.226,4,3.314,5,3.314,6,3.355,7,0.038,8,2.695,9,3.355,10,2.468,11,2.004,12,1.636,83,1.636,87,0.03,88,0.03,91,2.004,116,2.958,117,3.314,118,3.314,119,3.314,120,1.987,125,2.233,310,2.413,361,1.987,475,3.314,477,3.314,499,2.183,526,2.004,536,3.314,537,3.314,538,3.314,628,3.314,630,3.314,906,2.853,1181,3.314,1182,3.314,1183,3.314]],["title/properties.html",[95,1.114,835,2.113]],["body/properties.html",[7,0.038,41,2.259,87,0.033,88,0.033,95,1.377,160,1.672,202,2.259,203,2.518,270,2.828,292,3.217,648,3.738,917,3.738,972,3.217,973,3.738,1114,2.828,1115,3.217,1159,3.738,1184,4.528,1185,4.528,1186,4.528,1187,4.528,1188,5.317,1189,4.528,1190,4.528,1191,4.528,1192,4.528,1193,4.528,1194,4.528,1195,4.528,1196,4.528,1197,4.528]],["title/miscellaneous/variables.html",[179,2.288,970,1.599]],["body/miscellaneous/variables.html",[7,0.039,13,0.132,34,1.3,36,1.143,38,1.143,57,1.221,87,0.011,88,0.011,94,0.216,98,1.606,99,0.24,103,0.881,106,1.525,107,1.585,109,1.143,111,1.283,132,1.3,133,1.3,143,1.422,145,2.468,150,1.283,153,2.363,154,2.363,160,0.676,171,0.955,178,2.353,179,1.502,183,0.662,185,1.78,202,0.532,203,1.018,255,1.201,261,1.283,275,0.758,316,1.143,341,0.758,346,2.06,347,1.143,348,1.747,350,2.487,357,0.48,363,0.824,365,0.824,366,1.686,367,0.824,371,1.143,378,2.137,391,2.089,407,0.435,422,3.222,429,0.913,437,0.746,444,2.263,492,1.018,494,0.824,526,2.263,580,0.758,582,0.881,584,4.1,586,0.881,588,0.881,651,3.979,684,0.881,710,2.353,713,0.758,716,3.744,741,0.758,772,3.744,779,1.984,786,0.881,801,1.3,813,4.1,834,0.881,890,0.881,891,0.881,895,0.881,904,1.511,906,3.297,933,0.881,936,0.881,937,1.511,938,0.881,942,1.511,943,1.511,944,1.511,950,0.881,951,2.353,952,1.511,953,1.984,954,1.511,955,1.511,956,1.511,957,2.353,958,0.881,959,1.511,960,1.511,961,1.511,962,1.511,963,1.511,964,0.881,965,0.881,970,0.666,972,1.3,975,0.881,1000,0.881,1001,0.881,1003,0.881,1051,0.881,1081,0.881,1182,3.744,1183,4.043,1198,1.067,1199,2.404,1200,1.067,1201,1.83,1202,1.067,1203,1.067,1204,1.067,1205,1.067,1206,2.404,1207,1.067,1208,1.067,1209,1.067,1210,1.067,1211,1.067,1212,1.067,1213,1.067,1214,1.067,1215,1.067,1216,1.067,1217,1.067,1218,1.067,1219,1.067,1220,1.067,1221,1.067,1222,1.067,1223,3.745,1224,1.067,1225,1.067,1226,1.067,1227,1.067,1228,1.067,1229,1.067,1230,1.067,1231,1.067,1232,5.649,1233,1.067,1234,1.067,1235,1.067,1236,1.067,1237,1.067,1238,1.067,1239,1.067,1240,1.83,1241,1.067,1242,1.067,1243,1.067,1244,3.501,1245,1.83,1246,1.067,1247,1.83,1248,1.067,1249,1.83,1250,1.067,1251,1.067,1252,1.83,1253,1.067,1254,1.83,1255,1.067,1256,1.067,1257,1.83,1258,1.067,1259,1.83,1260,1.067,1261,1.067,1262,1.067,1263,1.067,1264,1.067,1265,1.067,1266,1.067,1267,1.067,1268,1.067,1269,1.83,1270,1.067,1271,1.067,1272,1.067,1273,1.067,1274,1.067,1275,1.067,1276,1.067,1277,1.067,1278,1.067,1279,1.067,1280,1.067,1281,1.067,1282,1.067,1283,1.067,1284,1.067,1285,1.067,1286,1.83,1287,1.067,1288,1.067,1289,1.83,1290,1.067,1291,1.067,1292,1.83,1293,1.067,1294,1.067,1295,1.83,1296,1.067,1297,1.067,1298,1.83,1299,1.067,1300,1.83,1301,1.067,1302,1.83,1303,1.067,1304,1.067,1305,1.83,1306,1.067,1307,1.83,1308,1.067,1309,1.067,1310,1.83,1311,1.067,1312,1.83,1313,1.067,1314,1.067,1315,1.067,1316,1.067,1317,1.067,1318,1.067,1319,1.067,1320,1.067,1321,1.067,1322,1.067,1323,1.83,1324,1.067,1325,1.067,1326,1.067,1327,1.067,1328,1.83,1329,1.067,1330,1.067,1331,1.83,1332,1.067,1333,1.83,1334,1.067,1335,1.067,1336,1.067,1337,1.067,1338,1.067,1339,1.067,1340,1.067,1341,1.067,1342,1.067,1343,1.067,1344,1.067,1345,1.067,1346,1.067,1347,1.067,1348,1.067,1349,1.067,1350,1.067,1351,1.067,1352,1.067,1353,1.067,1354,1.067,1355,1.067,1356,1.83,1357,1.067,1358,1.83,1359,3.208,1360,3.208,1361,3.208,1362,2.85,1363,1.83,1364,2.404,1365,1.83,1366,3.208,1367,2.85,1368,1.067,1369,1.067,1370,1.067,1371,1.067,1372,1.067,1373,1.067,1374,1.067,1375,1.067,1376,1.067,1377,1.067,1378,1.067,1379,1.067,1380,1.067,1381,1.067,1382,1.067,1383,1.067,1384,1.067,1385,1.067,1386,1.067,1387,1.067,1388,1.067,1389,1.067,1390,1.067,1391,1.067,1392,1.067,1393,1.067,1394,1.067,1395,1.067,1396,1.067,1397,1.067,1398,1.83,1399,1.067,1400,1.067,1401,2.85,1402,1.067,1403,1.067,1404,1.067,1405,1.067,1406,1.067,1407,1.067,1408,1.067,1409,1.83,1410,1.83,1411,1.067,1412,1.83,1413,1.067,1414,1.067,1415,1.067,1416,1.067,1417,1.067,1418,1.067,1419,1.067,1420,1.067,1421,1.067,1422,1.067,1423,1.83,1424,1.067,1425,1.83,1426,1.067,1427,1.067,1428,1.067,1429,1.067,1430,1.067,1431,1.83,1432,1.83,1433,1.83,1434,1.067,1435,1.83,1436,1.067,1437,1.067,1438,1.067,1439,1.067,1440,1.83,1441,2.85,1442,1.83,1443,2.404,1444,1.83,1445,1.83,1446,1.83,1447,1.83,1448,1.83,1449,1.83,1450,3.208,1451,1.067,1452,2.404,1453,2.404,1454,1.83,1455,1.83,1456,1.067,1457,1.83,1458,1.067,1459,1.067,1460,1.067,1461,1.067,1462,1.067,1463,2.85,1464,4.641,1465,2.404,1466,2.85,1467,3.208,1468,1.067,1469,1.83,1470,3.501,1471,1.067,1472,2.404,1473,1.067,1474,1.83,1475,2.85,1476,1.067,1477,2.404,1478,1.83,1479,1.067,1480,1.83,1481,1.83,1482,1.067,1483,4.536,1484,1.067,1485,1.067,1486,1.067,1487,3.501,1488,1.067,1489,1.067,1490,1.067,1491,1.067,1492,1.83,1493,1.067,1494,1.83,1495,3.208,1496,1.067,1497,1.067,1498,1.067,1499,1.067,1500,1.83,1501,1.067,1502,1.067,1503,1.067,1504,1.067,1505,1.067,1506,1.067,1507,1.067,1508,1.067,1509,2.85,1510,1.067,1511,1.067,1512,1.067,1513,1.067,1514,1.067,1515,1.067,1516,1.83,1517,1.067,1518,1.067,1519,1.067,1520,1.067,1521,1.83,1522,1.067,1523,1.067,1524,2.404,1525,1.067,1526,1.067,1527,1.067,1528,1.067,1529,1.067,1530,4.821,1531,1.83,1532,1.067,1533,1.067,1534,3.208,1535,1.067,1536,1.067,1537,1.067,1538,1.067,1539,1.067,1540,1.067,1541,3.501,1542,3.951,1543,2.404,1544,1.067,1545,1.067,1546,1.83,1547,1.067,1548,1.83,1549,1.067,1550,1.83,1551,1.067,1552,1.067,1553,1.067,1554,1.067,1555,1.067,1556,1.067,1557,1.067,1558,1.067,1559,1.067,1560,2.85,1561,1.067,1562,1.067,1563,1.83,1564,2.85,1565,1.83,1566,1.067,1567,2.85,1568,1.83,1569,1.067,1570,1.83,1571,1.067,1572,1.067,1573,1.83,1574,1.067,1575,1.067,1576,1.83,1577,1.067,1578,3.745,1579,1.83,1580,1.83,1581,1.067,1582,1.83,1583,1.83,1584,1.067,1585,1.067,1586,1.067,1587,1.83,1588,1.067,1589,1.83,1590,1.83,1591,1.067,1592,1.067,1593,1.067,1594,1.067,1595,1.83,1596,1.067,1597,1.067,1598,1.067,1599,1.067,1600,1.83,1601,1.067,1602,1.067,1603,1.067,1604,1.067,1605,3.501,1606,1.067,1607,1.067,1608,1.83,1609,1.067,1610,1.067,1611,1.067,1612,1.067,1613,1.067,1614,1.067,1615,1.067,1616,1.067,1617,1.067,1618,1.83,1619,1.067,1620,1.067,1621,1.067,1622,1.067,1623,1.067,1624,1.067,1625,1.067,1626,1.067,1627,1.067,1628,1.067,1629,1.067,1630,1.83,1631,1.067,1632,1.067,1633,1.067,1634,1.067,1635,1.067,1636,1.067,1637,1.067,1638,1.067,1639,1.067,1640,1.067,1641,1.067,1642,1.067,1643,1.067,1644,1.067,1645,1.067,1646,1.067,1647,1.067,1648,2.404,1649,1.067,1650,2.85,1651,1.83,1652,1.067,1653,1.067,1654,1.067,1655,1.067,1656,1.067,1657,1.067,1658,1.067,1659,1.067,1660,1.067,1661,1.067,1662,1.067,1663,1.067,1664,1.067,1665,1.067,1666,1.067,1667,1.067,1668,1.067,1669,1.067,1670,1.067,1671,1.067,1672,1.067,1673,1.067,1674,1.067,1675,1.067,1676,1.067,1677,1.067,1678,1.067,1679,1.067,1680,1.067,1681,1.067,1682,1.067,1683,1.067,1684,1.067,1685,1.067,1686,1.067,1687,1.067,1688,1.067,1689,1.83,1690,1.067,1691,1.067,1692,1.067,1693,1.067,1694,1.83,1695,1.067,1696,1.067,1697,1.067,1698,1.067,1699,1.067,1700,1.067,1701,1.067,1702,1.067,1703,1.067,1704,1.067,1705,1.067,1706,1.067,1707,1.067,1708,1.067,1709,1.067,1710,1.067,1711,1.067,1712,1.067,1713,1.83,1714,1.067,1715,1.067,1716,2.85,1717,1.067,1718,1.067,1719,1.067,1720,1.067,1721,1.067,1722,1.067,1723,1.067,1724,1.067,1725,1.067,1726,1.067,1727,1.067,1728,1.067,1729,1.067,1730,1.067,1731,1.067,1732,1.067,1733,1.067,1734,1.83,1735,1.067,1736,2.404,1737,1.067,1738,1.067,1739,1.067,1740,1.067,1741,1.067,1742,1.067,1743,1.067,1744,1.067,1745,1.067,1746,1.067,1747,1.067,1748,1.067,1749,1.067,1750,1.067,1751,1.067,1752,1.067,1753,1.067,1754,1.067,1755,3.951,1756,1.067,1757,1.067,1758,1.067,1759,1.067,1760,1.067,1761,1.067,1762,1.067,1763,1.067,1764,1.067,1765,1.067,1766,1.067,1767,1.067,1768,1.83,1769,3.208,1770,1.067,1771,1.067,1772,1.067,1773,3.501,1774,1.83,1775,1.83,1776,1.83,1777,1.067,1778,1.83,1779,1.83,1780,1.067,1781,1.83,1782,1.067,1783,1.067,1784,1.067,1785,1.067,1786,1.83,1787,1.067,1788,1.067,1789,1.83,1790,1.067,1791,1.067,1792,1.83,1793,1.83,1794,1.067,1795,1.067,1796,1.067,1797,1.067,1798,1.067,1799,1.067,1800,1.067,1801,1.067,1802,1.067,1803,1.067]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":391,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.016",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.026",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.028",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.055",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.057",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.075",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.083",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.099",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.109",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.126",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.139",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.157",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.182",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.19",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.244",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.265",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.412",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.467",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.472",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":786,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["0.506",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.593",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.615",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.927",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.934",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["076ace0",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["077e473",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["08cead1",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":584,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":813,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0004",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7965",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9029",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100px",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["108",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":716,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["11.0",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1922",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2885",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3906",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.5582",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6209",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6223",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6557",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.7",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8652",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.9269",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":651,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["12.0",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2378",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3228",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3318",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3438",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.6543",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7115",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7344",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.8078",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":430,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["1200px",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.1192",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.2035",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.4627",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.5078",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.7",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.9996",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138a847",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["14.1",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4738",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.6",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.9",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1440px",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1454cbb",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.3",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.393",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.5735",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.8",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1555a25",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["16.0",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.2945",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c19.1764",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c8.60701",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6388",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.7",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["16px",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.2635",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6112",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6948",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c20.1986",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c7.70549",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.9",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["18.5479",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.8973",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18a3e23",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["19.1",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c11.2656",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c14.1434",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.3425",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.4301",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.6567",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.7929",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091c12.3443",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091l12",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.85l12.0731",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19043fc",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":422,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":648,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.4",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c14.9702",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c3.82903",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5zm6.73649",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.171",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c10.4922",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c14.9816",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.5",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.7157",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.9544",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":649,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21.1169c11.4093",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.1169c13.0971",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2031",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2388",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2886",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.318",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3516c11.7407",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3693c12.5003",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4132",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4238",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527c12.1193",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.5",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.9",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22px",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.0",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.1",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.8",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":443,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["235",{"_index":442,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["24",{"_index":710,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["24.0",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.3",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24bfb15",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.9",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["26.5",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.0",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e6cb05",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2xl",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":526,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.72621",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.80141",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":177,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["30.0",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":1001,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3047cec",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["31.6",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.8",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.5",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["34.1",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.4",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.0",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["36.0",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.0",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.1",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.6",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["38.1",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.7",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["39.0",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["3dc1a0a",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1183,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.8",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8236",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.1",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.3",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.4",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":425,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["41",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["41.0",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["42.2",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.6",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425px",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.0",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.1",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.2",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.4",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.5",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.9",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.5",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.3",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.5",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.6",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4748b98",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["48.7",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.5",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a434e6",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["4c15.1581",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c4.65746",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c7d29a",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xl",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4z",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":906,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5.052",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.38899",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.4",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.6",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.60482c10.8808",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.8",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.88043",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.9",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50.0",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["51.1",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.1",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.3",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52b97ed",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["53.6",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55.2",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.1",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.3",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57.2",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5797c54",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["58.5",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5846c42",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["59.0",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.4",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5ae3704",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["5rem",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1182,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["6.0",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.38882",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.73649",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.8",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.0",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.2",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.6",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.2",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["627",{"_index":432,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["627px",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63.0",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.0",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.3",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64372f4",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["64px",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.0",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.3",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.8",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.1",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6893d90",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["68d0202",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["69.4",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.5",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6efe0e6",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":772,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["7.0",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.36118",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.4",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c10.5373",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c12.6094",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.94883",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.0",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.2",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.2",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["715e349",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72.0",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.2",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.3",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.0",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.3",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.9",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.4",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78.0",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["792992e",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["7c6f199",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["7d82c0d",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541c11.6772",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c1",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c2.5",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c21.5",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c23",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.84185",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80px",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.2",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.7",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.9",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.3",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84.5",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.1",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.3",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.9",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8594508",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["86.5",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86.7",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.6",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.7",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.8",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8757519",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["88.2",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.3",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.6",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.9",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.0",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.7",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8b48513",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":444,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["9.0",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.01844",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.02981",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.2",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.8",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.85656",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.2",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.3",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.1",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.4",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.8",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.9",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.2",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.4",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.6",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.0",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.2",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.4",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.5",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.9",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.0",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.1",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.7",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.8",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.0",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.2",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.3",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.8",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.0",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.4",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.5",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.8",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96px",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.0",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.1",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.3",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.6",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.9",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977df75",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["98.0",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.5",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.6",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.7",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.8",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.9",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.0",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.1",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.2",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.4",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.6",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.size",{"_index":517,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["a0e6d3f",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1143,"title":{},"body":{"license.html":{}}}],["acbe81a",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":388,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["access",{"_index":1028,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":586,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":604,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":1169,"title":{},"body":{"license.html":{}}}],["actions",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":731,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":1083,"title":{},"body":{"index.html":{}}}],["adding",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["adjust",{"_index":1080,"title":{},"body":{"index.html":{}}}],["adjustments",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["advised",{"_index":1045,"title":{},"body":{"index.html":{}}}],["ago",{"_index":534,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["ahmed",{"_index":1195,"title":{},"body":{"properties.html":{}}}],["amz",{"_index":336,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["and/or",{"_index":1135,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1054,"title":{},"body":{"index.html":{}}}],["api_domain=opengraph.opensauced.pizza",{"_index":1063,"title":{},"body":{"index.html":{}}}],["api_host=0.0.0.0",{"_index":1061,"title":{},"body":{"index.html":{}}}],["api_port=3005",{"_index":1062,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":304,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apiconfig",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":305,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinocontentresponse",{"_index":306,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinotfoundresponse",{"_index":307,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiokresponse",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apioperation",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiresponse",{"_index":308,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags(\"health",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"highlight",{"_index":313,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apitags(\"user",{"_index":620,"title":{},"body":{"controllers/UserCardController.html":{}}}],["app",{"_index":773,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":1058,"title":{},"body":{"index.html":{}}}],["application",{"_index":910,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1173,"title":{},"body":{"license.html":{}}}],["array",{"_index":1013,"title":{},"body":{"index.html":{}}}],["array.from(object.values(langs)).sort((a",{"_index":514,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["asc",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":844,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":1125,"title":{},"body":{"license.html":{}}}],["async",{"_index":131,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["atwa",{"_index":1197,"title":{},"body":{"properties.html":{}}}],["author",{"_index":1194,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":168,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":1162,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1180,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":346,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1046,"title":{},"body":{"index.html":{}}}],["await",{"_index":181,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["awaits",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":269,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["aws",{"_index":568,"title":{},"body":{"injectables/S3FileStorageService.html":{},"index.html":{}}}],["axios",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":515,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b.size",{"_index":516,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b1f870c",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["b6abefa",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":440,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["backgroundimage",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["bee0e6e",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1074,"title":{},"body":{"index.html":{}}}],["being",{"_index":827,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":1105,"title":{},"body":{"index.html":{}}}],["beta",{"_index":980,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["beta.opengraph.opensauced",{"_index":982,"title":{},"body":{"index.html":{}}}],["beta@digital",{"_index":981,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":989,"title":{},"body":{"index.html":{}}}],["bio",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":347,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["body.length",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.slice(0",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":743,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["boolean",{"_index":114,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["bootstrap",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxshadow",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":1112,"title":{},"body":{"index.html":{}}}],["break",{"_index":1072,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1178,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1176,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":592,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{}}}],["bucketname",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":558,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1190,"title":{},"body":{"properties.html":{}}}],["build",{"_index":657,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":1117,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["c5a5fec",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":268,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["cached",{"_index":1048,"title":{},"body":{"index.html":{}}}],["caching",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":270,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"properties.html":{}}}],["card.controller",{"_index":480,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.controller.ts",{"_index":256,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"coverage.html":{}}}],["card.controller.ts:31",{"_index":618,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:33",{"_index":298,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:55",{"_index":614,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:57",{"_index":284,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":478,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.service",{"_index":311,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{}}}],["card.service.ts",{"_index":345,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["card.service.ts:108",{"_index":484,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:114",{"_index":633,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:138",{"_index":489,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:140",{"_index":637,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:34",{"_index":482,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:36",{"_index":631,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:42",{"_index":491,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:44",{"_index":639,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:77",{"_index":486,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:83",{"_index":635,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.template",{"_index":373,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["card.template.ts",{"_index":951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/highlight",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["card/templates/highlight",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/card",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/repo",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/user",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/tailwind.config.ts",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/user",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["cardfooter",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfooter(langs",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cards",{"_index":314,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["cardstylesetup",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":595,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["catching",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["cba7521",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["ccc8a96",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["cdn",{"_index":752,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdn.opensauced.pizzaother",{"_index":1053,"title":{},"body":{"index.html":{}}}],["cdncustomdomain",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1056,"title":{},"body":{"index.html":{}}}],["changed",{"_index":718,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":642,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":1103,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1122,"title":{},"body":{"license.html":{}}}],["charlimit",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charlimit).replace",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["checkhighlightsocialcard",{"_index":258,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkhighlightsocialcard(id",{"_index":260,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkrequiresupdate",{"_index":449,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["checkrequiresupdate(id",{"_index":483,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["checkrequiresupdate(username",{"_index":632,"title":{},"body":{"injectables/UserCardService.html":{}}}],["checkusersocialcard",{"_index":608,"title":{},"body":{"controllers/UserCardController.html":{}}}],["checkusersocialcard(username",{"_index":610,"title":{},"body":{"controllers/UserCardController.html":{}}}],["cito",{"_index":997,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1165,"title":{},"body":{"license.html":{}}}],["class",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["classes",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["clc",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["clip",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closes",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":117,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":118,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":119,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule",{"_index":475,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule_imports",{"_index":476,"title":{},"body":{"modules/HighlightCardModule.html":{}}}],["cluster_highlightcardmodule_providers",{"_index":477,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":536,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":537,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":538,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_usercardmodule",{"_index":628,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["cluster_usercardmodule_imports",{"_index":629,"title":{},"body":{"modules/UserCardModule.html":{}}}],["cluster_usercardmodule_providers",{"_index":630,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["code",{"_index":659,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codename",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":834,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["colors.util",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":1070,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commits",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":1075,"title":{},"body":{"index.html":{}}}],["community",{"_index":1095,"title":{},"body":{"index.html":{}}}],["company",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":1086,"title":{},"body":{"index.html":{}}}],["component",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["concept",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1142,"title":{},"body":{"license.html":{}}}],["config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":587,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":581,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":589,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":1024,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":137,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":753,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configured",{"_index":1059,"title":{},"body":{"index.html":{}}}],["connected",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1174,"title":{},"body":{"license.html":{}}}],["const",{"_index":171,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["constructor(config",{"_index":549,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":136,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":481,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/UserCardService.html":{}}}],["container",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":560,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1170,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1090,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1088,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":805,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["controller",{"_index":191,"title":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"highlights",{"_index":312,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["controller(\"users",{"_index":619,"title":{},"body":{"controllers/UserCardController.html":{}}}],["controllers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":1098,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1137,"title":{},"body":{"license.html":{}}}],["copy",{"_index":999,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1116,"title":{},"body":{"license.html":{}}}],["correct",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":186,"title":{},"body":{"injectables/GithubService.html":{}}}],["count",{"_index":461,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["couple",{"_index":1079,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":930,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":103,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":585,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["curr",{"_index":389,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["custom",{"_index":751,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customprops",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["d84015b",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["d='m6.73649",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1166,"title":{},"body":{"license.html":{}}}],["dark",{"_index":779,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":435,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["data:image/svg+xml,%3csvg",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":173,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date((new",{"_index":175,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":505,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(updated_at",{"_index":404,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["date).getdate",{"_index":530,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate((new",{"_index":529,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate(today.getdate",{"_index":176,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["datesince",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":533,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["dbreaction",{"_index":90,"title":{"interfaces/DbReaction.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbuserhighlight",{"_index":100,"title":{"interfaces/DbUserHighlight.html":{}},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dc9f3a4",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["dd096ca",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1127,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1175,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["defauls",{"_index":1040,"title":{},"body":{"index.html":{}}}],["default",{"_index":153,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1055,"title":{},"body":{"index.html":{}}}],["defined",{"_index":138,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["deleted_at",{"_index":104,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":914,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deployment",{"_index":728,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":292,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"properties.html":{}}}],["design",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":1003,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev/usercards.ts",{"_index":1016,"title":{},"body":{"index.html":{}}}],["dev:usercards",{"_index":1012,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1010,"title":{},"body":{"index.html":{}}}],["development",{"_index":741,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devit",{"_index":1044,"title":{},"body":{"index.html":{}}}],["differently",{"_index":1060,"title":{},"body":{"index.html":{}}}],["digital",{"_index":747,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitalocean",{"_index":1031,"title":{},"body":{"index.html":{}}}],["digitaloceanconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":409,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["direction",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discord.find",{"_index":1099,"title":{},"body":{"index.html":{}}}],["disk",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_percentage=0.7",{"_index":1066,"title":{},"body":{"index.html":{}}}],["disk_size",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size=100",{"_index":1067,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/local",{"_index":1018,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1133,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":890,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["do_spaces_",{"_index":1037,"title":{},"body":{"index.html":{}}}],["do_spaces_access_key_id",{"_index":1033,"title":{},"body":{"index.html":{}}}],["do_spaces_bucket_name=opengraph",{"_index":1043,"title":{},"body":{"index.html":{}}}],["do_spaces_cdn_disabled=trueif",{"_index":1050,"title":{},"body":{"index.html":{}}}],["do_spaces_endpoint=digitaloceanspaces.com",{"_index":1041,"title":{},"body":{"index.html":{}}}],["do_spaces_region=sfo3",{"_index":1042,"title":{},"body":{"index.html":{}}}],["do_spaces_secret_access_key=*******************************************ping",{"_index":1034,"title":{},"body":{"index.html":{}}}],["do_spaces_subdomain=beta.opengraph",{"_index":1052,"title":{},"body":{"index.html":{}}}],["docker",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":994,"title":{},"body":{"index.html":{}}}],["document",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":736,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1051,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":1184,"title":{},"body":{"properties.html":{}}}],["double",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["downgrade",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":1082,"title":{},"body":{"index.html":{}}}],["during",{"_index":1049,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["e91c43f",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["earlier",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":583,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge",{"_index":399,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["edge.node",{"_index":400,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge.size",{"_index":401,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge?.node.id",{"_index":508,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edges",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji_id",{"_index":96,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["enable",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":1089,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":580,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["engineer",{"_index":1022,"title":{},"body":{"index.html":{}}}],["engines",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["env.example",{"_index":1020,"title":{},"body":{"index.html":{}}}],["environment",{"_index":789,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":738,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["error",{"_index":596,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":598,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":765,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["etl",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1161,"title":{},"body":{"license.html":{}}}],["exceeded",{"_index":319,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["exceeded'})@apibadrequestresponse({description",{"_index":296,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["exceeded'})@redirect",{"_index":617,"title":{},"body":{"controllers/UserCardController.html":{}}}],["except",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":464,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["explanation",{"_index":1026,"title":{},"body":{"index.html":{}}}],["export",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["exports",{"_index":122,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":1152,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraneous",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["extrenaous",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["f7db713",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":472,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fastify",{"_index":309,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["fastifyreply",{"_index":263,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["fc9211c",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["fe44711",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":1004,"title":{},"body":{"index.html":{}}}],["ff5f13",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":562,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":545,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":551,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":1126,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":322,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fill",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='%2324292f'/%3e%3c/svg%3e",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='none",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs.length",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1019,"title":{},"body":{"index.html":{}}}],["first",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":369,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["firstvaluefrom(this.httpservice.get(`https://api.opensauced.pizza/v1/highlights/${highlightid}/reactions",{"_index":386,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["firstvaluefrom(this.httpservice.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightid",{"_index":383,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["fitness",{"_index":1157,"title":{},"body":{"license.html":{}}}],["fix",{"_index":670,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":891,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":987,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":433,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["footer.ts",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":351,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["forcepathstyle",{"_index":579,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":1073,"title":{},"body":{"index.html":{}}}],["formattedname",{"_index":498,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["found",{"_index":280,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":294,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["free",{"_index":1121,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":358,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fs.readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":424,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["full",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":870,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1140,"title":{},"body":{"license.html":{}}}],["gaps",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1185,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":886,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatecardbuffer",{"_index":411,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["generatecardbuffer(highlightid",{"_index":485,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["generatecardbuffer(username",{"_index":634,"title":{},"body":{"injectables/UserCardService.html":{}}}],["generated",{"_index":1108,"title":{},"body":{"index.html":{}}}],["generatehighlightsocialcard",{"_index":259,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generatehighlightsocialcard(id",{"_index":285,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generates",{"_index":288,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{}}}],["generateusersocialcard",{"_index":609,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generateusersocialcard(username",{"_index":615,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generating",{"_index":1011,"title":{},"body":{"index.html":{}}}],["generation",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":973,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:id",{"_index":315,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get(\"/:id/metadata",{"_index":329,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get(\"/:username",{"_index":621,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/:username/metadata",{"_index":627,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/service",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":286,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get('/:id/metadata')@apioperation({operationid",{"_index":264,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":616,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/:username/metadata')@apioperation({operationid",{"_index":611,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":542,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":546,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":553,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta",{"_index":547,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta(hash",{"_index":555,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["gethighlightcard",{"_index":473,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightcard(id",{"_index":488,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightdata",{"_index":380,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightdata(highlightid",{"_index":490,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightsocialcardmetadata",{"_index":265,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["getoriginendpoint",{"_index":543,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getrepo",{"_index":132,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrepo(owner",{"_index":142,"title":{},"body":{"injectables/GithubService.html":{}}}],["gets",{"_index":266,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["getting",{"_index":640,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["getuser",{"_index":133,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":148,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":535,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getusercard(username",{"_index":636,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getuserdata",{"_index":500,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getuserdata(username",{"_index":638,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getusersocialcardmetadata",{"_index":612,"title":{},"body":{"controllers/UserCardController.html":{}}}],["gfonts",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1192,"title":{},"body":{"properties.html":{}}}],["github",{"_index":726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":123,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/entities/db",{"_index":374,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["github/github.module",{"_index":479,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["github/github.service",{"_index":360,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["github_pat_user=ghp_",{"_index":1030,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":170,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":116,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":120,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":1009,"title":{},"body":{"index.html":{}}}],["gql/get",{"_index":162,"title":{},"body":{"injectables/GithubService.html":{}}}],["gradient",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient(var",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1120,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1179,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":158,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":166,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":128,"title":{},"body":{"injectables/GithubService.html":{}}}],["grass",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":1092,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1093,"title":{},"body":{"index.html":{}}}],["handler",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["hasfile",{"_index":323,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hash",{"_index":450,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hassponsorslisting",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["having",{"_index":1007,"title":{},"body":{"index.html":{}}}],["head",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":299,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["header(\"content",{"_index":317,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["headers",{"_index":167,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["headobjectcommand",{"_index":566,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":253,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":192,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":251,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["hearticondata",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":431,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["height='24",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1039,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1119,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":105,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{}}}],["highlight.entity",{"_index":375,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlight.entity.ts",{"_index":102,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"coverage.html":{}}}],["highlightcardcontroller",{"_index":254,"title":{"controllers/HighlightCardController.html":{}},"body":{"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"coverage.html":{}}}],["highlightcarddata",{"_index":344,"title":{"interfaces/HighlightCardData.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["highlightcardmodule",{"_index":6,"title":{"modules/HighlightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["highlightcardservice",{"_index":310,"title":{"injectables/HighlightCardService.html":{}},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["highlightcardtemplate",{"_index":371,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlightdata",{"_index":412,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightid",{"_index":381,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq",{"_index":382,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq.data",{"_index":384,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlights",{"_index":257,"title":{},"body":{"controllers/HighlightCardController.html":{},"changelog.html":{}}}],["highlights/${string(id)}.png",{"_index":451,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["higlight",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1163,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1187,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(116",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(120",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(121",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(122",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(124",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(126",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(130",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(131",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(132",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(133",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(134",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(135",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(136",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(137",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(146",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(15",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(19",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(195",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(197",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(198",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(199",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(200",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(201",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(203",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(205",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(206",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(207",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(208",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(209",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(210",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(211",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(212",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(213",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(214",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(216",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(23",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(24",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(25",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(26",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(28",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(30",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(33",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(351",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(353",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(354",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(356",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(357",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(358",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(359",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(360",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(0",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(181",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(182",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(19",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(200",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(202",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(204",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(205",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(206",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(207",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(208",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(209",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(210",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(211",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(216",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":413,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["html(highlightcardtemplate(avatarurl",{"_index":419,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["html(userprofilecardtemplate(avatarurl",{"_index":524,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["http",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["https",{"_index":895,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/open",{"_index":1188,"title":{},"body":{"properties.html":{}}}],["httpservice",{"_index":353,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["httpstatus",{"_index":300,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.bad_request",{"_index":333,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["httpstatus.no_content",{"_index":330,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_found",{"_index":332,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_modified",{"_index":331,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["icon",{"_index":801,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":106,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["id'})@apinocontentresponse({description",{"_index":272,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["id'})@redirect",{"_index":297,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["identifier",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":273,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["image'})@apinotfoundresponse({description",{"_index":293,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png",{"_index":318,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":290,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["images",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1153,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori",{"_index":414,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori\")).default",{"_index":416,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["included",{"_index":1146,"title":{},"body":{"license.html":{}}}],["including",{"_index":1087,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":94,"title":{"index.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":577,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":164,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":124,"title":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":125,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"overview.html":{}}}],["input",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insertion",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":1014,"title":{},"body":{"index.html":{}}}],["install",{"_index":995,"title":{},"body":{"index.html":{}}}],["installed",{"_index":990,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":597,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":434,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":423,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interface",{"_index":89,"title":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":91,"title":{},"body":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"overview.html":{}}}],["invalid",{"_index":282,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["isbountyhunter",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1097,"title":{},"body":{"index.html":{}}}],["join(joinliteral",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":356,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["json.stringify(ratelimit",{"_index":190,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":594,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keys",{"_index":1036,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":1186,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1151,"title":{},"body":{"license.html":{}}}],["langlist",{"_index":397,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["langrepos",{"_index":503,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langrepos.map(repo",{"_index":506,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs",{"_index":348,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":510,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs[edge.node.id].size",{"_index":511,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langtotal",{"_index":349,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["language",{"_index":357,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":684,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages(first",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":338,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodified",{"_index":334,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified.toisostring",{"_index":465,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified?.toisostring",{"_index":340,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["latest",{"_index":267,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["layout",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":532,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["level",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1167,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1164,"title":{},"body":{"license.html":{}}}],["license",{"_index":1114,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["light",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":185,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["limit).join(\"\")}${repolist.length",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":1129,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1154,"title":{},"body":{"license.html":{}}}],["link",{"_index":287,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["lins",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1068,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":1071,"title":{},"body":{"index.html":{}}}],["little",{"_index":1025,"title":{},"body":{"index.html":{}}}],["live",{"_index":724,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":407,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":1005,"title":{},"body":{"index.html":{}}}],["location",{"_index":341,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":129,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["logger(githubservice.name",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":379,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["loggermodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":107,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["lowercase",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":991,"title":{},"body":{"index.html":{}}}],["main",{"_index":976,"title":{},"body":{"index.html":{}}}],["make",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_heap=200",{"_index":1064,"title":{},"body":{"index.html":{}}}],["memory_rss",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss=3000",{"_index":1065,"title":{},"body":{"index.html":{}}}],["memoryhealthindicator",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1156,"title":{},"body":{"license.html":{}}}],["merge",{"_index":662,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["message",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":337,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["metadata",{"_index":271,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{}}}],["metadata?.[\"reactions",{"_index":460,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["method",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":130,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["min",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":970,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1081,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1115,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":339,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["modify",{"_index":1131,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":1196,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":1027,"title":{},"body":{"index.html":{}}}],["move",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":1023,"title":{},"body":{"index.html":{}}}],["namewithowner",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":986,"title":{},"body":{"index.html":{}}}],["needs",{"_index":277,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["needsupdate",{"_index":324,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["nestjs",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["nestjs/terminus",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":466,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["next",{"_index":974,"title":{},"body":{"index.html":{}}}],["nextjs",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":904,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":359,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["node:stream",{"_index":570,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":992,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1160,"title":{},"body":{"license.html":{}}}],["normal",{"_index":438,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["normal.woff",{"_index":426,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notable",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":599,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notfoundexception",{"_index":352,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notice",{"_index":1144,"title":{},"body":{"license.html":{}}}],["npm",{"_index":996,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":993,"title":{},"body":{"index.html":{}}}],["null",{"_index":113,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["number",{"_index":261,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["number(curr.reaction_count",{"_index":390,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":509,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["obtaining",{"_index":1124,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":748,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.app",{"_index":978,"title":{},"body":{"index.html":{}}}],["ocean.config",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":1109,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["one",{"_index":316,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["one'})@header('content",{"_index":289,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["opacity",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph",{"_index":972,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced",{"_index":979,"title":{},"body":{"index.html":{}}}],["opengraph.opensauced.pizza",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opengraph@digital",{"_index":977,"title":{},"body":{"index.html":{}}}],["opening",{"_index":1076,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["optimize",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":141,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["options",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["orange",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":984,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":1172,"title":{},"body":{"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outputs",{"_index":1017,"title":{},"body":{"index.html":{}}}],["overflowing",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1181,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1101,"title":{},"body":{"index.html":{}}}],["owner",{"_index":145,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":835,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1084,"title":{},"body":{"index.html":{}}}],["paginate",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":301,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["param(\"id",{"_index":320,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["param(\"username",{"_index":622,"title":{},"body":{"controllers/UserCardController.html":{}}}],["parameters",{"_index":140,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["parseintpipe",{"_index":302,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["partial",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1158,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":321,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["path",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["permission",{"_index":1118,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1138,"title":{},"body":{"license.html":{}}}],["person",{"_index":1123,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1139,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["pinned",{"_index":108,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["pinneditems",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1091,"title":{},"body":{"index.html":{}}}],["png",{"_index":447,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata",{"_index":445,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata.aspng",{"_index":448,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["port",{"_index":1000,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1148,"title":{},"body":{"license.html":{}}}],["pr's",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["prerequisites",{"_index":983,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":127,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["proceed",{"_index":1094,"title":{},"body":{"index.html":{}}}],["process.env.ci",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":975,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":494,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":151,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pronouns",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proof",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":95,"title":{"properties.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"properties.html":{}}}],["protocol",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1149,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["prpat",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":405,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["publish",{"_index":1132,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1077,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1159,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":567,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":1069,"title":{},"body":{"index.html":{}}}],["query",{"_index":178,"title":{},"body":{"injectables/GithubService.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":1096,"title":{},"body":{"index.html":{}}}],["radial",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":295,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["ratelimit",{"_index":134,"title":{},"body":{"injectables/GithubService.html":{}}}],["reaction",{"_index":468,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reaction.entity",{"_index":376,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reaction.entity.ts",{"_index":93,"title":{},"body":{"interfaces/DbReaction.html":{},"coverage.html":{}}}],["reaction_count",{"_index":97,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["reactions",{"_index":350,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["reactionsreq",{"_index":385,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reactionsreq.data.reduce",{"_index":387,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["read",{"_index":605,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":559,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readme",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":115,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["realpercent",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":501,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["red",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":303,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["redirecting",{"_index":470,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["refactoring",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["regeneration",{"_index":278,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["region",{"_index":582,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":725,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":187,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["remove",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":143,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repo.languages?.edges?.flatmap(edge",{"_index":398,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":507,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo.languages?.totalsize",{"_index":403,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.ts",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo?.isprivate",{"_index":519,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo?.owner.login",{"_index":520,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repoiconwithname",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoiconwithname(`${name.substring(0",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame",{"_index":392,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repos",{"_index":366,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repos.length",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.ts",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["repositories(first",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":1107,"title":{},"body":{"index.html":{}}}],["request",{"_index":1078,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":913,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requiresupdatemeta",{"_index":377,"title":{"interfaces/RequiresUpdateMeta.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["res",{"_index":262,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(fileurl",{"_index":326,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(url",{"_index":328,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":188,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":601,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":602,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.metadata",{"_index":603,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":1128,"title":{},"body":{"license.html":{}}}],["results",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":354,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg(svg",{"_index":439,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg.render",{"_index":446,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg/resvg",{"_index":355,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["return",{"_index":183,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":146,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["returnval",{"_index":454,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.lastmodified",{"_index":456,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.needsupdate",{"_index":471,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["reverse",{"_index":1021,"title":{},"body":{"index.html":{}}}],["rewrite",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["rewrites",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(17",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(181",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(237",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(238",{"_index":441,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["rights",{"_index":1130,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["rolled",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["rule='evenodd",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":985,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":370,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["s3",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{}}}],["s3client",{"_index":544,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":8,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":361,"title":{"injectables/S3FileStorageService.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["same",{"_index":469,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["sanitizedusername",{"_index":623,"title":{},"body":{"controllers/UserCardController.html":{}}}],["satori",{"_index":415,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["satori(template",{"_index":428,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["sauced",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/maintainers",{"_index":1035,"title":{},"body":{"index.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":1189,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":1193,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":1191,"title":{},"body":{"properties.html":{}}}],["savedreactions",{"_index":459,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["schema",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["screens",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":408,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["sdk",{"_index":745,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sdk/client",{"_index":569,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":588,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1136,"title":{},"body":{"license.html":{}}}],["send",{"_index":343,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["sensibly",{"_index":1038,"title":{},"body":{"index.html":{}}}],["server",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["set",{"_index":922,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setup.ts",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sfo3",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1145,"title":{},"body":{"license.html":{}}}],["singleline",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":378,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["social",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":988,"title":{},"body":{"index.html":{},"license.html":{}}}],["sometimes",{"_index":1057,"title":{},"body":{"index.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["spaces",{"_index":749,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["spacing",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":394,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["splitting",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../highlight",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tailwind.config.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/entities/db",{"_index":92,"title":{},"body":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"coverage.html":{}}}],["src/github/github.module.ts",{"_index":121,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":126,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:12",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:13",{"_index":139,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:22",{"_index":149,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:33",{"_index":144,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:41",{"_index":152,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":252,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":539,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":255,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":998,"title":{},"body":{"index.html":{}}}],["start:devlocal",{"_index":1002,"title":{},"body":{"index.html":{}}}],["started",{"_index":641,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":783,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":275,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["status(hasfile",{"_index":342,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["stops",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["storage.module.ts",{"_index":540,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":362,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["storage.service.ts",{"_index":541,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":565,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:13",{"_index":564,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:15",{"_index":563,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:17",{"_index":550,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:34",{"_index":552,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:54",{"_index":554,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:75",{"_index":556,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:96",{"_index":561,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["strategy",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["streamablefile",{"_index":291,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["string",{"_index":98,"title":{},"body":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(reactions",{"_index":462,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":402,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["style",{"_index":437,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":730,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styling",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1141,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1134,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1147,"title":{},"body":{"license.html":{}}}],["suite",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["superlative",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1177,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":427,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"modules.html":{}}}],["switch",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["tailwind",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["tailwindconfig",{"_index":367,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":418,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/highlight",{"_index":372,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["templates/shared/user",{"_index":364,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/tailwind.config",{"_index":368,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/user",{"_index":493,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["terminusmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":927,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test/local",{"_index":1015,"title":{},"body":{"index.html":{}}}],["testing",{"_index":677,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.config.bucketname",{"_index":593,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":576,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":575,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":572,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":571,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":574,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.gethighlightdata(highlightid",{"_index":417,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(id",{"_index":457,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getoriginendpoint",{"_index":573,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.getuserdata(username",{"_index":523,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.getrepo(owner",{"_index":396,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(login",{"_index":395,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(username",{"_index":502,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":474,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.graphqlwithauth",{"_index":165,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":184,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":182,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.highlightcardservice.checkrequiresupdate(id",{"_index":325,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.highlightcardservice.gethighlightcard(id",{"_index":327,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug(`highlight",{"_index":463,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.logger.debug(`rate",{"_index":189,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.logger.debug(`user",{"_index":531,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":578,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":591,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.fileexists(hash",{"_index":453,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getcdnendpoint()}${hash",{"_index":452,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilelastmodified(hash",{"_index":455,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilemeta(hash",{"_index":458,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.usercardservice.checkrequiresupdate(sanitizedusername",{"_index":625,"title":{},"body":{"controllers/UserCardController.html":{}}}],["this.usercardservice.getusercard(sanitizedusername",{"_index":626,"title":{},"body":{"controllers/UserCardController.html":{}}}],["thresholdpercent",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":1032,"title":{},"body":{"index.html":{}}}],["throw",{"_index":600,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["title",{"_index":109,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["today",{"_index":172,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago",{"_index":174,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago.toisostring",{"_index":180,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":528,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["token",{"_index":169,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":1029,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1171,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["try",{"_index":590,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ts5",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["tw",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitterusername",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":99,"title":{},"body":{"interfaces/DbReaction.html":{},"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":163,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":811,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":1085,"title":{},"body":{"index.html":{}}}],["ui",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":283,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":281,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":279,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apiresponse({description",{"_index":276,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["unexisting",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":147,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/HighlightCardService.html":{},"injectables/UserCardService.html":{}}}],["up",{"_index":274,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["update",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1111,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":110,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["updated_at.toisostring",{"_index":467,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["updatedat",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["uploadfile",{"_index":548,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":557,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":111,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["url.replace(\"https://github.com",{"_index":393,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["usage",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":410,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":406,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["usefactory",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":101,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["user(login",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":512,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.login",{"_index":521,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.name",{"_index":513,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.repositories.nodes?.filter(repo",{"_index":504,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.toprepositories.nodes?.filter(repo",{"_index":518,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user[\"databaseid",{"_index":496,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user[\"name",{"_index":497,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user_id",{"_index":112,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["usercardcontroller",{"_index":606,"title":{"controllers/UserCardController.html":{}},"body":{"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"coverage.html":{}}}],["usercarddata",{"_index":495,"title":{"interfaces/UserCardData.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["usercardmodule",{"_index":9,"title":{"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["usercardservice",{"_index":499,"title":{"injectables/UserCardService.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["userdata",{"_index":522,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userlangs",{"_index":363,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":420,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["username",{"_index":150,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinocontentresponse({description",{"_index":613,"title":{},"body":{"controllers/UserCardController.html":{}}}],["username.tolowercase",{"_index":624,"title":{},"body":{"controllers/UserCardController.html":{}}}],["userpat",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecardtemplate",{"_index":492,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos",{"_index":365,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos([repo",{"_index":421,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["userprofilerepos(repos",{"_index":525,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["users",{"_index":607,"title":{},"body":{"controllers/UserCardController.html":{},"index.html":{}}}],["users/${string(username)}.png",{"_index":527,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["using",{"_index":1047,"title":{},"body":{"index.html":{}}}],["utc:hh:mm:ss.l",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":154,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":934,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":179,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":917,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1100,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visual",{"_index":1106,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1104,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":1110,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1155,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1150,"title":{},"body":{"license.html":{}}}],["way",{"_index":1008,"title":{},"body":{"index.html":{}}}],["web",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":436,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["whether",{"_index":1168,"title":{},"body":{"license.html":{}}}],["width",{"_index":429,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["width='24",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1006,"title":{},"body":{"index.html":{},"license.html":{}}}],["workflow",{"_index":1113,"title":{},"body":{"index.html":{}}}],["x",{"_index":335,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cpath",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xs",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":487,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}}}],["yoga",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1102,"title":{},"body":{"index.html":{}}}],["zero",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HighlightCardModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                        \n                            UserCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { UserCardModule } from \"./social-card/user-card/user-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardModule } from \"./social-card/highlight-card/highlight-card.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        ApiConfig,\n        GitHubConfig,\n        DigitalOceanConfig,\n      ],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    S3FileStorageModule,\n    UserCardModule,\n    HighlightCardModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbReaction.html":{"url":"interfaces/DbReaction.html","title":"interface - DbReaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-reaction.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji_id\n                                        \n                                \n                                \n                                        \n                                            reaction_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction_count:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbReaction {\n  emoji_id: string;\n  reaction_count: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserHighlight.html":{"url":"interfaces/DbUserHighlight.html","title":"interface - DbUserHighlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-user-highlight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            deleted_at\n                                        \n                                \n                                \n                                        \n                                            highlight\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            pinned\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted_at:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pinned\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pinned:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbUserHighlight {\n  readonly id: string;\n  readonly user_id: string;\n  readonly url: string;\n  readonly title: string;\n  readonly highlight: string;\n  readonly pinned: boolean;\n  readonly created_at: string;\n  readonly updated_at: string;\n  readonly deleted_at: string | null;\n  readonly login: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRepo\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, Repository, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getRepo from \"./gql/get-repo\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async getRepo (owner: string, repo: string) {\n    const { query, variables } = getRepo(owner, repo);\n\n    const { repository } = await this.graphqlWithAuth(query, variables);\n\n    return repository;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HighlightCardController.html":{"url":"controllers/HighlightCardController.html","title":"controller - HighlightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HighlightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHighlightSocialCard\n                            \n                            \n                                    Async\n                                generateHighlightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getHighlightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Highlight social card image is up to date', status: undefined})@ApiResponse({description: 'Highlight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Highlight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid highlight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateHighlightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Highlight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid highlight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, ParseIntPipe, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { HighlightCardService } from \"./highlight-card.service\";\n\n\n@Controller(\"highlights\")\n@ApiTags(\"Highlight social cards\")\nexport class HighlightCardController {\n  constructor (\n    private readonly highlightCardService: HighlightCardService,\n  ) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateHighlightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Highlight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\" })\n  @Redirect()\n  async generateHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.highlightCardService.getHighlightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getHighlightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Highlight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Highlight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Highlight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\", status: HttpStatus.BAD_REQUEST })\n  async checkHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightCardData.html":{"url":"interfaces/HighlightCardData.html","title":"interface - HighlightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HighlightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            reactions\n                                        \n                                \n                                \n                                        \n                                            repo\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo:     Repository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\n\ninterface HighlightCardData {\n  title: string,\n  body: string,\n  reactions: number,\n  avatarUrl: string,\n  repo: Repository,\n  langTotal: number,\n  langs: (Language & {\n    size: number,\n  })[],\n  updated_at: Date,\n  url: string,\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`));\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`));\n    const reactions = reactionsReq.data.reduce( (acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData ? highlightData : await this.getHighlightData(highlightId);\n\n    const template = html(highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(`Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HighlightCardModule.html":{"url":"modules/HighlightCardModule.html","title":"module - HighlightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    HighlightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_imports\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HighlightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HighlightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardService } from \"../highlight-card/highlight-card.service\";\nimport { HighlightCardController } from \"./highlight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [HighlightCardService],\n  controllers: [HighlightCardController],\n})\nexport class HighlightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HighlightCardService.html":{"url":"injectables/HighlightCardService.html","title":"injectable - HighlightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HighlightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getHighlightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getHighlightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(highlightId: number, highlightData?: HighlightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightData\n                                    \n                                                HighlightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHighlightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getHighlightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightData(highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\n\ninterface HighlightCardData {\n  title: string,\n  body: string,\n  reactions: number,\n  avatarUrl: string,\n  repo: Repository,\n  langTotal: number,\n  langs: (Language & {\n    size: number,\n  })[],\n  updated_at: Date,\n  url: string,\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`));\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`));\n    const reactions = reactionsReq.data.reduce( (acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData ? highlightData : await this.getHighlightData(highlightId);\n\n    const template = html(highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(`Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequiresUpdateMeta.html":{"url":"interfaces/RequiresUpdateMeta.html","title":"interface - RequiresUpdateMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequiresUpdateMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            hasFile\n                                        \n                                \n                                \n                                        \n                                            lastModified\n                                        \n                                \n                                \n                                        \n                                            needsUpdate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasFile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastModified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastModified:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsUpdate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n  formattedName: string,\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string,\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null,\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                getFileMeta\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileMeta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileMeta(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string, metadata?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileMeta (hash: string): Promise | null> {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.Metadata ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n    metadata?: Record,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n        Metadata: metadata,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserCardController.html":{"url":"controllers/UserCardController.html","title":"controller - UserCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserSocialCard\n                            \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/metadata')@ApiOperation({operationId: 'getUserSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :username'})@ApiNoContentResponse({description: 'User social card image is up to date', status: undefined})@ApiResponse({description: 'User social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'User social card image not found', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\n\nimport { UserCardService } from \"./user-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class UserCardController {\n  constructor (\n    private readonly userCardService: UserCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.userCardService.getUserCard(sanitizedUsername);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:username/metadata\")\n  @ApiOperation({\n    operationId: \"getUserSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :username\",\n  })\n  @ApiNoContentResponse({ description: \"User social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"User social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"User social card image not found\", status: HttpStatus.NOT_FOUND })\n  async checkUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCardData.html":{"url":"interfaces/UserCardData.html","title":"interface - UserCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            formattedName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     Repository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n  formattedName: string,\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string,\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null,\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserCardModule.html":{"url":"modules/UserCardModule.html","title":"module - UserCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UserCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_imports\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/user-card/user-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { UserCardService } from \"./user-card.service\";\nimport { UserCardController } from \"./user-card.controller\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [UserCardService],\n  controllers: [UserCardController],\n})\nexport class UserCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserCardService.html":{"url":"injectables/UserCardService.html","title":"injectable - UserCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Private\n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/user-card/user-card.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(username: string, userData?: UserCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UserCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/user-card/user-card.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n  formattedName: string,\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string,\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null,\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.1.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.1-beta.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.0 (2023-05-09)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\nhiglight card upload & storage (#39) (b6abefa)\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.6 (2023-05-09)\n🍕 Features\n\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.5 (2023-05-05)\n🍕 Features\n\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\n\n2.1.0-beta.4 (2023-05-04)\n🍕 Features\n\nhiglight card upload & storage (#39) (b6abefa)\n\n2.1.0-beta.3 (2023-05-02)\n🍕 Features\n\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\n\n2.1.0-beta.2 (2023-04-30)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n2.1.0-beta.1 (2023-04-26)\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\n\n2.0.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.2 (2023-04-19)\n🐛 Bug Fixes\n\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\n\n2.0.0 (2023-04-11)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\nimplement no-content verification strategy (6efe0e6)\noptimize image loading and return errors (7c6f199), closes #17\n\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\ncorrect dark logo render and make it static (dc9f3a4)\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect server generation environment (68d0202)\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\nupdate graphql types (f7db713)\n\n2.0.0-beta.3 (2023-04-11)\n🤖 Build System\n\nupdate graphql types (f7db713)\n\n2.0.0-beta.2 (2023-04-11)\n🐛 Bug Fixes\n\ncorrect dark logo render and make it static (dc9f3a4)\n\n2.0.0-beta.1 (2023-04-10)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🐛 Bug Fixes\n\ncorrect server generation environment (68d0202)\n\n1.2.0-beta.10 (2023-04-10)\n🐛 Bug Fixes\n\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\n\n1.2.0-beta.9 (2023-04-10)\n🍕 Features\n\noptimize image loading and return errors (7c6f199), closes #17\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\n\n1.2.0-beta.8 (2023-04-09)\n🍕 Features\n\nimplement no-content verification strategy (6efe0e6)\n\n🐛 Bug Fixes\n\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n1.2.0-beta.7 (2023-04-09)\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n1.2.0-beta.6 (2023-04-09)\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\n\n1.2.0-beta.5 (2023-04-09)\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n🐛 Bug Fixes\n\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\n\n1.2.0-beta.4 (2023-04-08)\n🍕 Features\n\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/entities/db-reaction.entity.ts\n            \n            interface\n            DbReaction\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/github/entities/db-user-highlight.entity.ts\n            \n            interface\n            DbUserHighlight\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/github/gql/get-repo.ts\n            \n            variable\n            getRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.controller.ts\n            \n            controller\n            HighlightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            injectable\n            HighlightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            interface\n            HighlightCardData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/social-card/templates/highlight-card.template.ts\n            \n            variable\n            highlightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            cardFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            heartIconData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-style-setup.ts\n            \n            variable\n            cardStyleSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/tailwind.config.ts\n            \n            variable\n            tailwindConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.template.ts\n            \n            variable\n            userProfileCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.controller.ts\n            \n            controller\n            UserCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            injectable\n            UserCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            RequiresUpdateMeta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            UserCardData\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n  \n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n  \n  \n  \n  \n  \n  \n  \n\n\n🚀 Live release environments\nProduction (main)\n\nopengraph@digital-ocean.app\nopengraph.opensauced\n\nBeta (beta)\n\nopengraph-beta@digital-ocean.app\nbeta.opengraph.opensauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\n node>=18.15.0\n npm>=9.6.3\n docker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:devLocal dev scripts\nThere are a few scripts that can be used to generate and test the social cards locally without having to deploy to the CDN. This is the way to go when developing & testing the interface for the social cards.\nGenerating user profile cards:\nnpm run local-dev:usercards\nGenerates user cards for all users in the test array inside test/local-dev/UserCards.ts and outputs them in dist/local-dev/ for testing.\n\n📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nOne can reverse engineer the named configs but some need a little explanation.\nBoilerplate, changed mostly locally:\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************\n\n# DigitalOcean Spaces through aws-sdk configuration\nDO_SPACES_ACCESS_KEY_ID=********************\nDO_SPACES_SECRET_ACCESS_KEY=*******************************************Ping @open-sauced/maintainers to get the dev CDN keys for the DO_SPACES_* variables.\nOther Digital Ocean S3 variables are sensibly set to default for local development, here are the defauls:\nDO_SPACES_ENDPOINT=digitaloceanspaces.com\nDO_SPACES_REGION=sfo3\nDO_SPACES_BUCKET_NAME=opengraph-devIt is also advised to set the following variables to true to avoid using the cached CDN during development:\nDO_SPACES_CDN_DISABLED=trueIf using a custom domain, you can set the following variable to the domain name:\nDO_SPACES_SUBDOMAIN=beta.opengraph-cdn.opensauced.pizzaOther API defaults you can change are not required in local development, but can sometimes appear configured differently for production:\nAPI_HOST=0.0.0.0\nAPI_PORT=3005\nAPI_DOMAIN=opengraph.opensauced.pizza\nMEMORY_HEAP=200\nMEMORY_RSS=3000\nDISK_PERCENTAGE=0.7\nDISK_SIZE=100🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-check In order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HighlightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.1.1\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            cardFooter   (src/.../card-footer.ts)\n                        \n                        \n                            cardStyleSetup   (src/.../card-style-setup.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            getRepo   (src/.../get-repo.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            heartIconData   (src/.../card-footer.ts)\n                        \n                        \n                            highlightCardTemplate   (src/.../highlight-card.template.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            tailwindConfig   (src/.../tailwind.config.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCardTemplate   (src/.../user-profile-card.template.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: string, repos: string, reactions?: number) => `\n    \n      \n        \n          ${repos}\n        \n\n        ${reactions\n    ? `\n          \n            \n            \n              ${reactions} Reactions\n            \n          \n        `\n    : \"\"}\n      \n\n      \n        \n          ${langs}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heartIconData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M6.73649 2.5C3.82903 2.5 1 5.052 1 8.51351C1 12.3318 3.80141 15.5735 6.38882 17.7763C7.70549 18.8973 9.01844 19.7929 10.0004 20.4077C10.4922 20.7157 10.9029 20.9544 11.1922 21.1169C11.4093 21.2388 11.5582 21.318 11.6223 21.3516C11.7407 21.4132 11.8652 21.4527 12 21.4527C12.1193 21.4527 12.2378 21.4238 12.3438 21.3693C12.5003 21.2886 12.6543 21.2031 12.8078 21.1169C13.0971 20.9544 13.5078 20.7157 13.9996 20.4077C14.9816 19.7929 16.2945 18.8973 17.6112 17.7763C20.1986 15.5735 23 12.3318 23 8.51351C23 5.052 20.171 2.5 17.2635 2.5C14.9702 2.5 13.1192 3.72621 12 5.60482C10.8808 3.72621 9.02981 2.5 6.73649 2.5ZM6.73649 4C4.65746 4 2.5 5.88043 2.5 8.51351C2.5 11.6209 4.8236 14.4738 7.36118 16.6342C8.60701 17.6948 9.85656 18.5479 10.7965 19.1364C11.2656 19.4301 11.6557 19.6567 11.9269 19.8091L12 19.85L12.0731 19.8091C12.3443 19.6567 12.7344 19.4301 13.2035 19.1364C14.1434 18.5479 15.393 17.6948 16.6388 16.6342C19.1764 14.4738 21.5 11.6209 21.5 8.51351C21.5 5.88043 19.3425 4 17.2635 4C15.1581 4 13.4627 5.38899 12.7115 7.64258C12.6094 7.94883 12.3228 8.15541 12 8.15541C11.6772 8.15541 11.3906 7.94883 11.2885 7.64258C10.5373 5.38899 8.84185 4 6.73649 4Z' fill='%2324292F'/%3e%3c/svg%3e`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-style-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardStyleSetup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  \n    div {\n      display: flex;\n    }\n  \n`\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRepo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (owner: string, repo: string) => ({\n  query: `\nquery ($owner: String!, $repo: String!) {\n  repository(\n    owner: $owner\n    name: $repo\n  ) {\n    id\n    name\n    databaseId\n    nameWithOwner\n    owner {\n      id\n      login\n      avatarUrl\n    }\n    languages (first: 100, orderBy: { field: SIZE, direction: DESC }) {\n      edges {\n        node {\n          id\n          color\n          name\n        }\n        size\n      }\n      totalSize\n      totalCount\n    }\n  }\n}`,\n  variables: {\n    owner,\n    repo,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/highlight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, title: string, body: string, langs: string, repos: string, reactions: number): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n      \n\n      \n        \n          ${title}\n        \n        \n          ${body.length > 108 ? `${body.slice(0, 108)}...` : body}\n        \n      \n\n      \n        \n      \n    \n\n    ${cardFooter(langs, repos, reactions)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n  \n    \n      \n      \n        \n          ${name}\n        \n      \n    \n  \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/tailwind.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tailwindConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  theme: {\n    extend: {\n      screens: {\n        xs: \"425px\",\n\n        // => @media (min-width: 425px) { ... }\n\n        \"2xl\": \"1440px\",\n\n        // => @media (min-width: 1440px) { ... }\n      },\n      blur: { \"4xl\": \"5rem\" },\n      spacing: {\n        \"6px\": \"6px\",\n        \"8px\": \"8px\",\n        \"12px\": \"12px\",\n        \"16px\": \"16px\",\n        \"32px\": \"32px\",\n        \"48px\": \"48px\",\n        \"96px\": \"96px\",\n        \"134px\": \"134px\",\n        \"627px\": \"627px\",\n        \"1200px\": \"1200px\",\n      },\n      colors: {\n        sauced: { orange: \"hsla(19, 100%, 50%, 1)\" },\n        gradient: {\n          \"dark-two\": \"hsl(26, 54%, 15%)\",\n          \"dark-one\": \"hsl(23, 75%, 5%)\",\n          \"orange-one\": \"\thsl(33, 100%, 50%)\",\n          \"orange-two\": \"\thsl(19, 100%, 50%)\",\n        },\n        light: {\n          slate: {\n            1: \"hsl(206, 30.0%, 98.8%)\",\n            2: \"hsl(210, 16.7%, 97.6%)\",\n            3: \"hsl(209, 13.3%, 95.3%)\",\n            4: \"hsl(209, 12.2%, 93.2%)\",\n            5: \"hsl(208, 11.7%, 91.1%)\",\n            6: \"hsl(208, 11.3%, 88.9%)\",\n            7: \"hsl(207, 11.1%, 85.9%)\",\n            8: \"hsl(205, 10.7%, 78.0%)\",\n            9: \"hsl(206, 6.0%, 56.1%)\",\n            10: \"hsl(206, 5.8%, 52.3%)\",\n            11: \"hsl(206, 6.0%, 43.5%)\",\n            12: \"hsl(206, 24.0%, 9.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(210, 92.6%, 26.5%, 0.016)\",\n            2: \"hsla(210, 87.7%, 16.0%, 0.028)\",\n            3: \"hsla(210, 98.8%, 14.4%, 0.055)\",\n            4: \"hsla(210, 94.1%, 11.1%, 0.075)\",\n            5: \"hsla(216, 91.1%, 10.9%, 0.099)\",\n            6: \"hsla(206, 96.4%, 11.3%, 0.126)\",\n            7: \"hsla(210, 99.1%, 10.1%, 0.157)\",\n            8: \"hsla(205, 96.5%, 10.0%, 0.244)\",\n            9: \"hsla(206, 98.8%, 5.9%, 0.467)\",\n            10: \"hsla(206, 99.6%, 5.4%, 0.506)\",\n            11: \"hsla(206, 97.0%, 4.8%, 0.593)\",\n            12: \"hsla(202, 97.0%, 2.4%, 0.934)\",\n          },\n          orange: {\n            1: \"hsl(24, 70.0%, 99.0%)\",\n            2: \"hsl(24, 83.3%, 97.6%)\",\n            3: \"hsl(24, 100%, 95.3%)\",\n            4: \"hsl(25, 100%, 92.2%)\",\n            5: \"hsl(25, 100%, 88.2%)\",\n            6: \"hsl(25, 100%, 82.8%)\",\n            7: \"hsl(24, 100%, 75.3%)\",\n            8: \"hsl(24, 94.5%, 64.3%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 46.5%)\",\n            11: \"hsl(24, 100%, 37.0%)\",\n            12: \"hsl(15, 60.0%, 17.0%)\",\n          },\n          blue: {\n            1: \"hsl(206, 100%, 99.2%)\",\n            2: \"hsl(210, 100%, 98.0%)\",\n            3: \"hsl(209, 100%, 96.5%)\",\n            4: \"hsl(210, 98.8%, 94.0%)\",\n            5: \"hsl(209, 95.0%, 90.1%)\",\n            6: \"hsl(209, 81.2%, 84.5%)\",\n            7: \"hsl(208, 77.5%, 76.9%)\",\n            8: \"hsl(206, 81.9%, 65.3%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(208, 100%, 47.3%)\",\n            11: \"hsl(211, 100%, 43.2%)\",\n            12: \"hsl(211, 100%, 15.0%)\",\n          },\n          red: {\n            1: \"hsl(359, 100%, 99.4%)\",\n            2: \"hsl(359, 100%, 98.6%)\",\n            3: \"hsl(360, 100%, 96.8%)\",\n            4: \"hsl(360, 97.9%, 94.8%)\",\n            5: \"hsl(360, 90.2%, 91.9%)\",\n            6: \"hsl(360, 81.7%, 87.8%)\",\n            7: \"hsl(359, 74.2%, 81.7%)\",\n            8: \"hsl(359, 69.5%, 74.3%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 69.4%, 55.2%)\",\n            11: \"hsl(358, 65.0%, 48.7%)\",\n            12: \"hsl(354, 50.0%, 14.6%)\",\n          },\n          grass: {\n            1: \"hsl(116, 50.0%, 98.9%)\",\n            2: \"hsl(120, 60.0%, 97.1%)\",\n            3: \"hsl(120, 53.6%, 94.8%)\",\n            4: \"hsl(121, 47.5%, 91.4%)\",\n            5: \"hsl(122, 42.6%, 86.5%)\",\n            6: \"hsl(124, 39.0%, 79.7%)\",\n            7: \"hsl(126, 37.1%, 70.2%)\",\n            8: \"hsl(131, 38.1%, 56.3%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(132, 43.1%, 42.2%)\",\n            11: \"hsl(133, 50.0%, 32.5%)\",\n            12: \"hsl(130, 30.0%, 14.9%)\",\n          },\n        },\n        dark: {\n          slate: {\n            1: \"hsl(200, 7.0%, 8.8%)\",\n            2: \"hsl(195, 7.1%, 11.0%)\",\n            3: \"hsl(197, 6.8%, 13.6%)\",\n            4: \"hsl(198, 6.6%, 15.8%)\",\n            5: \"hsl(199, 6.4%, 17.9%)\",\n            6: \"hsl(201, 6.2%, 20.5%)\",\n            7: \"hsl(203, 6.0%, 24.3%)\",\n            8: \"hsl(207, 5.6%, 31.6%)\",\n            9: \"hsl(206, 6.0%, 43.9%)\",\n            10: \"hsl(206, 5.2%, 49.5%)\",\n            11: \"hsl(206, 6.0%, 63.0%)\",\n            12: \"hsl(210, 6.0%, 93.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(0, 0%, 0%, 0)\",\n            2: \"hsla(181, 98.9%, 91.8%, 0.026)\",\n            3: \"hsla(182, 86.7%, 91.4%, 0.057)\",\n            4: \"hsla(209, 86.7%, 93.9%, 0.083)\",\n            5: \"hsla(200, 90.3%, 93.4%, 0.109)\",\n            6: \"hsla(209, 95.3%, 93.5%, 0.139)\",\n            7: \"hsla(204, 98.5%, 93.9%, 0.182)\",\n            8: \"hsla(209, 94.0%, 94.7%, 0.265)\",\n            9: \"hsla(207, 97.3%, 94.0%, 0.412)\",\n            10: \"hsla(209, 99.4%, 95.2%, 0.472)\",\n            11: \"hsla(208, 98.7%, 96.8%, 0.615)\",\n            12: \"hsla(211, 86.7%, 99.6%, 0.927)\",\n          },\n          orange: {\n            1: \"hsl(30, 70.0%, 7.2%)\",\n            2: \"hsl(28, 100%, 8.4%)\",\n            3: \"hsl(26, 91.1%, 11.6%)\",\n            4: \"hsl(25, 88.3%, 14.1%)\",\n            5: \"hsl(24, 87.6%, 16.6%)\",\n            6: \"hsl(24, 88.6%, 19.8%)\",\n            7: \"hsl(24, 92.4%, 24.0%)\",\n            8: \"hsl(25, 100%, 29.0%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 58.5%)\",\n            11: \"hsl(24, 100%, 62.2%)\",\n            12: \"hsl(24, 97.0%, 93.2%)\",\n          },\n          blue: {\n            1: \"hsl(212, 35.0%, 9.2%)\",\n            2: \"hsl(216, 50.0%, 11.8%)\",\n            3: \"hsl(214, 59.4%, 15.3%)\",\n            4: \"hsl(214, 65.8%, 17.9%)\",\n            5: \"hsl(213, 71.2%, 20.2%)\",\n            6: \"hsl(212, 77.4%, 23.1%)\",\n            7: \"hsl(211, 85.1%, 27.4%)\",\n            8: \"hsl(211, 89.7%, 34.1%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(209, 100%, 60.6%)\",\n            11: \"hsl(210, 100%, 66.1%)\",\n            12: \"hsl(206, 98.0%, 95.8%)\",\n          },\n          red: {\n            1: \"hsl(353, 23.0%, 9.8%)\",\n            2: \"hsl(357, 34.4%, 12.0%)\",\n            3: \"hsl(356, 43.4%, 16.4%)\",\n            4: \"hsl(356, 47.6%, 19.2%)\",\n            5: \"hsl(356, 51.1%, 21.9%)\",\n            6: \"hsl(356, 55.2%, 25.9%)\",\n            7: \"hsl(357, 60.2%, 31.8%)\",\n            8: \"hsl(358, 65.0%, 40.4%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 85.3%, 64.0%)\",\n            11: \"hsl(358, 100%, 69.5%)\",\n            12: \"hsl(351, 89.0%, 96.0%)\",\n          },\n          grass: {\n            1: \"hsl(146, 30.0%, 7.4%)\",\n            2: \"hsl(136, 33.3%, 8.8%)\",\n            3: \"hsl(137, 36.0%, 11.4%)\",\n            4: \"hsl(137, 37.6%, 13.7%)\",\n            5: \"hsl(136, 38.7%, 16.0%)\",\n            6: \"hsl(135, 39.6%, 19.1%)\",\n            7: \"hsl(134, 40.3%, 23.8%)\",\n            8: \"hsl(131, 40.1%, 30.8%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(131, 39.0%, 52.1%)\",\n            11: \"hsl(131, 43.0%, 57.2%)\",\n            12: \"hsl(137, 72.0%, 94.0%)\",\n          },\n        },\n      },\n      boxShadow: {\n        login: \"0px 64px 100px -80px #FF5F13, 0px 16px 56px rgba(181, 107, 72, 0.19)\",\n        superlative: \"0px 22px 24px -8px rgba(0, 0, 0, 0.05), 0px 4px 8px rgba(0, 0, 0, 0.1)\",\n        paginate: \"0px 1px 2px rgba(237, 95, 0, 0.05), 0px 1px 1px rgba(237, 95, 0, 0.05)\",\n        input: \"0px 1px 2px rgba(17, 24, 28, 0.05), 0px 1px 1px rgba(17, 24, 28, 0.05)\",\n      },\n      backgroundImage: { \"gradient-radial\": \"radial-gradient(var(--tw-gradient-stops))\" },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & { size: number })[], totalCount = 0, joinLiteral = \"\") => {\n  const filteredLangs = langs\n    .filter(({ size }) => size > 0 && (size / totalCount) * 100 >= 0.5);\n\n  return filteredLangs\n    .map(({ color, size }) => {\n      const realPercent = size / totalCount * 100;\n\n      return ` 0 ? realPercent : 100 / filteredLangs.length}%\"/>`;\n    })\n    .join(joinLiteral);\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n\n      \n        ${name}\n      \n\n      \n    \n\n    ${cardFooter(langs, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 15;\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(`${name.substring(0, charLimit).replace(/\\.+$/, \"\")}${name.length > charLimit ? \"...\" : \"\"}`, `${String(avatarUrl)}&size=40`));\n\n  return `${repoList.slice(0, limit).join(\"\")}${repoList.length > limit\n    ? `+${repoList.length - limit}`\n    : ``}`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
