var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.646,1,1.796]],["body/modules/AppModule.html",[0,0.952,1,3.478,2,1.153,3,1.861,4,2.743,5,2.743,6,2.919,7,0.044,8,2.321,9,2.919,10,2.082,11,1.605,12,1.285,13,0.495,14,0.495,15,0.517,16,3.352,17,2.311,18,0.982,19,3.352,20,0.569,21,4.348,22,3.951,23,2.043,24,3.039,25,1.434,26,3.559,27,2.342,28,3.352,29,3.352,30,4.348,31,3.352,32,3.352,33,3.352,34,3.039,35,3.352,36,2.65,37,2.743,38,2.65,39,2.743,40,2.743,41,2.082,42,2.082,43,4.348,44,0.925,45,1.033,46,2.342,47,2.082,48,3.352,49,3.352,50,3.352,51,1.757,52,3.352,53,2.342,54,3.352,55,2.743,56,3.352,57,0.826,58,3.352,59,3.352,60,3.352,61,3.352,62,3.352,63,3.352,64,3.352,65,3.352,66,3.352,67,3.352,68,3.352,69,3.352,70,3.352,71,3.352,72,3.352,73,3.352,74,3.352,75,3.352,76,3.352,77,2.743,78,3.352,79,3.352,80,3.352,81,2.043,82,2.342,83,1.285,84,1.804,85,0.569,86,0.569,87,0.031,88,0.031]],["title/modules/GithubModule.html",[0,0.646,89,1.411]],["body/modules/GithubModule.html",[0,1.098,2,1.448,3,2.145,7,0.043,10,2.399,11,2.016,12,1.614,13,0.622,14,0.622,15,0.451,17,2.016,18,0.852,20,0.715,84,2.697,85,0.715,86,0.715,87,0.036,88,0.036,89,2.777,90,3.446,91,3.446,92,3.446,93,2.048,94,4.21,95,4.101,96,4.21]],["title/injectables/GithubService.html",[93,1.014,97,0.814]],["body/injectables/GithubService.html",[7,0.044,13,0.45,14,0.45,15,0.326,18,0.917,20,0.518,23,1.858,36,2.808,37,2.494,53,2.13,57,1.135,85,0.518,86,0.518,87,0.029,88,0.029,93,1.405,97,1.127,98,1.64,99,2.494,100,0.751,101,1.566,102,1.664,103,1.855,104,4.607,105,2.649,106,1.748,107,1.91,108,3.439,109,3.439,110,5.483,111,1.405,112,3.048,113,4.028,114,2.26,115,4.084,116,2.206,117,1.271,118,1.971,119,4.084,120,2.129,121,2.457,122,3.048,123,2.489,124,1.971,125,2.489,126,4.084,127,3.048,128,1.956,129,1.566,130,3.048,131,1.459,132,1.459,133,1.517,134,4.084,135,3.048,136,3.343,137,2.198,138,1.766,139,1.692,140,1.64,141,4.084,142,3.048,143,3.048,144,3.048,145,3.048,146,2.13,147,3.048,148,3.048,149,3.048,150,1.855,151,2.13,152,1.304,153,2.13,154,2.13,155,2.13,156,1.858,157,3.343,158,3,159,3.048,160,1.766,161,4.084,162,1.271,163,3.048,164,2.489,165,3.048,166,1.64,167,3.048,168,3.048,169,3.048]],["title/controllers/HealthController.html",[170,0.814,171,1.796]],["body/controllers/HealthController.html",[7,0.044,13,0.474,14,0.474,15,0.343,18,0.853,20,0.545,22,3.866,23,1.954,27,2.241,77,2.624,81,2.575,82,3.647,83,1.229,85,0.545,86,0.545,87,0.03,88,0.03,100,0.79,102,1.652,103,1.103,106,1.808,107,2.018,111,1.103,114,1.808,124,1.808,125,2.575,162,1.166,170,0.885,171,2.575,172,2.624,173,2.241,174,5.359,175,5.463,176,5.359,177,2.952,178,3.206,179,4.224,180,3.509,181,2.404,182,2.702,183,4.224,184,3.206,185,3.206,186,4.224,187,3.206,188,4.224,189,4.224,190,4.224,191,4.724,192,4.224,193,4.224,194,3.301,195,3.301,196,2.241,197,2.241,198,3.206,199,3.206,200,3.206,201,3.206,202,3.206,203,3.206,204,2.952,205,4.224,206,4.224,207,3.206,208,3.206,209,3.206,210,3.206,211,3.206,212,3.206,213,4.224,214,3.206,215,3.206,216,3.206,217,3.206,218,3.206,219,3.206,220,3.206,221,3.206,222,3.206,223,3.206,224,3.206,225,3.206,226,3.206,227,3.206,228,3.206,229,3.206]],["title/modules/HealthModule.html",[0,0.646,230,2.06]],["body/modules/HealthModule.html",[0,1.126,2,1.511,7,0.043,13,0.649,14,0.649,15,0.47,17,2.104,18,0.926,20,0.747,26,4.206,27,3.07,83,1.971,85,0.747,86,0.747,87,0.037,88,0.037,171,3.32,230,3.591,231,4.393,232,4.393]],["title/controllers/HighlightCardController.html",[170,0.814,233,1.796]],["body/controllers/HighlightCardController.html",[7,0.043,13,0.384,14,0.384,15,0.278,18,0.782,20,0.441,41,2.679,47,2.409,51,1.259,57,0.902,83,0.996,85,0.441,86,0.441,87,0.026,88,0.026,100,0.64,102,0.801,103,0.894,106,1.566,107,1.73,111,0.894,114,1.566,116,1.752,117,1.338,118,1.566,124,1.566,129,1.764,133,1.128,146,1.816,150,1.457,152,1.566,160,1.625,162,1.169,164,2.231,170,0.717,173,1.816,177,2.558,180,3.215,194,2.558,195,2.961,196,1.816,197,1.816,204,2.558,233,2.231,234,1.306,235,1.816,236,2.126,237,4.237,238,4.849,239,2.598,240,2.409,241,4.45,242,4.23,243,2.598,244,3.66,245,3.765,246,3.765,247,3.215,248,3.765,249,3.383,250,1.97,251,2.598,252,3.011,253,3.612,254,2.558,255,3.688,256,2.126,257,2.995,258,2.995,259,2.126,260,2.961,261,2.598,262,4.6,263,2.327,264,2.126,265,2.598,266,2.598,267,2.598,268,2.995,269,2.558,270,2.126,271,2.126,272,3.468,273,3.75,274,2.126,275,2.126,276,2.995,277,2.598,278,2.598,279,2.598,280,2.126,281,2.126,282,2.126,283,4.237,284,2.995,285,4.237,286,2.995,287,2.995,288,3.468,289,2.995,290,2.126,291,1.813,292,1.584,293,2.598,294,2.598,295,1.584,296,2.598,297,1.584,298,2.126,299,2.126,300,2.126,301,3.66,302,2.995,303,2.029,304,2.029,305,2.202,306,3.66,307,2.126,308,1.244,309,2.598,310,2.126,311,2.598,312,2.995,313,2.995,314,2.995,315,2.598,316,1.244,317,2.995,318,2.995,319,2.558,320,2.126,321,2.126,322,2.126,323,1.816,324,2.126,325,2.126]],["title/interfaces/HighlightCardData.html",[326,1.13,327,1.796]],["body/interfaces/HighlightCardData.html",[7,0.044,13,0.333,14,0.333,15,0.419,18,0.927,20,0.384,25,0.966,44,0.913,45,0.696,47,1.584,51,0.776,57,0.556,85,0.384,86,0.384,87,0.024,88,0.024,93,1.347,97,0.913,100,0.556,101,1.268,102,1.415,103,1.483,105,1.78,107,1.483,111,0.776,117,1.431,120,2.072,121,2.373,123,1.376,129,1.501,133,1.207,137,1.215,138,1.653,139,0.776,140,1.215,150,1.99,152,1.676,160,2.111,162,1.19,166,1.78,170,0.623,234,0.696,240,2.588,250,1.215,252,1.215,263,1.676,291,0.966,303,1.875,304,1.875,305,1.081,308,2.297,316,2.297,326,0.865,327,2.387,328,1.577,329,1.215,330,2.581,331,3.098,332,2.667,333,3.021,334,3.624,335,3.552,336,4.244,337,1.376,338,1.376,339,2.387,340,2.016,341,1.376,342,1.376,343,1.875,344,1.376,345,1.376,346,1.376,347,1.347,348,1.215,349,1.081,350,2.016,351,1.081,352,1.081,353,1.584,354,1.376,355,1.847,356,1.847,357,1.376,358,1.847,359,1.376,360,2.016,361,1.376,362,2.107,363,1.376,364,1.847,365,2.707,366,1.847,367,1.847,368,1.376,369,1.847,370,1.847,371,1.847,372,1.847,373,2.707,374,1.847,375,1.847,376,1.875,377,2.707,378,1.847,379,1.847,380,1.847,381,1.847,382,2.707,383,1.847,384,1.847,385,1.376,386,1.376,387,1.376,388,1.847,389,1.847,390,1.215,391,1.215,392,0.966,393,1.215,394,1.376,395,0.966,396,1.376,397,3.205,398,2.016,399,1.376,400,1.376,401,1.376,402,1.847,403,1.376,404,1.847,405,1.376,406,1.847,407,1.376,408,2.016,409,1.376,410,2.016,411,1.376,412,1.78,413,1.376,414,1.215,415,1.376,416,1.376,417,1.376,418,1.376,419,1.215,420,1.376,421,1.376,422,0.966,423,1.376,424,1.376,425,1.376,426,1.376,427,1.376,428,1.376,429,1.215,430,1.376,431,1.376,432,1.376,433,1.376,434,1.376,435,1.215,436,1.847,437,1.376,438,1.376,439,2.016,440,1.215,441,1.376,442,1.376,443,1.847,444,1.847,445,2.707,446,1.847,447,2.707,448,1.847,449,1.847,450,1.376,451,1.376,452,1.847,453,1.847,454,1.847,455,1.847,456,1.376,457,1.376,458,1.215,459,1.847,460,1.376]],["title/modules/HighlightCardModule.html",[0,0.646,6,1.586]],["body/modules/HighlightCardModule.html",[0,1.049,2,1.343,3,2.05,6,3.147,7,0.043,8,2.414,10,2.293,11,1.87,12,1.498,13,0.577,14,0.577,15,0.554,17,2.293,18,0.958,20,0.664,24,3.347,25,1.672,44,1.078,45,1.204,46,2.73,47,2.48,83,1.837,84,2.578,85,0.664,86,0.664,87,0.034,88,0.034,89,2.7,233,3.157,234,1.204,252,2.578,291,2.414,292,2.381,461,3.197,462,3.906,463,3.197,464,3.197,465,3.197,466,3.197]],["title/injectables/HighlightCardService.html",[97,0.814,291,1.261]],["body/injectables/HighlightCardService.html",[7,0.044,13,0.311,14,0.311,15,0.403,18,0.915,20,0.358,25,0.903,44,0.868,45,0.65,47,2.604,51,0.725,57,1.153,85,0.358,86,0.358,87,0.023,88,0.023,93,1.668,97,0.868,98,1.135,100,0.52,101,1.206,102,1.571,103,1.61,105,2.245,106,1.346,107,1.833,111,1.082,114,2.003,116,2.137,117,1.232,118,1.91,120,1.6,121,1.997,123,1.285,124,1.785,125,1.285,129,1.795,131,1.01,132,1.01,133,1.286,137,1.135,138,1.206,139,0.725,140,1.135,150,1.976,152,0.903,160,2.085,162,1.151,166,1.693,170,0.582,234,1.495,240,2.644,250,1.135,252,1.135,263,1.91,291,1.346,303,1.802,304,1.802,305,1.01,308,1.802,316,2.241,326,0.809,327,2.543,329,1.135,330,2.025,331,2.72,332,2.245,333,2.543,334,3.271,335,3.119,336,3.831,337,1.285,338,1.285,339,2.853,340,1.918,341,1.285,342,1.285,343,1.802,344,1.285,345,1.285,346,1.285,347,1.668,348,1.135,349,1.01,350,1.918,351,1.01,352,1.01,353,1.506,354,1.285,355,1.726,356,1.726,357,1.285,358,1.726,359,1.285,360,1.918,361,1.285,362,2.025,363,1.918,364,3.08,365,3.414,366,1.726,367,1.726,368,1.285,369,1.726,370,1.726,371,1.726,372,1.726,373,2.575,374,1.726,375,1.726,376,1.802,377,2.575,378,1.726,379,1.726,380,1.726,381,1.726,382,2.575,383,1.726,384,1.726,385,1.285,386,1.285,387,1.285,388,1.726,389,1.726,390,1.135,391,1.135,392,0.903,393,1.135,394,1.285,395,0.903,396,2.293,397,3.652,398,1.918,399,1.285,400,1.285,401,1.285,402,1.726,403,1.285,404,1.726,405,1.285,406,1.726,407,1.285,408,1.918,409,1.285,410,1.918,411,1.285,412,1.693,413,1.285,414,1.135,415,1.285,416,1.285,417,1.285,418,1.285,419,1.135,420,1.285,421,1.285,422,0.903,423,1.285,424,1.285,425,1.285,426,1.285,427,1.285,428,1.285,429,1.135,430,1.285,431,1.285,432,1.285,433,1.285,434,2.293,435,1.135,436,1.726,437,1.285,438,1.285,439,1.918,440,1.135,441,1.285,442,1.285,443,1.726,444,1.726,445,2.575,446,1.726,447,2.575,448,1.726,449,1.726,450,1.285,451,1.285,452,1.726,453,1.726,454,1.726,455,1.726,456,1.285,457,1.285,458,1.135,459,3.08,460,1.285,467,1.726,468,3.146,469,2.109,470,2.109,471,2.109,472,2.109,473,1.474,474,2.109,475,2.109,476,2.109,477,2.109]],["title/modules/S3FileStorageModule.html",[0,0.646,8,1.261]],["body/modules/S3FileStorageModule.html",[0,1.09,2,1.432,3,2.13,7,0.043,8,2.476,10,2.383,11,1.993,12,1.596,13,0.615,14,0.615,15,0.591,17,1.993,18,0.846,20,0.707,44,1.149,45,1.284,84,2.679,85,0.707,86,0.707,87,0.036,88,0.036,95,4.074,347,2.046,348,2.24,478,3.407,479,3.407,480,3.407,481,2.909,482,4.163]],["title/injectables/S3FileStorageService.html",[97,0.814,347,1.014]],["body/injectables/S3FileStorageService.html",[7,0.044,13,0.358,14,0.358,15,0.612,18,0.802,20,0.412,23,1.476,38,1.476,39,1.982,40,1.982,44,1.125,45,1.627,51,0.833,53,1.693,55,2.85,57,1.163,85,0.412,86,0.412,87,0.025,88,0.025,97,0.961,98,1.304,100,0.597,101,1.335,102,1.374,103,1.533,106,1.49,107,1.884,111,1.197,113,3.647,114,2.218,116,2.26,117,1.357,118,2.02,120,2.174,124,1.907,129,1.987,131,1.667,132,1.667,133,1.456,150,1.197,160,1.709,162,1.357,250,2.541,331,1.476,347,1.197,390,2.726,435,2.975,440,2.541,458,1.874,473,1.693,481,3.688,483,1.982,484,4.076,485,4.076,486,4.915,487,4.076,488,4.076,489,4.076,490,4.076,491,2.422,492,2.422,493,2.422,494,2.422,495,2.422,496,2.422,497,2.422,498,2.422,499,2.422,500,4.076,501,4.457,502,4.721,503,2.849,504,2.422,505,4.076,506,2.422,507,2.422,508,2.422,509,4.457,510,3.482,511,1.982,512,2.422,513,2.422,514,2.422,515,2.422,516,2.422,517,2.422,518,2.422,519,2.422,520,2.422,521,2.422,522,2.422,523,1.693,524,2.422,525,1.982,526,2.422,527,1.982,528,2.422,529,1.982,530,2.422,531,1.982,532,2.422,533,4.076,534,4.457,535,3.647,536,4.457,537,4.457,538,4.076,539,5.479,540,4.076,541,4.076,542,4.076,543,4.076,544,3.482,545,2.422,546,2.422,547,2.422,548,2.422]],["title/controllers/UserCardController.html",[170,0.814,549,1.796]],["body/controllers/UserCardController.html",[7,0.043,13,0.392,14,0.392,15,0.284,18,0.789,20,0.451,41,2.688,42,2.425,51,1.278,57,0.915,83,1.018,85,0.451,86,0.451,87,0.027,88,0.027,100,0.654,102,0.818,103,0.913,106,1.59,107,1.742,111,0.913,114,1.59,116,1.779,117,1.349,118,1.59,120,1.942,124,1.59,128,2.49,129,1.78,133,1.146,139,1.854,146,1.855,150,1.681,152,1.59,160,1.644,162,1.183,164,2.264,170,0.733,173,1.855,177,2.596,180,3.245,194,2.596,195,2.995,196,1.855,197,1.855,204,2.596,234,1.322,235,1.855,241,4.47,242,4.256,245,3.8,246,3.8,247,3.245,248,3.8,249,3.396,250,1.999,253,3.634,254,2.596,255,3.54,256,2.172,257,3.04,258,3.04,259,2.172,260,2.995,264,2.172,268,3.04,269,2.596,270,2.172,271,2.172,272,3.508,273,3.634,274,2.172,275,2.172,276,3.04,280,2.172,281,2.172,282,2.172,284,3.04,286,3.04,287,3.04,288,3.508,289,3.04,290,2.172,292,1.618,295,1.618,297,1.618,298,2.172,299,2.172,300,2.172,302,3.04,303,2.052,304,2.052,305,2.223,307,2.172,308,1.271,310,2.172,312,3.04,313,3.04,314,3.04,316,1.271,317,3.04,318,3.04,319,2.596,320,2.172,321,2.172,322,2.172,323,1.855,324,2.172,325,2.172,549,2.264,550,2.172,551,4.286,552,4.887,553,2.654,554,2.654,555,3.715,556,2.654,557,2.654,558,2.654,559,2.654,560,2.654,561,2.654,562,1.834,563,2.654,564,2.654,565,2.654,566,3.715,567,3.715,568,3.715,569,3.715,570,2.654,571,2.654]],["title/interfaces/UserCardData.html",[326,1.13,572,1.796]],["body/interfaces/UserCardData.html",[7,0.044,13,0.35,14,0.35,15,0.431,18,0.927,20,0.403,25,1.015,42,1.643,44,0.947,45,0.732,51,0.816,57,1.203,85,0.403,86,0.403,87,0.025,88,0.025,93,1.386,97,0.947,100,0.585,101,1.316,102,1.444,103,1.518,105,1.846,107,1.518,111,0.816,117,1.293,120,2.045,128,2.41,129,1.545,133,1.505,137,1.277,138,1.872,139,1.18,140,1.277,150,1.97,151,1.658,152,1.015,153,2.397,154,2.397,155,1.658,156,1.446,160,2.014,162,1.112,166,1.846,170,0.655,234,0.732,240,2.114,263,2.004,303,1.929,304,1.929,305,1.136,316,2.337,326,0.91,328,1.658,329,1.277,330,2.627,332,2.773,333,3.201,337,1.446,338,1.446,339,2.456,340,2.091,341,1.446,342,1.446,343,1.643,344,1.446,345,1.446,346,1.446,347,1.386,348,1.277,349,1.136,350,2.091,351,1.136,352,2.41,353,1.643,354,1.446,359,1.446,360,2.091,361,1.446,362,1.846,363,1.446,376,1.136,385,1.446,386,2.456,387,1.446,390,1.277,391,1.277,392,1.015,393,1.277,394,1.446,395,1.015,396,1.446,398,2.091,399,1.446,400,1.446,401,1.446,403,1.446,405,1.446,408,2.091,409,1.446,410,2.091,411,1.446,412,1.846,413,1.446,414,1.277,415,1.446,416,1.446,417,1.446,418,1.446,419,1.277,420,1.446,421,1.446,422,1.015,423,1.446,424,1.446,425,1.446,426,1.446,427,1.446,428,1.446,429,1.277,430,1.446,431,1.446,432,1.446,433,1.446,434,1.446,435,1.277,437,1.446,438,1.446,439,2.091,440,1.277,441,1.446,442,1.446,450,1.446,451,1.446,456,1.446,457,1.446,458,1.277,460,1.446,503,1.658,562,1.015,572,2.456,573,4.119,574,1.446,575,1.942,576,1.136,577,1.942,578,1.942,579,1.942,580,1.942,581,1.942,582,1.942,583,1.942,584,1.942,585,1.942,586,1.942,587,1.942,588,1.942,589,1.942,590,1.942,591,1.942,592,1.942,593,1.942,594,1.942,595,1.942,596,1.942,597,1.942,598,1.942,599,1.942,600,3.298,601,1.942,602,1.942,603,1.942,604,2.169,605,1.942,606,2.808,607,1.942,608,1.942,609,1.942,610,1.658,611,1.658,612,1.942,613,1.942]],["title/modules/UserCardModule.html",[0,0.646,9,1.586]],["body/modules/UserCardModule.html",[0,1.05,2,1.346,3,2.052,7,0.043,8,2.415,9,3.148,10,2.296,11,1.874,12,1.5,13,0.578,14,0.578,15,0.555,17,2.296,18,0.959,20,0.665,24,3.351,25,1.675,42,2.296,44,1.08,45,1.207,46,2.735,83,1.839,84,2.58,85,0.665,86,0.665,87,0.034,88,0.034,89,2.702,139,1.649,234,1.207,292,2.385,464,3.203,465,3.203,466,3.203,549,3.16,562,2.415,614,3.203,615,3.913,616,3.203]],["title/injectables/UserCardService.html",[97,0.814,562,1.261]],["body/injectables/UserCardService.html",[7,0.044,13,0.319,14,0.319,15,0.409,18,0.91,20,0.367,25,0.925,42,2.616,44,0.885,45,0.667,51,0.744,57,1.237,85,0.367,86,0.367,87,0.023,88,0.023,93,1.681,97,0.885,98,1.164,100,0.533,101,1.229,102,1.581,103,1.624,105,2.273,106,1.372,107,1.843,111,1.102,114,2.021,116,2.159,117,1.245,118,1.93,120,2.095,124,1.807,125,1.318,128,2.534,129,1.811,131,1.035,132,1.035,133,1.507,137,1.164,138,1.619,139,1.102,140,1.164,150,1.947,151,1.511,152,0.925,153,2.24,154,2.24,155,1.511,156,1.318,160,1.966,162,1.054,166,1.725,170,0.597,234,1.507,240,1.535,263,1.372,303,1.829,304,1.829,305,1.035,316,2.262,326,0.829,329,1.164,330,2.055,332,2.427,333,2.879,337,1.318,338,1.318,339,2.879,340,1.954,341,1.318,342,1.318,343,1.535,344,1.318,345,1.318,346,1.318,347,1.681,348,1.164,349,1.035,350,1.954,351,1.035,352,2.022,353,1.535,354,1.318,359,1.318,360,1.954,361,1.318,362,1.725,363,1.954,376,1.035,385,1.318,386,2.328,387,1.318,390,1.164,391,1.164,392,0.925,393,1.164,394,1.318,395,0.925,396,2.328,398,1.954,399,1.318,400,1.318,401,1.318,403,1.318,405,1.318,408,1.954,409,1.318,410,1.954,411,1.318,412,1.725,413,1.318,414,1.164,415,1.318,416,1.318,417,1.318,418,1.318,419,1.164,420,1.318,421,1.318,422,0.925,423,1.318,424,1.318,425,1.318,426,1.318,427,1.318,428,1.318,429,1.164,430,1.318,431,1.318,432,1.318,433,1.318,434,2.328,435,1.164,437,1.318,438,1.318,439,1.954,440,1.164,441,1.318,442,1.318,450,1.318,451,1.318,456,1.318,457,1.318,458,1.164,460,1.318,467,1.77,473,1.511,503,1.511,562,1.372,572,2.574,573,3.457,574,1.318,575,1.77,576,1.035,577,1.77,578,1.77,579,3.126,580,1.77,581,1.77,582,1.77,583,1.77,584,1.77,585,1.77,586,1.77,587,1.77,588,1.77,589,1.77,590,1.77,591,1.77,592,1.77,593,1.77,594,1.77,595,1.77,596,1.77,597,1.77,598,1.77,599,1.77,600,3.691,601,1.77,602,1.77,603,1.77,604,2.055,605,1.77,606,2.623,607,1.77,608,1.77,609,1.77,610,1.511,611,1.511,612,1.77,613,3.126,617,3.205,618,2.163,619,2.163,620,2.163,621,2.163,622,2.163,623,2.163,624,2.163,625,2.163]],["title/changelog.html",[626,1.509,627,1.73,628,2.026]],["body/changelog.html",[0,0.584,3,1.408,7,0.042,15,0.352,41,1.276,44,1.186,57,0.998,81,1.035,87,0.019,88,0.019,117,0.469,121,1.784,128,2.228,132,0.813,133,0.524,136,2.693,139,1.478,156,1.035,162,0.908,181,0.813,236,1.39,247,1.863,249,2.272,252,0.914,253,2.604,254,1.863,260,1.187,263,1.141,295,2.006,308,1.276,319,1.187,343,1.575,352,1.276,368,1.035,392,1.595,395,1.141,419,0.914,422,0.727,523,1.863,535,2.182,576,1.276,604,1.435,610,1.863,611,1.863,626,1.035,628,1.39,629,1.699,630,1.699,631,3.29,632,1.39,633,1.699,634,3.314,635,2.182,636,4.655,637,4.049,638,5.072,639,3.517,640,1.699,641,1.699,642,1.699,643,2.666,644,5.755,645,1.699,646,1.699,647,3.29,648,1.699,649,1.699,650,3.29,651,1.699,652,1.699,653,3.727,654,1.699,655,1.699,656,1.699,657,3.727,658,5.357,659,5.357,660,1.699,661,1.699,662,2.693,663,1.699,664,1.699,665,3.727,666,1.699,667,1.699,668,1.699,669,1.39,670,1.699,671,1.699,672,3.29,673,3.29,674,5.717,675,4.493,676,2.666,677,3.727,678,2.666,679,4.895,680,2.182,681,2.666,682,2.666,683,2.83,684,2.666,685,3.727,686,3.314,687,2.666,688,2.182,689,2.666,690,2.666,691,2.666,692,3.727,693,3.727,694,3.05,695,3.05,696,2.182,697,2.666,698,2.693,699,2.666,700,2.182,701,4.151,702,3.727,703,2.666,704,2.666,705,2.666,706,2.604,707,4.493,708,2.182,709,2.666,710,2.666,711,2.604,712,2.666,713,2.693,714,3.727,715,2.182,716,3.314,717,2.666,718,3.517,719,3.517,720,3.05,721,2.666,722,2.182,723,2.182,724,2.693,725,2.666,726,2.666,727,4.049,728,3.29,729,2.666,730,2.666,731,2.666,732,2.666,733,2.666,734,2.666,735,2.666,736,2.182,737,2.666,738,2.666,739,3.727,740,2.666,741,2.666,742,2.666,743,2.182,744,2.182,745,2.666,746,2.666,747,2.666,748,2.666,749,2.666,750,2.182,751,2.666,752,2.666,753,3.727,754,3.05,755,2.666,756,2.666,757,2.182,758,2.666,759,2.666,760,2.182,761,2.666,762,2.666,763,2.666,764,3.727,765,2.666,766,2.666,767,2.666,768,2.666,769,2.666,770,2.666,771,3.727,772,1.863,773,2.666,774,2.666,775,2.666,776,2.182,777,3.29,778,3.29,779,2.666,780,3.517,781,2.666,782,2.666,783,2.182,784,2.666,785,2.693,786,4.895,787,1.699,788,1.699,789,1.699,790,3.727,791,1.699,792,1.699,793,1.699,794,1.699,795,1.699,796,2.666,797,2.666,798,1.699,799,1.699,800,1.699,801,1.39,802,1.699,803,1.699,804,1.699,805,2.666,806,1.699,807,1.699,808,1.39,809,2.693,810,1.699,811,1.699,812,1.699,813,1.699,814,1.699,815,1.699,816,1.699,817,1.699,818,1.39,819,1.699,820,1.699,821,1.699,822,1.699,823,3.29,824,1.699,825,1.699,826,1.699,827,1.699,828,1.699,829,1.699,830,2.666,831,1.699,832,1.699,833,1.699,834,1.699,835,1.699,836,1.699,837,1.699,838,1.699,839,1.699,840,1.699,841,1.699,842,2.666,843,1.699,844,1.699,845,1.187,846,1.699,847,1.699,848,1.699,849,1.699,850,1.699,851,2.666,852,1.699,853,1.699,854,1.699,855,1.699,856,1.699,857,1.699,858,1.699,859,1.699,860,1.699,861,1.39,862,1.699,863,1.699,864,1.699,865,1.39,866,1.39,867,1.699,868,1.699,869,1.699,870,2.693,871,1.699,872,1.699,873,1.699,874,1.699,875,1.699,876,1.699,877,2.666,878,1.699,879,2.693,880,1.699,881,1.39,882,1.699,883,1.699,884,1.699,885,1.39,886,1.699,887,1.699,888,2.182,889,1.39,890,1.699,891,1.699,892,1.39,893,1.699,894,1.699,895,1.699,896,1.699,897,1.39,898,1.699,899,1.699,900,1.699,901,1.699,902,1.39,903,1.699,904,1.699]],["title/coverage.html",[905,3.268]],["body/coverage.html",[7,0.043,15,0.514,34,2.314,36,2.018,38,2.018,42,2.589,45,1.021,47,2.589,87,0.031,88,0.031,93,1.139,97,1.403,99,2.71,108,2.314,109,2.314,117,0.914,133,1.021,170,1.325,171,2.018,172,2.71,233,2.018,234,1.804,235,3.015,291,1.417,326,1.654,327,2.018,329,2.737,347,1.139,349,1.586,351,1.586,353,1.586,357,2.018,376,2.86,422,1.417,481,2.314,483,2.71,549,2.018,562,1.417,572,2.018,574,2.018,576,1.586,706,2.314,772,2.314,905,2.71,906,3.312,907,3.312,908,2.71,909,4.77,910,5.851,911,2.71,912,2.71,913,2.71,914,4.799,915,3.531,916,2.71,917,2.71,918,4.799,919,2.71,920,3.312,921,2.71,922,3.312,923,3.312,924,2.71,925,3.531,926,3.928,927,3.531,928,2.71,929,2.71,930,2.71,931,2.71,932,2.71,933,2.71,934,2.71,935,3.531,936,2.71,937,2.71,938,2.71,939,2.71,940,3.312,941,3.312,942,3.312]],["title/miscellaneous/functions.html",[845,2.472,943,1.509]],["body/miscellaneous/functions.html",[7,0.038,87,0.038,88,0.038,100,1.139,845,3.23,919,3.783,921,4.551,943,2.817,944,4.622]],["title/index.html",[100,0.61,626,1.509,627,1.73]],["body/index.html",[7,0.041,12,1.061,14,0.409,15,0.296,41,1.831,44,0.764,51,0.951,57,0.682,81,1.686,82,3.304,87,0.027,88,0.027,102,0.853,118,1.184,121,1.325,131,1.831,138,1.466,139,1.315,158,3.024,181,2.457,182,2.544,269,1.933,295,2.881,297,1.686,326,1.061,391,1.489,392,2.123,393,2.358,395,1.636,511,2.264,550,2.264,576,1.325,632,3.13,662,2.264,669,3.13,683,1.933,688,2.264,694,2.264,695,3.869,696,2.264,698,3.13,700,2.264,701,3.13,708,2.264,711,3.586,713,2.264,715,2.264,716,3.586,718,2.264,719,2.264,720,2.264,722,2.264,723,3.586,724,2.264,736,3.13,744,2.264,754,2.264,760,3.13,776,2.264,780,3.586,783,3.869,801,2.264,818,2.264,861,2.264,885,3.586,888,3.586,889,2.264,897,3.586,902,3.13,909,2.264,945,2.672,946,2.264,947,2.766,948,3.869,949,2.766,950,2.766,951,3.824,952,2.766,953,3.824,954,2.766,955,2.766,956,2.766,957,4.382,958,5.611,959,3.824,960,4.061,961,2.264,962,2.766,963,2.766,964,2.766,965,2.766,966,2.766,967,2.766,968,2.766,969,5.36,970,2.766,971,2.766,972,2.264,973,2.264,974,2.264,975,2.766,976,3.586,977,2.766,978,3.824,979,2.264,980,2.766,981,2.766,982,2.766,983,2.766,984,2.766,985,2.766,986,2.766,987,2.766,988,2.766,989,2.766,990,2.766,991,2.766,992,2.766,993,2.766,994,2.766,995,2.766,996,2.766,997,2.766,998,2.766,999,2.766,1000,2.766,1001,2.766,1002,2.766,1003,2.766,1004,2.766,1005,2.766,1006,2.766,1007,2.766,1008,2.766,1009,2.766,1010,2.766,1011,2.766,1012,2.766,1013,2.766,1014,2.766,1015,2.766,1016,2.766,1017,2.766,1018,3.824,1019,2.766,1020,3.824,1021,2.766,1022,3.824,1023,2.766,1024,3.13,1025,2.766,1026,2.766,1027,2.766,1028,2.766,1029,2.766,1030,2.766,1031,2.766,1032,2.766,1033,2.766,1034,2.766,1035,2.766,1036,2.766,1037,2.766,1038,2.766,1039,2.766,1040,2.766,1041,3.824,1042,2.766,1043,4.382,1044,2.766,1045,2.766,1046,2.766,1047,2.766,1048,2.766,1049,2.766,1050,2.766,1051,2.766,1052,2.766,1053,2.766,1054,3.13,1055,2.766,1056,2.766,1057,3.824,1058,3.824,1059,2.766,1060,2.264,1061,3.824,1062,2.766,1063,2.766,1064,2.766,1065,2.766,1066,2.766,1067,2.766,1068,2.766,1069,2.766,1070,2.766,1071,2.766,1072,2.766,1073,2.766,1074,2.766,1075,2.766,1076,2.766,1077,3.824,1078,2.766,1079,2.766,1080,2.766,1081,2.766,1082,2.766,1083,2.766,1084,2.766,1085,2.766,1086,2.766,1087,1.686,1088,1.933]],["title/license.html",[626,1.509,627,1.73,1087,1.509]],["body/license.html",[7,0.035,12,1.506,87,0.035,88,0.035,181,1.88,182,2.113,395,2.056,636,3.214,706,2.744,960,3.214,961,4.761,972,3.933,979,4.25,1060,3.933,1087,2.393,1088,2.744,1089,5.192,1090,3.927,1091,4.805,1092,3.927,1093,3.927,1094,3.927,1095,3.927,1096,3.927,1097,3.927,1098,3.927,1099,3.927,1100,3.927,1101,3.927,1102,3.927,1103,3.927,1104,3.927,1105,3.927,1106,3.927,1107,3.927,1108,3.927,1109,3.927,1110,3.927,1111,4.805,1112,3.927,1113,3.927,1114,3.927,1115,3.927,1116,3.927,1117,3.927,1118,4.805,1119,4.805,1120,3.927,1121,3.927,1122,3.927,1123,3.927,1124,3.927,1125,3.927,1126,3.927,1127,3.927,1128,3.927,1129,3.927,1130,3.927,1131,3.927,1132,3.927,1133,3.214,1134,3.927,1135,3.927,1136,3.927,1137,3.927,1138,3.927,1139,3.927,1140,3.927,1141,3.927,1142,3.927,1143,3.927,1144,3.927,1145,3.927,1146,3.927,1147,3.927,1148,3.927,1149,3.927]],["title/modules.html",[2,1.373]],["body/modules.html",[1,2.694,2,1.52,6,2.379,7,0.037,8,1.891,9,2.379,87,0.037,88,0.037,89,2.116,230,3.089,412,3.084,1150,5.731,1151,5.731,1152,5.802,1153,4.42,1154,4.42]],["title/overview.html",[1155,3.268]],["body/overview.html",[1,3.51,2,1.332,3,2.039,4,3.169,5,3.169,6,3.123,7,0.043,8,2.464,9,3.123,10,2.281,11,1.854,12,1.485,83,1.485,87,0.034,88,0.034,89,2.73,90,3.169,91,3.169,92,3.169,93,1.961,98,2.084,291,2.208,328,2.706,347,1.961,407,2.36,461,3.169,463,3.169,478,3.169,479,3.169,480,3.169,562,2.208,604,2.084,614,3.169,616,3.169,1155,3.169,1156,3.169,1157,3.169]],["title/properties.html",[101,1.356,809,2.026]],["body/properties.html",[7,0.043,41,2.083,87,0.037,88,0.037,101,1.668,138,1.668,181,2.083,182,2.341,249,2.652,273,3.04,634,3.561,635,3.561,892,3.561,945,3.04,946,3.561,1087,2.652,1088,3.04,1133,3.561,1158,4.35,1159,4.35,1160,4.35,1161,4.35,1162,5.11,1163,4.35,1164,4.35,1165,4.35,1166,4.35,1167,4.35,1168,4.35,1169,4.35,1170,4.35,1171,4.35]],["title/miscellaneous/variables.html",[158,2.156,943,1.509]],["body/miscellaneous/variables.html",[7,0.044,13,0.153,34,1.244,36,1.085,38,1.085,57,1.164,87,0.013,88,0.013,100,0.256,108,1.244,109,1.244,117,0.287,120,1.953,121,1.324,123,2.329,128,1.324,131,2.189,132,2.189,138,0.682,150,0.951,157,2.263,158,1.423,162,0.644,164,1.685,181,0.498,182,0.958,234,1.178,240,1.324,255,0.726,263,1.708,297,1.085,308,1.324,323,0.726,330,2.148,331,1.085,332,1.824,334,2.369,335,1.244,343,0.498,349,0.852,351,0.852,352,1.735,353,0.852,357,1.085,362,2.227,368,1.685,376,2.146,392,0.445,407,2.67,414,0.958,422,0.762,429,2.357,523,0.726,525,0.851,527,3.922,529,0.851,531,0.851,574,1.085,576,0.852,604,2.357,639,0.851,680,2.263,683,0.726,686,3.585,711,0.726,743,3.585,750,1.91,757,0.851,772,1.244,785,3.922,808,0.851,865,0.851,866,0.851,870,0.851,879,1.457,881,3.668,908,0.851,911,0.851,912,1.457,913,0.851,915,1.457,916,1.457,917,1.457,924,0.851,925,2.263,926,1.457,927,1.91,928,1.457,929,1.457,930,1.457,931,2.263,932,0.851,933,1.457,934,1.457,935,1.457,936,1.457,937,1.457,938,0.851,939,0.851,943,0.633,945,1.244,948,0.851,973,0.851,974,0.851,976,0.851,1024,0.851,1054,0.851,1156,3.585,1157,3.868,1172,1.039,1173,2.334,1174,1.039,1175,1.78,1176,1.039,1177,1.039,1178,1.039,1179,1.039,1180,2.334,1181,1.039,1182,1.039,1183,1.039,1184,1.039,1185,1.039,1186,1.039,1187,1.039,1188,1.039,1189,1.039,1190,1.039,1191,1.039,1192,1.039,1193,1.039,1194,1.039,1195,1.039,1196,1.039,1197,3.624,1198,1.039,1199,1.039,1200,1.039,1201,1.039,1202,1.039,1203,1.039,1204,1.039,1205,1.039,1206,5.441,1207,1.039,1208,1.039,1209,1.039,1210,1.039,1211,1.039,1212,1.039,1213,1.039,1214,1.78,1215,1.039,1216,1.039,1217,1.039,1218,3.39,1219,1.78,1220,1.039,1221,1.78,1222,1.039,1223,1.78,1224,1.039,1225,1.039,1226,1.78,1227,1.039,1228,1.78,1229,1.039,1230,1.039,1231,1.78,1232,1.039,1233,1.78,1234,1.039,1235,1.039,1236,1.039,1237,1.039,1238,1.039,1239,1.039,1240,1.039,1241,1.039,1242,1.039,1243,1.78,1244,4.652,1245,1.039,1246,1.039,1247,1.039,1248,1.039,1249,1.039,1250,1.039,1251,1.039,1252,1.039,1253,1.039,1254,1.039,1255,1.039,1256,1.039,1257,1.039,1258,1.039,1259,1.039,1260,1.039,1261,1.78,1262,1.039,1263,1.039,1264,1.78,1265,1.039,1266,1.039,1267,1.78,1268,1.039,1269,1.039,1270,1.78,1271,1.039,1272,1.039,1273,1.78,1274,1.039,1275,1.78,1276,1.039,1277,1.78,1278,1.039,1279,1.039,1280,1.78,1281,1.039,1282,1.78,1283,1.039,1284,1.039,1285,1.78,1286,1.039,1287,1.78,1288,1.039,1289,1.039,1290,1.039,1291,1.039,1292,1.039,1293,1.039,1294,1.039,1295,1.039,1296,1.039,1297,1.039,1298,1.78,1299,1.039,1300,1.039,1301,1.039,1302,1.039,1303,1.78,1304,1.039,1305,1.039,1306,1.78,1307,1.039,1308,1.78,1309,1.039,1310,1.039,1311,1.039,1312,1.039,1313,1.039,1314,1.039,1315,1.039,1316,1.039,1317,1.039,1318,1.039,1319,1.039,1320,1.039,1321,1.039,1322,1.039,1323,1.039,1324,1.039,1325,1.039,1326,1.039,1327,1.039,1328,1.039,1329,1.039,1330,1.039,1331,1.78,1332,1.039,1333,1.78,1334,3.108,1335,3.108,1336,3.108,1337,2.764,1338,1.78,1339,2.334,1340,1.78,1341,3.108,1342,2.764,1343,1.039,1344,1.039,1345,1.039,1346,1.039,1347,1.039,1348,1.039,1349,1.039,1350,1.039,1351,1.039,1352,1.039,1353,1.039,1354,1.039,1355,1.039,1356,1.039,1357,1.039,1358,1.039,1359,1.039,1360,1.039,1361,1.039,1362,1.039,1363,1.039,1364,1.039,1365,1.039,1366,1.039,1367,1.039,1368,1.039,1369,1.039,1370,1.039,1371,1.039,1372,1.039,1373,1.78,1374,1.039,1375,1.039,1376,1.039,1377,2.764,1378,1.039,1379,1.039,1380,1.039,1381,1.039,1382,1.039,1383,1.039,1384,1.039,1385,1.78,1386,1.78,1387,1.039,1388,1.78,1389,1.039,1390,1.039,1391,1.039,1392,1.039,1393,1.039,1394,1.039,1395,1.039,1396,1.039,1397,1.039,1398,1.039,1399,1.78,1400,1.039,1401,1.78,1402,1.039,1403,1.039,1404,1.039,1405,1.039,1406,1.039,1407,1.78,1408,1.78,1409,1.78,1410,1.039,1411,1.78,1412,1.039,1413,1.039,1414,1.039,1415,1.039,1416,1.78,1417,2.764,1418,1.78,1419,2.334,1420,1.78,1421,1.78,1422,1.78,1423,1.78,1424,1.78,1425,1.78,1426,3.108,1427,1.039,1428,2.334,1429,2.334,1430,1.78,1431,1.78,1432,1.039,1433,1.78,1434,1.039,1435,1.039,1436,1.039,1437,1.039,1438,1.039,1439,2.764,1440,4.481,1441,2.334,1442,2.764,1443,3.108,1444,1.039,1445,1.78,1446,3.39,1447,1.039,1448,2.334,1449,1.039,1450,1.78,1451,2.764,1452,1.039,1453,2.334,1454,1.78,1455,1.039,1456,1.78,1457,1.78,1458,1.039,1459,4.38,1460,1.039,1461,1.039,1462,1.039,1463,3.39,1464,1.039,1465,1.039,1466,1.039,1467,1.039,1468,1.78,1469,1.039,1470,1.78,1471,3.108,1472,1.039,1473,1.039,1474,1.039,1475,1.039,1476,1.78,1477,1.039,1478,1.039,1479,1.039,1480,1.039,1481,1.039,1482,1.039,1483,1.039,1484,1.039,1485,2.764,1486,1.039,1487,1.039,1488,1.039,1489,1.039,1490,1.039,1491,1.039,1492,1.78,1493,1.039,1494,1.039,1495,1.039,1496,1.039,1497,1.78,1498,1.039,1499,1.039,1500,2.334,1501,1.039,1502,1.039,1503,1.039,1504,1.039,1505,1.039,1506,4.652,1507,1.78,1508,1.039,1509,1.039,1510,3.108,1511,1.039,1512,1.039,1513,1.039,1514,1.039,1515,1.039,1516,1.039,1517,3.39,1518,3.822,1519,2.334,1520,1.039,1521,1.039,1522,1.78,1523,1.039,1524,1.78,1525,1.039,1526,1.78,1527,1.039,1528,1.039,1529,1.039,1530,1.039,1531,1.039,1532,1.039,1533,1.039,1534,1.039,1535,1.039,1536,2.764,1537,1.039,1538,1.039,1539,1.78,1540,2.764,1541,1.78,1542,1.039,1543,2.764,1544,1.78,1545,1.039,1546,1.78,1547,1.039,1548,1.039,1549,1.78,1550,1.039,1551,1.039,1552,1.78,1553,1.039,1554,3.624,1555,1.78,1556,1.78,1557,1.039,1558,1.78,1559,1.78,1560,1.039,1561,1.039,1562,1.039,1563,1.78,1564,1.039,1565,1.78,1566,1.78,1567,1.039,1568,1.039,1569,1.039,1570,1.039,1571,1.78,1572,1.039,1573,1.039,1574,1.039,1575,1.039,1576,1.78,1577,1.039,1578,1.039,1579,1.039,1580,1.039,1581,3.39,1582,1.039,1583,1.039,1584,1.78,1585,1.039,1586,1.039,1587,1.039,1588,1.039,1589,1.039,1590,1.039,1591,1.039,1592,1.039,1593,1.039,1594,1.78,1595,1.039,1596,1.039,1597,1.039,1598,1.039,1599,1.039,1600,1.039,1601,1.039,1602,1.039,1603,1.039,1604,1.039,1605,1.039,1606,1.78,1607,1.039,1608,1.039,1609,1.039,1610,1.039,1611,1.039,1612,1.039,1613,1.039,1614,1.039,1615,1.039,1616,1.039,1617,1.039,1618,1.039,1619,1.039,1620,1.039,1621,1.039,1622,1.039,1623,1.039,1624,2.334,1625,1.039,1626,2.764,1627,1.78,1628,1.039,1629,1.039,1630,1.039,1631,1.039,1632,1.039,1633,1.039,1634,1.039,1635,1.039,1636,1.039,1637,1.039,1638,1.039,1639,1.039,1640,1.039,1641,1.039,1642,1.039,1643,1.039,1644,1.039,1645,1.039,1646,1.039,1647,1.039,1648,1.039,1649,1.039,1650,1.039,1651,1.039,1652,1.039,1653,1.039,1654,1.039,1655,1.039,1656,1.039,1657,1.039,1658,1.039,1659,1.039,1660,1.039,1661,1.039,1662,1.039,1663,1.039,1664,1.039,1665,1.78,1666,1.039,1667,1.039,1668,1.039,1669,1.039,1670,1.78,1671,1.039,1672,1.039,1673,1.039,1674,1.039,1675,1.039,1676,1.039,1677,1.039,1678,1.039,1679,1.039,1680,1.039,1681,1.039,1682,1.039,1683,1.039,1684,1.039,1685,1.039,1686,1.039,1687,1.039,1688,1.039,1689,1.78,1690,1.039,1691,1.039,1692,2.764,1693,1.039,1694,1.039,1695,1.039,1696,1.039,1697,1.039,1698,1.039,1699,1.039,1700,1.039,1701,1.039,1702,1.039,1703,1.039,1704,1.039,1705,1.039,1706,1.039,1707,1.039,1708,1.039,1709,1.039,1710,1.78,1711,1.039,1712,2.334,1713,1.039,1714,1.039,1715,1.039,1716,1.039,1717,1.039,1718,1.039,1719,1.039,1720,1.039,1721,1.039,1722,1.039,1723,1.039,1724,1.039,1725,1.039,1726,1.039,1727,1.039,1728,1.039,1729,1.039,1730,1.039,1731,3.822,1732,1.039,1733,1.039,1734,1.039,1735,1.039,1736,1.039,1737,1.039,1738,1.039,1739,1.039,1740,1.039,1741,1.039,1742,1.039,1743,1.039,1744,1.78,1745,3.108,1746,1.039,1747,1.039,1748,1.039,1749,3.39,1750,1.78,1751,1.78,1752,1.78,1753,1.039,1754,1.78,1755,1.78,1756,1.039,1757,1.78,1758,1.039,1759,1.039,1760,1.039,1761,1.039,1762,1.78,1763,1.039,1764,1.039,1765,1.78,1766,1.039,1767,1.039,1768,1.78,1769,1.78,1770,1.039,1771,1.039,1772,1.039,1773,1.039,1774,1.039,1775,1.039,1776,1.039,1777,1.039,1778,1.039,1779,1.039]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":376,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.016",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.026",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.028",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.055",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.057",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.075",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.083",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.099",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.109",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.126",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.139",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.157",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.182",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.19",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.244",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.265",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.412",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.467",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.472",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":757,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["0.506",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.593",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.615",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.927",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.934",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["076ace0",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["077e473",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["08cead1",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":527,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":785,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0004",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7965",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9029",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100px",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["108",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":686,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["11.0",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1922",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2885",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3906",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.5582",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6209",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6223",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6557",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.7",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8652",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.9269",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.0",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2378",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3228",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3318",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3438",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.6543",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7115",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7344",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.8078",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":415,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["1200px",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.1192",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.2035",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.4627",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.5078",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.7",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.9996",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138a847",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["14.1",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4738",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.6",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.9",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1440px",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1454cbb",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.3",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.393",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.5735",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.8",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1555a25",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["16.0",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.2945",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c19.1764",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c8.60701",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6388",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.7",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["16px",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.2635",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6112",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6948",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c20.1986",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c7.70549",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.9",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["18.5479",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.8973",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18a3e23",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["19.1",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c11.2656",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c14.1434",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.3425",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.4301",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.6567",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.7929",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091c12.3443",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091l12",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.85l12.0731",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19043fc",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":407,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":634,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.4",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c14.9702",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c3.82903",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5zm6.73649",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.171",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c10.4922",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c14.9816",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.5",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.7157",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.9544",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":636,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21.1169c11.4093",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.1169c13.0971",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2031",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2388",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2886",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.318",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3516c11.7407",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3693c12.5003",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4132",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4238",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527c12.1193",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.5",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.9",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22px",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.0",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.1",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.8",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":428,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["235",{"_index":427,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["24",{"_index":680,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["24.0",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.3",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24bfb15",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.9",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["26.5",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.0",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e6cb05",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2xl",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":604,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.72621",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.80141",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["30.0",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":974,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3047cec",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["31.6",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.8",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.5",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["34.1",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.4",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.0",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["36.0",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.0",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.1",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.6",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["38.1",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.7",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["39.0",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["3dc1a0a",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1157,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.8",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8236",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.1",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.3",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.4",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":410,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["41",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["41.0",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.2",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.6",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425px",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.0",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.1",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.2",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.4",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.5",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.9",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.5",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.3",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.5",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.6",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4748b98",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["48.7",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.5",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a434e6",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["4c15.1581",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c4.65746",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c7d29a",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xl",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4z",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":881,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["5.052",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.38899",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.4",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.6",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.60482c10.8808",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.8",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.88043",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.9",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50.0",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["51.1",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.1",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.3",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52b97ed",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["53.6",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55.2",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.1",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.3",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57.2",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5797c54",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["58.5",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5846c42",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["59.0",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.4",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5ae3704",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["5rem",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1156,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["6.0",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.38882",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.73649",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.8",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.0",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.2",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.6",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.2",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["627",{"_index":417,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["627px",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63.0",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.0",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.3",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64372f4",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["64px",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.0",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.3",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.8",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.1",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6893d90",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["68d0202",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["69.4",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.5",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6efe0e6",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":743,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["7.0",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.36118",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.4",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c10.5373",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c12.6094",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.94883",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.0",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.2",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.2",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["715e349",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72.0",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.2",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.3",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.0",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.3",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.9",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.4",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78.0",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["792992e",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["7c6f199",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["7d82c0d",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541c11.6772",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c1",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c2.5",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c21.5",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c23",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.84185",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80px",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.2",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.7",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.9",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.3",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84.5",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.1",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.3",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.9",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8594508",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["86.5",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86.7",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.6",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.7",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.8",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8757519",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["88.2",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.3",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.6",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.9",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.0",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.7",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8b48513",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":429,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["9.0",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.01844",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.02981",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.2",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.8",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.85656",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.2",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.3",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.1",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.4",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.8",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.9",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.2",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.4",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.6",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.0",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.2",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.4",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.5",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.9",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.0",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.1",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.7",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.8",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.0",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.2",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.3",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.8",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.0",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.4",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.5",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.8",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96px",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.0",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.1",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.3",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.6",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.9",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977df75",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["98.0",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.5",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.6",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.7",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.8",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.9",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.0",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.1",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.2",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.4",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.6",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.size",{"_index":595,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["a0e6d3f",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1117,"title":{},"body":{"license.html":{}}}],["acc",{"_index":373,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["access",{"_index":1001,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":529,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":547,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":1143,"title":{},"body":{"license.html":{}}}],["actions",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":701,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":1056,"title":{},"body":{"index.html":{}}}],["adding",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["adjust",{"_index":1053,"title":{},"body":{"index.html":{}}}],["advised",{"_index":1018,"title":{},"body":{"index.html":{}}}],["ago",{"_index":612,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["ahmed",{"_index":1169,"title":{},"body":{"properties.html":{}}}],["amz",{"_index":318,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["and/or",{"_index":1109,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1027,"title":{},"body":{"index.html":{}}}],["api_domain=opengraph.opensauced.pizza",{"_index":1036,"title":{},"body":{"index.html":{}}}],["api_host=0.0.0.0",{"_index":1034,"title":{},"body":{"index.html":{}}}],["api_port=3005",{"_index":1035,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":285,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apiconfig",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":286,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinocontentresponse",{"_index":287,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinotfoundresponse",{"_index":288,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiokresponse",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apioperation",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiresponse",{"_index":289,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags(\"health",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"highlight",{"_index":294,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apitags(\"user",{"_index":564,"title":{},"body":{"controllers/UserCardController.html":{}}}],["app",{"_index":744,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":1031,"title":{},"body":{"index.html":{}}}],["application",{"_index":885,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1147,"title":{},"body":{"license.html":{}}}],["array",{"_index":986,"title":{},"body":{"index.html":{}}}],["array.from(object.values(langs)).sort((a",{"_index":592,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["asc",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":818,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":1098,"title":{},"body":{"license.html":{}}}],["async",{"_index":107,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["atwa",{"_index":1171,"title":{},"body":{"properties.html":{}}}],["author",{"_index":1168,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":147,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":1136,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1154,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":330,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1019,"title":{},"body":{"index.html":{}}}],["await",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["awaits",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":248,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["aws",{"_index":511,"title":{},"body":{"injectables/S3FileStorageService.html":{},"index.html":{}}}],["axios",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":593,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b.size",{"_index":594,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b1f870c",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["b6abefa",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":425,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["backgroundimage",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["bee0e6e",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1047,"title":{},"body":{"index.html":{}}}],["being",{"_index":801,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":1078,"title":{},"body":{"index.html":{}}}],["beta",{"_index":953,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":635,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.6",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["beta.opengraph.opensauced",{"_index":955,"title":{},"body":{"index.html":{}}}],["beta@digital",{"_index":954,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":962,"title":{},"body":{"index.html":{}}}],["bio",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":331,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["body.length",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.slice(0",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bootstrap",{"_index":921,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxshadow",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":1085,"title":{},"body":{"index.html":{}}}],["break",{"_index":1045,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1152,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1150,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":535,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{}}}],["bucketname",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":500,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1164,"title":{},"body":{"properties.html":{}}}],["build",{"_index":780,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":1090,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["c5a5fec",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":247,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["cached",{"_index":1021,"title":{},"body":{"index.html":{}}}],["caching",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":249,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"properties.html":{}}}],["card.controller",{"_index":466,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.controller.ts",{"_index":235,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"coverage.html":{}}}],["card.controller.ts:31",{"_index":561,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:33",{"_index":279,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:55",{"_index":557,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:57",{"_index":265,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":464,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.service",{"_index":292,"title":{},"body":{"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{}}}],["card.service.ts",{"_index":329,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["card.service.ts:106",{"_index":470,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:109",{"_index":619,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:135",{"_index":623,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:136",{"_index":475,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:31",{"_index":617,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:32",{"_index":468,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:39",{"_index":625,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:40",{"_index":477,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:75",{"_index":472,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:78",{"_index":621,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.template",{"_index":359,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["card.template.ts",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/highlight",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["card/templates/highlight",{"_index":924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/card",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/repo",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/user",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/tailwind.config.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/user",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["cardfooter",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfooter(langs",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cards",{"_index":295,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["cardstylesetup",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":538,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["catching",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["ccc8a96",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["cdn",{"_index":723,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdn.opensauced.pizzaother",{"_index":1026,"title":{},"body":{"index.html":{}}}],["cdncustomdomain",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1029,"title":{},"body":{"index.html":{}}}],["changed",{"_index":688,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":628,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":1076,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1095,"title":{},"body":{"license.html":{}}}],["charlimit",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charlimit).replace",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["checkhighlightsocialcard",{"_index":237,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkhighlightsocialcard(id",{"_index":239,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkrequiresupdate",{"_index":434,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["checkrequiresupdate(id",{"_index":469,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["checkrequiresupdate(username",{"_index":618,"title":{},"body":{"injectables/UserCardService.html":{}}}],["checkusersocialcard",{"_index":551,"title":{},"body":{"controllers/UserCardController.html":{}}}],["checkusersocialcard(username",{"_index":553,"title":{},"body":{"controllers/UserCardController.html":{}}}],["cito",{"_index":970,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1139,"title":{},"body":{"license.html":{}}}],["class",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["classes",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["clc",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["clip",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closes",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":90,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":91,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":92,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule",{"_index":461,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule_imports",{"_index":462,"title":{},"body":{"modules/HighlightCardModule.html":{}}}],["cluster_highlightcardmodule_providers",{"_index":463,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":478,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":479,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":480,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_usercardmodule",{"_index":614,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["cluster_usercardmodule_imports",{"_index":615,"title":{},"body":{"modules/UserCardModule.html":{}}}],["cluster_usercardmodule_providers",{"_index":616,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["code",{"_index":716,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codename",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":808,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["colors.util",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":1043,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commits",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":1048,"title":{},"body":{"index.html":{}}}],["community",{"_index":1068,"title":{},"body":{"index.html":{}}}],["company",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":1059,"title":{},"body":{"index.html":{}}}],["component",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["concept",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1116,"title":{},"body":{"license.html":{}}}],["config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":530,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":524,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":532,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":997,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":113,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":724,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configured",{"_index":1032,"title":{},"body":{"index.html":{}}}],["connected",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1148,"title":{},"body":{"license.html":{}}}],["const",{"_index":150,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["constructor(config",{"_index":491,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":112,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":467,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/UserCardService.html":{}}}],["container",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":502,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1144,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1063,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1061,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":776,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["controller",{"_index":170,"title":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"highlights",{"_index":293,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["controller(\"users",{"_index":563,"title":{},"body":{"controllers/UserCardController.html":{}}}],["controllers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":1071,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1111,"title":{},"body":{"license.html":{}}}],["copy",{"_index":972,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1089,"title":{},"body":{"license.html":{}}}],["correct",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":165,"title":{},"body":{"injectables/GithubService.html":{}}}],["count",{"_index":447,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["couple",{"_index":1052,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":905,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":528,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["curr",{"_index":374,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["custom",{"_index":722,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customprops",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["d84015b",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["d='m6.73649",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1140,"title":{},"body":{"license.html":{}}}],["dark",{"_index":750,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":420,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["data:image/svg+xml,%3csvg",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":152,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date((new",{"_index":154,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":583,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(updated_at",{"_index":389,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["date).getdate",{"_index":608,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate((new",{"_index":607,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate(today.getdate",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["datesince",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":611,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["dc9f3a4",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["dd096ca",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1100,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1149,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["defauls",{"_index":1013,"title":{},"body":{"index.html":{}}}],["default",{"_index":131,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1028,"title":{},"body":{"index.html":{}}}],["defined",{"_index":114,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":889,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deployment",{"_index":698,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":273,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"properties.html":{}}}],["design",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":976,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev/usercards.ts",{"_index":989,"title":{},"body":{"index.html":{}}}],["dev:usercards",{"_index":985,"title":{},"body":{"index.html":{}}}],["developing",{"_index":983,"title":{},"body":{"index.html":{}}}],["development",{"_index":711,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devit",{"_index":1017,"title":{},"body":{"index.html":{}}}],["differently",{"_index":1033,"title":{},"body":{"index.html":{}}}],["digital",{"_index":718,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitalocean",{"_index":1004,"title":{},"body":{"index.html":{}}}],["digitaloceanconfig",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":394,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["direction",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discord.find",{"_index":1072,"title":{},"body":{"index.html":{}}}],["disk",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_percentage=0.7",{"_index":1039,"title":{},"body":{"index.html":{}}}],["disk_size",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size=100",{"_index":1040,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":683,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/local",{"_index":991,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1107,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":865,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["do_spaces_",{"_index":1010,"title":{},"body":{"index.html":{}}}],["do_spaces_access_key_id",{"_index":1006,"title":{},"body":{"index.html":{}}}],["do_spaces_bucket_name=opengraph",{"_index":1016,"title":{},"body":{"index.html":{}}}],["do_spaces_cdn_disabled=trueif",{"_index":1023,"title":{},"body":{"index.html":{}}}],["do_spaces_endpoint=digitaloceanspaces.com",{"_index":1014,"title":{},"body":{"index.html":{}}}],["do_spaces_region=sfo3",{"_index":1015,"title":{},"body":{"index.html":{}}}],["do_spaces_secret_access_key=*******************************************ping",{"_index":1007,"title":{},"body":{"index.html":{}}}],["do_spaces_subdomain=beta.opengraph",{"_index":1025,"title":{},"body":{"index.html":{}}}],["docker",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":967,"title":{},"body":{"index.html":{}}}],["document",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":706,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1024,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":1158,"title":{},"body":{"properties.html":{}}}],["double",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["downgrade",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":1055,"title":{},"body":{"index.html":{}}}],["during",{"_index":1022,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["earlier",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":526,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge",{"_index":384,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["edge.node",{"_index":385,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge.size",{"_index":386,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge?.node.id",{"_index":586,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edges",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":1062,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":523,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{}}}],["engineer",{"_index":995,"title":{},"body":{"index.html":{}}}],["engines",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["env.example",{"_index":993,"title":{},"body":{"index.html":{}}}],["environment",{"_index":760,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["error",{"_index":539,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":541,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":736,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["etl",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1135,"title":{},"body":{"license.html":{}}}],["exceeded",{"_index":300,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["exceeded'})@apibadrequestresponse({description",{"_index":277,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["exceeded'})@redirect",{"_index":560,"title":{},"body":{"controllers/UserCardController.html":{}}}],["except",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":450,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["explanation",{"_index":999,"title":{},"body":{"index.html":{}}}],["export",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["exports",{"_index":95,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":1126,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraneous",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["extrenaous",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["f7db713",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":458,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fastify",{"_index":290,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["fastifyreply",{"_index":242,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["fc9211c",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["fe44711",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":977,"title":{},"body":{"index.html":{}}}],["ff5f13",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":505,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":487,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":493,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":1099,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":303,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fill",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='%2324292f'/%3e%3c/svg%3e",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='none",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs.length",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":992,"title":{},"body":{"index.html":{}}}],["first",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":355,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["firstvaluefrom(this.httpservice.get(`https://api.opensauced.pizza/v1/highlights/${highlightid}/reactions",{"_index":371,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["firstvaluefrom(this.httpservice.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightid",{"_index":367,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["fitness",{"_index":1131,"title":{},"body":{"license.html":{}}}],["fix",{"_index":662,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":866,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":960,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":418,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["footer.ts",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":337,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["forcepathstyle",{"_index":522,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":1046,"title":{},"body":{"index.html":{}}}],["formattedname",{"_index":573,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["found",{"_index":260,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":275,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["free",{"_index":1094,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":344,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fs.readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":409,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["full",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":845,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1114,"title":{},"body":{"license.html":{}}}],["gaps",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1159,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":861,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatecardbuffer",{"_index":396,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["generatecardbuffer(highlightid",{"_index":471,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["generatecardbuffer(username",{"_index":620,"title":{},"body":{"injectables/UserCardService.html":{}}}],["generated",{"_index":1081,"title":{},"body":{"index.html":{}}}],["generatehighlightsocialcard",{"_index":238,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generatehighlightsocialcard(id",{"_index":266,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generates",{"_index":269,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{}}}],["generateusersocialcard",{"_index":552,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generateusersocialcard(username",{"_index":558,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generating",{"_index":984,"title":{},"body":{"index.html":{}}}],["generation",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":946,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:id",{"_index":296,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get(\"/:id/metadata",{"_index":311,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get(\"/:username",{"_index":565,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/:username/metadata",{"_index":571,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/service",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":267,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get('/:id/metadata')@apioperation({operationid",{"_index":243,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":559,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/:username/metadata')@apioperation({operationid",{"_index":554,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":484,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":488,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":495,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta",{"_index":489,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta(hash",{"_index":497,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["gethighlightcard",{"_index":459,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightcard(id",{"_index":474,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightdata",{"_index":364,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightdata(highlightid",{"_index":476,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightsocialcardmetadata",{"_index":244,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["getoriginendpoint",{"_index":485,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getrepo",{"_index":108,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrepo(owner",{"_index":119,"title":{},"body":{"injectables/GithubService.html":{}}}],["gets",{"_index":245,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["getting",{"_index":626,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["getuser",{"_index":109,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":126,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":613,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getusercard(username",{"_index":622,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getuserdata",{"_index":579,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getuserdata(username",{"_index":624,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getusersocialcardmetadata",{"_index":555,"title":{},"body":{"controllers/UserCardController.html":{}}}],["gfonts",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1166,"title":{},"body":{"properties.html":{}}}],["github",{"_index":696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":96,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/github.module",{"_index":465,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["github/github.service",{"_index":346,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["github_pat_user=ghp_",{"_index":1003,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":149,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":89,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":93,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":982,"title":{},"body":{"index.html":{}}}],["gql/get",{"_index":141,"title":{},"body":{"injectables/GithubService.html":{}}}],["gradient",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient(var",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1093,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1153,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":136,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":145,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":104,"title":{},"body":{"injectables/GithubService.html":{}}}],["grass",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":1065,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1066,"title":{},"body":{"index.html":{}}}],["handler",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["hasfile",{"_index":304,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hash",{"_index":435,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hassponsorslisting",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["having",{"_index":980,"title":{},"body":{"index.html":{}}}],["head",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":280,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["header(\"content",{"_index":298,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["headers",{"_index":146,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["headobjectcommand",{"_index":509,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":232,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":171,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":230,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{}}}],["hearticondata",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":416,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["height='24",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1012,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1092,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":252,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{}}}],["highlightcardcontroller",{"_index":233,"title":{"controllers/HighlightCardController.html":{}},"body":{"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"coverage.html":{}}}],["highlightcarddata",{"_index":327,"title":{"interfaces/HighlightCardData.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["highlightcardmodule",{"_index":6,"title":{"modules/HighlightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["highlightcardservice",{"_index":291,"title":{"injectables/HighlightCardService.html":{}},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["highlightcardtemplate",{"_index":357,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlightdata",{"_index":397,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightid",{"_index":365,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq",{"_index":366,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq.data",{"_index":369,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlights",{"_index":236,"title":{},"body":{"controllers/HighlightCardController.html":{},"changelog.html":{}}}],["highlights/${string(id)}.png",{"_index":436,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["higlight",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1137,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1161,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(116",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(120",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(121",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(122",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(124",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(126",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(130",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(131",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(132",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(133",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(134",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(135",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(136",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(137",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(146",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(15",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(19",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(195",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(197",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(198",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(199",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(200",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(201",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(203",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(205",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(206",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(207",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(208",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(209",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(210",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(211",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(212",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(213",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(214",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(216",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(23",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(24",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(25",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(26",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(28",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(30",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(33",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(351",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(353",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(354",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(356",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(357",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(358",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(359",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(360",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(0",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(181",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(182",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(19",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(200",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(202",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(204",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(205",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(206",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(207",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(208",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(209",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(210",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(211",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(216",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":398,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["html(highlightcardtemplate(avatarurl",{"_index":404,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["html(userprofilecardtemplate(avatarurl",{"_index":602,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["http",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["https",{"_index":870,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/open",{"_index":1162,"title":{},"body":{"properties.html":{}}}],["httpservice",{"_index":339,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["httpstatus",{"_index":281,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.bad_request",{"_index":315,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["httpstatus.no_content",{"_index":312,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_found",{"_index":314,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_modified",{"_index":313,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["icon",{"_index":772,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":263,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["id'})@apinocontentresponse({description",{"_index":251,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["id'})@redirect",{"_index":278,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["identifier",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":253,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["image'})@apinotfoundresponse({description",{"_index":274,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png",{"_index":299,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":271,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["images",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1127,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori",{"_index":399,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori\")).default",{"_index":401,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["included",{"_index":1120,"title":{},"body":{"license.html":{}}}],["including",{"_index":1060,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":100,"title":{"index.html":{}},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":520,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":143,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":97,"title":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":98,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"overview.html":{}}}],["input",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insertion",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":987,"title":{},"body":{"index.html":{}}}],["install",{"_index":968,"title":{},"body":{"index.html":{}}}],["installed",{"_index":963,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":540,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":419,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":408,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interface",{"_index":326,"title":{"interfaces/HighlightCardData.html":{},"interfaces/UserCardData.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":328,"title":{},"body":{"interfaces/HighlightCardData.html":{},"interfaces/UserCardData.html":{},"overview.html":{}}}],["invalid",{"_index":262,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["isbountyhunter",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1070,"title":{},"body":{"index.html":{}}}],["join(joinliteral",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":342,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["json.stringify(ratelimit",{"_index":169,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":537,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keys",{"_index":1009,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":1160,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1125,"title":{},"body":{"license.html":{}}}],["langlist",{"_index":382,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["langrepos",{"_index":581,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langrepos.map(repo",{"_index":584,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs",{"_index":332,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":588,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs[edge.node.id].size",{"_index":589,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langtotal",{"_index":333,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["language",{"_index":343,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":639,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages(first",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":320,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodified",{"_index":316,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified.toisostring",{"_index":451,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified?.toisostring",{"_index":322,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["latest",{"_index":246,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["layout",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":610,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["level",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1141,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1138,"title":{},"body":{"license.html":{}}}],["license",{"_index":1087,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["light",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":164,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["limit).join(\"\")}${repolist.length",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":1102,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1128,"title":{},"body":{"license.html":{}}}],["link",{"_index":268,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["lins",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1041,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":1044,"title":{},"body":{"index.html":{}}}],["little",{"_index":998,"title":{},"body":{"index.html":{}}}],["live",{"_index":694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":392,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":978,"title":{},"body":{"index.html":{}}}],["location",{"_index":323,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":105,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["logger(githubservice.name",{"_index":134,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":363,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["loggermodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":368,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["lowercase",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":964,"title":{},"body":{"index.html":{}}}],["main",{"_index":949,"title":{},"body":{"index.html":{}}}],["make",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_heap=200",{"_index":1037,"title":{},"body":{"index.html":{}}}],["memory_rss",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss=3000",{"_index":1038,"title":{},"body":{"index.html":{}}}],["memoryhealthindicator",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1130,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1105,"title":{},"body":{"license.html":{}}}],["message",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":319,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["metadata",{"_index":250,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{}}}],["metadata?.[\"reactions",{"_index":446,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["method",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":106,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["min",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":943,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1054,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1088,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":321,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["modify",{"_index":1104,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":1170,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":1000,"title":{},"body":{"index.html":{}}}],["move",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":996,"title":{},"body":{"index.html":{}}}],["namewithowner",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":959,"title":{},"body":{"index.html":{}}}],["needs",{"_index":257,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["needsupdate",{"_index":305,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["nestjs",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["nestjs/terminus",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":133,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":452,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["next",{"_index":947,"title":{},"body":{"index.html":{}}}],["nextjs",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":879,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":345,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["node:stream",{"_index":513,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":965,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1134,"title":{},"body":{"license.html":{}}}],["normal",{"_index":423,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["normal.woff",{"_index":411,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notable",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":542,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notfoundexception",{"_index":338,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notice",{"_index":1118,"title":{},"body":{"license.html":{}}}],["npm",{"_index":969,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":966,"title":{},"body":{"index.html":{}}}],["null",{"_index":440,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["number",{"_index":240,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["number(curr.reaction_count",{"_index":375,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":587,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["obtaining",{"_index":1097,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":719,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.app",{"_index":951,"title":{},"body":{"index.html":{}}}],["ocean.config",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":1082,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":137,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["one",{"_index":297,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["one'})@header('content",{"_index":270,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["opacity",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph",{"_index":945,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced",{"_index":952,"title":{},"body":{"index.html":{}}}],["opengraph.opensauced.pizza",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opengraph@digital",{"_index":950,"title":{},"body":{"index.html":{}}}],["opening",{"_index":1049,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["optimize",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":118,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["options",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["orange",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":957,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":1146,"title":{},"body":{"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outputs",{"_index":990,"title":{},"body":{"index.html":{}}}],["overflowing",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1155,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1074,"title":{},"body":{"index.html":{}}}],["owner",{"_index":123,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":809,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1057,"title":{},"body":{"index.html":{}}}],["paginate",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":282,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["param(\"id",{"_index":301,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["param(\"username",{"_index":566,"title":{},"body":{"controllers/UserCardController.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["parseintpipe",{"_index":283,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["partial",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1132,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":302,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["path",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["permission",{"_index":1091,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1112,"title":{},"body":{"license.html":{}}}],["person",{"_index":1096,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1113,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["pinneditems",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1064,"title":{},"body":{"index.html":{}}}],["png",{"_index":432,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata",{"_index":430,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata.aspng",{"_index":433,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["port",{"_index":973,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1122,"title":{},"body":{"license.html":{}}}],["pr's",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["prerequisites",{"_index":956,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":102,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["proceed",{"_index":1067,"title":{},"body":{"index.html":{}}}],["process.env.ci",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":948,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":576,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":632,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":129,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pronouns",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proof",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":101,"title":{"properties.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"properties.html":{}}}],["protocol",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1123,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["prpat",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":390,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["publish",{"_index":1106,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1050,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1133,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":510,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":1042,"title":{},"body":{"index.html":{}}}],["query",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":1069,"title":{},"body":{"index.html":{}}}],["radial",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":276,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["ratelimit",{"_index":110,"title":{},"body":{"injectables/GithubService.html":{}}}],["reaction",{"_index":454,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reactions",{"_index":334,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["reactionsreq",{"_index":370,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reactionsreq.data.reduce",{"_index":372,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["read",{"_index":548,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":501,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readme",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":103,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["realpercent",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":503,"title":{},"body":{"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["red",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":284,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["redirecting",{"_index":456,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["refactoring",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["regeneration",{"_index":258,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["region",{"_index":525,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":695,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":166,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["remove",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":121,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repo.languages?.edges?.flatmap(edge",{"_index":383,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":585,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo.languages?.totalsize",{"_index":388,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.ts",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo?.isprivate",{"_index":597,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo?.owner.login",{"_index":598,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repoiconwithname",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoiconwithname(`${name.substring(0",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame",{"_index":377,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repos",{"_index":352,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repos.length",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.ts",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["repositories(first",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":138,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":1080,"title":{},"body":{"index.html":{}}}],["request",{"_index":1051,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":888,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requiresupdatemeta",{"_index":360,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["res",{"_index":241,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(fileurl",{"_index":307,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(url",{"_index":310,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":167,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":544,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":545,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.metadata",{"_index":546,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":1101,"title":{},"body":{"license.html":{}}}],["results",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":340,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg(svg",{"_index":424,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg.render",{"_index":431,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg/resvg",{"_index":341,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["return",{"_index":162,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":124,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["returnval",{"_index":439,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.lastmodified",{"_index":442,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.needsupdate",{"_index":457,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["reverse",{"_index":994,"title":{},"body":{"index.html":{}}}],["rewrite",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["rewrites",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(17",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(181",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(237",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(238",{"_index":426,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["rights",{"_index":1103,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["rule='evenodd",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":958,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":356,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["s3",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{}}}],["s3client",{"_index":486,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":8,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":347,"title":{"injectables/S3FileStorageService.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["same",{"_index":455,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["sanitizedusername",{"_index":567,"title":{},"body":{"controllers/UserCardController.html":{}}}],["satori",{"_index":400,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["satori(template",{"_index":413,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["sauced",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/maintainers",{"_index":1008,"title":{},"body":{"index.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":1163,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":1167,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":1165,"title":{},"body":{"properties.html":{}}}],["savedreactions",{"_index":445,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["schema",{"_index":140,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["screens",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":393,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["sdk",{"_index":715,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sdk/client",{"_index":512,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":531,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1110,"title":{},"body":{"license.html":{}}}],["send",{"_index":325,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["sensibly",{"_index":1011,"title":{},"body":{"index.html":{}}}],["server",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["set",{"_index":897,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setup.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sfo3",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1119,"title":{},"body":{"license.html":{}}}],["singleline",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":362,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["social",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":961,"title":{},"body":{"index.html":{},"license.html":{}}}],["sometimes",{"_index":1030,"title":{},"body":{"index.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["spaces",{"_index":720,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["spacing",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":379,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["splitting",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../highlight",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tailwind.config.ts",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/github.module.ts",{"_index":94,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":99,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:12",{"_index":135,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:13",{"_index":115,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:22",{"_index":127,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:33",{"_index":122,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:41",{"_index":130,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":231,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":481,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":234,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":971,"title":{},"body":{"index.html":{}}}],["start:devlocal",{"_index":975,"title":{},"body":{"index.html":{}}}],["started",{"_index":627,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":754,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":255,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["status(hasfile",{"_index":324,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["stops",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/UserCardModule.html":{}}}],["storage.module.ts",{"_index":482,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":348,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["storage.service.ts",{"_index":483,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:10",{"_index":508,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:12",{"_index":507,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:14",{"_index":506,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:16",{"_index":492,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:33",{"_index":494,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:53",{"_index":496,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:74",{"_index":498,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:95",{"_index":504,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["strategy",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["streamablefile",{"_index":272,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["string",{"_index":120,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(reactions",{"_index":448,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":387,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["style",{"_index":422,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":700,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styling",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1115,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1108,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1121,"title":{},"body":{"license.html":{}}}],["suite",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["superlative",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1151,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":412,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"modules.html":{}}}],["switch",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["tailwind",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["tailwindconfig",{"_index":353,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":403,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/highlight",{"_index":358,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["templates/shared/user",{"_index":350,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/tailwind.config",{"_index":354,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/user",{"_index":575,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["terminusmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":902,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test/local",{"_index":988,"title":{},"body":{"index.html":{}}}],["testing",{"_index":669,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.config.bucketname",{"_index":536,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":519,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":518,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":515,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":514,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":517,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.gethighlightdata(highlightid",{"_index":402,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(id",{"_index":443,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getoriginendpoint",{"_index":516,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.getuserdata(username",{"_index":601,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.getrepo(owner",{"_index":381,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(login",{"_index":380,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(username",{"_index":580,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":460,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.graphqlwithauth",{"_index":144,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":163,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.highlightcardservice.checkrequiresupdate(id",{"_index":306,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.highlightcardservice.gethighlightcard(id",{"_index":309,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug(`highlight",{"_index":449,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.logger.debug(`rate",{"_index":168,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.logger.debug(`user",{"_index":609,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":521,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":534,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.fileexists(hash",{"_index":438,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getcdnendpoint()}${hash",{"_index":437,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilelastmodified(hash",{"_index":441,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilemeta(hash",{"_index":444,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.usercardservice.checkrequiresupdate(sanitizedusername",{"_index":569,"title":{},"body":{"controllers/UserCardController.html":{}}}],["this.usercardservice.getusercard(sanitizedusername",{"_index":570,"title":{},"body":{"controllers/UserCardController.html":{}}}],["thresholdpercent",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":1005,"title":{},"body":{"index.html":{}}}],["throw",{"_index":543,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["title",{"_index":335,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["today",{"_index":151,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago",{"_index":153,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago.toisostring",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":606,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["token",{"_index":148,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":1002,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1145,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["try",{"_index":533,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ts5",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["tw",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitterusername",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":117,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":142,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":783,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":1058,"title":{},"body":{"index.html":{}}}],["typings/requiresupdatemeta",{"_index":361,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["ui",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":264,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":261,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":259,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apiresponse({description",{"_index":256,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["unexisting",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":125,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/HighlightCardService.html":{},"injectables/UserCardService.html":{}}}],["up",{"_index":254,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["update",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1084,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":336,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["updated_at.toisostring",{"_index":453,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["updatedat",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["uploadfile",{"_index":490,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":499,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":308,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["url.replace(\"https://github.com",{"_index":378,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["usage",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":395,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":391,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["usefactory",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":139,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{}}}],["user(login",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":590,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.login",{"_index":599,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.name",{"_index":591,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.repositories.nodes?.filter(repo",{"_index":582,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.toprepositories.nodes?.filter(repo",{"_index":596,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.ts",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user[\"databaseid",{"_index":577,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user[\"name",{"_index":578,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["usercardcontroller",{"_index":549,"title":{"controllers/UserCardController.html":{}},"body":{"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"coverage.html":{}}}],["usercarddata",{"_index":572,"title":{"interfaces/UserCardData.html":{}},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["usercardmodule",{"_index":9,"title":{"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["usercardservice",{"_index":562,"title":{"injectables/UserCardService.html":{}},"body":{"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["userdata",{"_index":600,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userlangs",{"_index":349,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":405,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["username",{"_index":128,"title":{},"body":{"injectables/GithubService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinocontentresponse({description",{"_index":556,"title":{},"body":{"controllers/UserCardController.html":{}}}],["username.tolowercase",{"_index":568,"title":{},"body":{"controllers/UserCardController.html":{}}}],["userpat",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecardtemplate",{"_index":574,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos",{"_index":351,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos([repo",{"_index":406,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["userprofilerepos(repos",{"_index":603,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["users",{"_index":550,"title":{},"body":{"controllers/UserCardController.html":{},"index.html":{}}}],["users/${string(username)}.png",{"_index":605,"title":{},"body":{"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["using",{"_index":1020,"title":{},"body":{"index.html":{}}}],["utc:hh:mm:ss.l",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":132,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":909,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":158,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":892,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1073,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visual",{"_index":1079,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1077,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":1083,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1129,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1124,"title":{},"body":{"license.html":{}}}],["way",{"_index":981,"title":{},"body":{"index.html":{}}}],["web",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":421,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["whether",{"_index":1142,"title":{},"body":{"license.html":{}}}],["width",{"_index":414,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["width='24",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":979,"title":{},"body":{"index.html":{},"license.html":{}}}],["workflow",{"_index":1086,"title":{},"body":{"index.html":{}}}],["x",{"_index":317,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/UserCardController.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cpath",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xs",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":473,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}}}],["yoga",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1075,"title":{},"body":{"index.html":{}}}],["zero",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HighlightCardModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                        \n                            UserCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { UserCardModule } from \"./social-card/user-card/user-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardModule } from \"./social-card/highlight-card/highlight-card.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        ApiConfig,\n        GitHubConfig,\n        DigitalOceanConfig,\n      ],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    S3FileStorageModule,\n    UserCardModule,\n    HighlightCardModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRepo\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, Repository, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getRepo from \"./gql/get-repo\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async getRepo (owner: string, repo: string) {\n    const { query, variables } = getRepo(owner, repo);\n\n    const { repository } = await this.graphqlWithAuth(query, variables);\n\n    return repository;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HighlightCardController.html":{"url":"controllers/HighlightCardController.html","title":"controller - HighlightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HighlightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHighlightSocialCard\n                            \n                            \n                                    Async\n                                generateHighlightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getHighlightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Highlight social card image is up to date', status: undefined})@ApiResponse({description: 'Highlight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Highlight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid highlight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateHighlightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Highlight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid highlight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, ParseIntPipe, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { HighlightCardService } from \"./highlight-card.service\";\n\n\n@Controller(\"highlights\")\n@ApiTags(\"Highlight social cards\")\nexport class HighlightCardController {\n  constructor (\n    private readonly highlightCardService: HighlightCardService,\n  ) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateHighlightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Highlight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\" })\n  @Redirect()\n  async generateHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.highlightCardService.getHighlightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getHighlightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Highlight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Highlight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Highlight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\", status: HttpStatus.BAD_REQUEST })\n  async checkHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightCardData.html":{"url":"interfaces/HighlightCardData.html","title":"interface - HighlightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HighlightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            reactions\n                                        \n                                \n                                \n                                        \n                                            repo\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo:     Repository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport RequiresUpdateMeta from \"../../../typings/RequiresUpdateMeta\";\n\ninterface HighlightCardData {\n  title: string,\n  body: string,\n  reactions: number,\n  avatarUrl: string,\n  repo: Repository,\n  langTotal: number,\n  langs: (Language & {\n    size: number,\n  })[],\n  updated_at: Date,\n  url: string,\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`));\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`));\n    const reactions = reactionsReq.data.reduce( (acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData ? highlightData : await this.getHighlightData(highlightId);\n\n    const template = html(highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(`Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HighlightCardModule.html":{"url":"modules/HighlightCardModule.html","title":"module - HighlightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    HighlightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_imports\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HighlightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HighlightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardService } from \"../highlight-card/highlight-card.service\";\nimport { HighlightCardController } from \"./highlight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [HighlightCardService],\n  controllers: [HighlightCardController],\n})\nexport class HighlightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HighlightCardService.html":{"url":"injectables/HighlightCardService.html","title":"injectable - HighlightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HighlightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getHighlightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getHighlightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(highlightId: number, highlightData?: HighlightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightData\n                                    \n                                                HighlightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHighlightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getHighlightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightData(highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport RequiresUpdateMeta from \"../../../typings/RequiresUpdateMeta\";\n\ninterface HighlightCardData {\n  title: string,\n  body: string,\n  reactions: number,\n  avatarUrl: string,\n  repo: Repository,\n  langTotal: number,\n  langs: (Language & {\n    size: number,\n  })[],\n  updated_at: Date,\n  url: string,\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`));\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`));\n    const reactions = reactionsReq.data.reduce( (acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData ? highlightData : await this.getHighlightData(highlightId);\n\n    const template = html(highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(`Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                getFileMeta\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileMeta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileMeta(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string, metadata?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileMeta (hash: string): Promise | null> {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.Metadata ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n    metadata?: Record,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n        Metadata: metadata,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserCardController.html":{"url":"controllers/UserCardController.html","title":"controller - UserCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserSocialCard\n                            \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/metadata')@ApiOperation({operationId: 'getUserSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :username'})@ApiNoContentResponse({description: 'User social card image is up to date', status: undefined})@ApiResponse({description: 'User social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'User social card image not found', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\n\nimport { UserCardService } from \"./user-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class UserCardController {\n  constructor (\n    private readonly userCardService: UserCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.userCardService.getUserCard(sanitizedUsername);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:username/metadata\")\n  @ApiOperation({\n    operationId: \"getUserSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :username\",\n  })\n  @ApiNoContentResponse({ description: \"User social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"User social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"User social card image not found\", status: HttpStatus.NOT_FOUND })\n  async checkUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCardData.html":{"url":"interfaces/UserCardData.html","title":"interface - UserCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            formattedName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     Repository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport RequiresUpdateMeta from \"../../../typings/RequiresUpdateMeta\";\n\ninterface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n  formattedName: string,\n}\n\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login ?? username,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserCardModule.html":{"url":"modules/UserCardModule.html","title":"module - UserCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UserCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_imports\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/user-card/user-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { UserCardService } from \"./user-card.service\";\nimport { UserCardController } from \"./user-card.controller\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [UserCardService],\n  controllers: [UserCardController],\n})\nexport class UserCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserCardService.html":{"url":"injectables/UserCardService.html","title":"injectable - UserCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Private\n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/user-card/user-card.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(username: string, userData?: UserCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UserCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/user-card/user-card.service.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport RequiresUpdateMeta from \"../../../typings/RequiresUpdateMeta\";\n\ninterface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n  formattedName: string,\n}\n\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login ?? username,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.1.0-beta.5 (2023-05-05)\n🍕 Features\n\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\n\n2.1.0-beta.4 (2023-05-04)\n🍕 Features\n\nhiglight card upload & storage (#39) (b6abefa)\n\n2.1.0-beta.3 (2023-05-02)\n🍕 Features\n\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\n\n2.1.0-beta.2 (2023-04-30)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n2.1.0-beta.1 (2023-04-26)\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\n\n2.0.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.2 (2023-04-19)\n🐛 Bug Fixes\n\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\n\n2.0.0 (2023-04-11)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\nimplement no-content verification strategy (6efe0e6)\noptimize image loading and return errors (7c6f199), closes #17\n\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\ncorrect dark logo render and make it static (dc9f3a4)\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect server generation environment (68d0202)\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\nupdate graphql types (f7db713)\n\n2.0.0-beta.3 (2023-04-11)\n🤖 Build System\n\nupdate graphql types (f7db713)\n\n2.0.0-beta.2 (2023-04-11)\n🐛 Bug Fixes\n\ncorrect dark logo render and make it static (dc9f3a4)\n\n2.0.0-beta.1 (2023-04-10)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🐛 Bug Fixes\n\ncorrect server generation environment (68d0202)\n\n1.2.0-beta.10 (2023-04-10)\n🐛 Bug Fixes\n\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\n\n1.2.0-beta.9 (2023-04-10)\n🍕 Features\n\noptimize image loading and return errors (7c6f199), closes #17\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\n\n1.2.0-beta.8 (2023-04-09)\n🍕 Features\n\nimplement no-content verification strategy (6efe0e6)\n\n🐛 Bug Fixes\n\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n1.2.0-beta.7 (2023-04-09)\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n1.2.0-beta.6 (2023-04-09)\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\n\n1.2.0-beta.5 (2023-04-09)\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n🐛 Bug Fixes\n\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\n\n1.2.0-beta.4 (2023-04-08)\n🍕 Features\n\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/github/gql/get-repo.ts\n            \n            variable\n            getRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.controller.ts\n            \n            controller\n            HighlightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            injectable\n            HighlightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            interface\n            HighlightCardData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/social-card/templates/highlight-card.template.ts\n            \n            variable\n            highlightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            cardFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            heartIconData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-style-setup.ts\n            \n            variable\n            cardStyleSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/tailwind.config.ts\n            \n            variable\n            tailwindConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.template.ts\n            \n            variable\n            userProfileCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.controller.ts\n            \n            controller\n            UserCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            injectable\n            UserCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            UserCardData\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n  \n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n  \n  \n  \n  \n  \n  \n  \n\n\n🚀 Live release environments\nProduction (main)\n\nopengraph@digital-ocean.app\nopengraph.opensauced\n\nBeta (beta)\n\nopengraph-beta@digital-ocean.app\nbeta.opengraph.opensauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\n node>=18.15.0\n npm>=9.6.3\n docker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:devLocal dev scripts\nThere are a few scripts that can be used to generate and test the social cards locally without having to deploy to the CDN. This is the way to go when developing & testing the interface for the social cards.\nGenerating user profile cards:\nnpm run local-dev:usercards\nGenerates user cards for all users in the test array inside test/local-dev/UserCards.ts and outputs them in dist/local-dev/ for testing.\n\n📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nOne can reverse engineer the named configs but some need a little explanation.\nBoilerplate, changed mostly locally:\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************\n\n# DigitalOcean Spaces through aws-sdk configuration\nDO_SPACES_ACCESS_KEY_ID=********************\nDO_SPACES_SECRET_ACCESS_KEY=*******************************************Ping @open-sauced/maintainers to get the dev CDN keys for the DO_SPACES_* variables.\nOther Digital Ocean S3 variables are sensibly set to default for local development, here are the defauls:\nDO_SPACES_ENDPOINT=digitaloceanspaces.com\nDO_SPACES_REGION=sfo3\nDO_SPACES_BUCKET_NAME=opengraph-devIt is also advised to set the following variables to true to avoid using the cached CDN during development:\nDO_SPACES_CDN_DISABLED=trueIf using a custom domain, you can set the following variable to the domain name:\nDO_SPACES_SUBDOMAIN=beta.opengraph-cdn.opensauced.pizzaOther API defaults you can change are not required in local development, but can sometimes appear configured differently for production:\nAPI_HOST=0.0.0.0\nAPI_PORT=3005\nAPI_DOMAIN=opengraph.opensauced.pizza\nMEMORY_HEAP=200\nMEMORY_RSS=3000\nDISK_PERCENTAGE=0.7\nDISK_SIZE=100🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-check In order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HighlightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.1.0-beta.5\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            cardFooter   (src/.../card-footer.ts)\n                        \n                        \n                            cardStyleSetup   (src/.../card-style-setup.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            getRepo   (src/.../get-repo.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            heartIconData   (src/.../card-footer.ts)\n                        \n                        \n                            highlightCardTemplate   (src/.../highlight-card.template.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            tailwindConfig   (src/.../tailwind.config.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCardTemplate   (src/.../user-profile-card.template.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: string, repos: string, reactions?: number) => `\n    \n      \n        \n          ${repos}\n        \n\n        ${reactions\n    ? `\n          \n            \n            \n              ${reactions} Reactions\n            \n          \n        `\n    : \"\"}\n      \n\n      \n        \n          ${langs}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heartIconData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M6.73649 2.5C3.82903 2.5 1 5.052 1 8.51351C1 12.3318 3.80141 15.5735 6.38882 17.7763C7.70549 18.8973 9.01844 19.7929 10.0004 20.4077C10.4922 20.7157 10.9029 20.9544 11.1922 21.1169C11.4093 21.2388 11.5582 21.318 11.6223 21.3516C11.7407 21.4132 11.8652 21.4527 12 21.4527C12.1193 21.4527 12.2378 21.4238 12.3438 21.3693C12.5003 21.2886 12.6543 21.2031 12.8078 21.1169C13.0971 20.9544 13.5078 20.7157 13.9996 20.4077C14.9816 19.7929 16.2945 18.8973 17.6112 17.7763C20.1986 15.5735 23 12.3318 23 8.51351C23 5.052 20.171 2.5 17.2635 2.5C14.9702 2.5 13.1192 3.72621 12 5.60482C10.8808 3.72621 9.02981 2.5 6.73649 2.5ZM6.73649 4C4.65746 4 2.5 5.88043 2.5 8.51351C2.5 11.6209 4.8236 14.4738 7.36118 16.6342C8.60701 17.6948 9.85656 18.5479 10.7965 19.1364C11.2656 19.4301 11.6557 19.6567 11.9269 19.8091L12 19.85L12.0731 19.8091C12.3443 19.6567 12.7344 19.4301 13.2035 19.1364C14.1434 18.5479 15.393 17.6948 16.6388 16.6342C19.1764 14.4738 21.5 11.6209 21.5 8.51351C21.5 5.88043 19.3425 4 17.2635 4C15.1581 4 13.4627 5.38899 12.7115 7.64258C12.6094 7.94883 12.3228 8.15541 12 8.15541C11.6772 8.15541 11.3906 7.94883 11.2885 7.64258C10.5373 5.38899 8.84185 4 6.73649 4Z' fill='%2324292F'/%3e%3c/svg%3e`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-style-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardStyleSetup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  \n    div {\n      display: flex;\n    }\n  \n`\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRepo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (owner: string, repo: string) => ({\n  query: `\nquery ($owner: String!, $repo: String!) {\n  repository(\n    owner: $owner\n    name: $repo\n  ) {\n    id\n    name\n    databaseId\n    nameWithOwner\n    owner {\n      id\n      login\n      avatarUrl\n    }\n    languages (first: 100, orderBy: { field: SIZE, direction: DESC }) {\n      edges {\n        node {\n          id\n          color\n          name\n        }\n        size\n      }\n      totalSize\n      totalCount\n    }\n  }\n}`,\n  variables: {\n    owner,\n    repo,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/highlight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, title: string, body: string, langs: string, repos: string, reactions: number): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n      \n\n      \n        \n          ${title}\n        \n        \n          ${body.length > 108 ? `${body.slice(0, 108)}...` : body}\n        \n      \n\n      \n        \n      \n    \n\n    ${cardFooter(langs, repos, reactions)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n  \n    \n      \n      \n        \n          ${name}\n        \n      \n    \n  \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/tailwind.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tailwindConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  theme: {\n    extend: {\n      screens: {\n        xs: \"425px\",\n\n        // => @media (min-width: 425px) { ... }\n\n        \"2xl\": \"1440px\",\n\n        // => @media (min-width: 1440px) { ... }\n      },\n      blur: { \"4xl\": \"5rem\" },\n      spacing: {\n        \"6px\": \"6px\",\n        \"8px\": \"8px\",\n        \"12px\": \"12px\",\n        \"16px\": \"16px\",\n        \"32px\": \"32px\",\n        \"48px\": \"48px\",\n        \"96px\": \"96px\",\n        \"134px\": \"134px\",\n        \"627px\": \"627px\",\n        \"1200px\": \"1200px\",\n      },\n      colors: {\n        sauced: { orange: \"hsla(19, 100%, 50%, 1)\" },\n        gradient: {\n          \"dark-two\": \"hsl(26, 54%, 15%)\",\n          \"dark-one\": \"hsl(23, 75%, 5%)\",\n          \"orange-one\": \"\thsl(33, 100%, 50%)\",\n          \"orange-two\": \"\thsl(19, 100%, 50%)\",\n        },\n        light: {\n          slate: {\n            1: \"hsl(206, 30.0%, 98.8%)\",\n            2: \"hsl(210, 16.7%, 97.6%)\",\n            3: \"hsl(209, 13.3%, 95.3%)\",\n            4: \"hsl(209, 12.2%, 93.2%)\",\n            5: \"hsl(208, 11.7%, 91.1%)\",\n            6: \"hsl(208, 11.3%, 88.9%)\",\n            7: \"hsl(207, 11.1%, 85.9%)\",\n            8: \"hsl(205, 10.7%, 78.0%)\",\n            9: \"hsl(206, 6.0%, 56.1%)\",\n            10: \"hsl(206, 5.8%, 52.3%)\",\n            11: \"hsl(206, 6.0%, 43.5%)\",\n            12: \"hsl(206, 24.0%, 9.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(210, 92.6%, 26.5%, 0.016)\",\n            2: \"hsla(210, 87.7%, 16.0%, 0.028)\",\n            3: \"hsla(210, 98.8%, 14.4%, 0.055)\",\n            4: \"hsla(210, 94.1%, 11.1%, 0.075)\",\n            5: \"hsla(216, 91.1%, 10.9%, 0.099)\",\n            6: \"hsla(206, 96.4%, 11.3%, 0.126)\",\n            7: \"hsla(210, 99.1%, 10.1%, 0.157)\",\n            8: \"hsla(205, 96.5%, 10.0%, 0.244)\",\n            9: \"hsla(206, 98.8%, 5.9%, 0.467)\",\n            10: \"hsla(206, 99.6%, 5.4%, 0.506)\",\n            11: \"hsla(206, 97.0%, 4.8%, 0.593)\",\n            12: \"hsla(202, 97.0%, 2.4%, 0.934)\",\n          },\n          orange: {\n            1: \"hsl(24, 70.0%, 99.0%)\",\n            2: \"hsl(24, 83.3%, 97.6%)\",\n            3: \"hsl(24, 100%, 95.3%)\",\n            4: \"hsl(25, 100%, 92.2%)\",\n            5: \"hsl(25, 100%, 88.2%)\",\n            6: \"hsl(25, 100%, 82.8%)\",\n            7: \"hsl(24, 100%, 75.3%)\",\n            8: \"hsl(24, 94.5%, 64.3%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 46.5%)\",\n            11: \"hsl(24, 100%, 37.0%)\",\n            12: \"hsl(15, 60.0%, 17.0%)\",\n          },\n          blue: {\n            1: \"hsl(206, 100%, 99.2%)\",\n            2: \"hsl(210, 100%, 98.0%)\",\n            3: \"hsl(209, 100%, 96.5%)\",\n            4: \"hsl(210, 98.8%, 94.0%)\",\n            5: \"hsl(209, 95.0%, 90.1%)\",\n            6: \"hsl(209, 81.2%, 84.5%)\",\n            7: \"hsl(208, 77.5%, 76.9%)\",\n            8: \"hsl(206, 81.9%, 65.3%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(208, 100%, 47.3%)\",\n            11: \"hsl(211, 100%, 43.2%)\",\n            12: \"hsl(211, 100%, 15.0%)\",\n          },\n          red: {\n            1: \"hsl(359, 100%, 99.4%)\",\n            2: \"hsl(359, 100%, 98.6%)\",\n            3: \"hsl(360, 100%, 96.8%)\",\n            4: \"hsl(360, 97.9%, 94.8%)\",\n            5: \"hsl(360, 90.2%, 91.9%)\",\n            6: \"hsl(360, 81.7%, 87.8%)\",\n            7: \"hsl(359, 74.2%, 81.7%)\",\n            8: \"hsl(359, 69.5%, 74.3%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 69.4%, 55.2%)\",\n            11: \"hsl(358, 65.0%, 48.7%)\",\n            12: \"hsl(354, 50.0%, 14.6%)\",\n          },\n          grass: {\n            1: \"hsl(116, 50.0%, 98.9%)\",\n            2: \"hsl(120, 60.0%, 97.1%)\",\n            3: \"hsl(120, 53.6%, 94.8%)\",\n            4: \"hsl(121, 47.5%, 91.4%)\",\n            5: \"hsl(122, 42.6%, 86.5%)\",\n            6: \"hsl(124, 39.0%, 79.7%)\",\n            7: \"hsl(126, 37.1%, 70.2%)\",\n            8: \"hsl(131, 38.1%, 56.3%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(132, 43.1%, 42.2%)\",\n            11: \"hsl(133, 50.0%, 32.5%)\",\n            12: \"hsl(130, 30.0%, 14.9%)\",\n          },\n        },\n        dark: {\n          slate: {\n            1: \"hsl(200, 7.0%, 8.8%)\",\n            2: \"hsl(195, 7.1%, 11.0%)\",\n            3: \"hsl(197, 6.8%, 13.6%)\",\n            4: \"hsl(198, 6.6%, 15.8%)\",\n            5: \"hsl(199, 6.4%, 17.9%)\",\n            6: \"hsl(201, 6.2%, 20.5%)\",\n            7: \"hsl(203, 6.0%, 24.3%)\",\n            8: \"hsl(207, 5.6%, 31.6%)\",\n            9: \"hsl(206, 6.0%, 43.9%)\",\n            10: \"hsl(206, 5.2%, 49.5%)\",\n            11: \"hsl(206, 6.0%, 63.0%)\",\n            12: \"hsl(210, 6.0%, 93.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(0, 0%, 0%, 0)\",\n            2: \"hsla(181, 98.9%, 91.8%, 0.026)\",\n            3: \"hsla(182, 86.7%, 91.4%, 0.057)\",\n            4: \"hsla(209, 86.7%, 93.9%, 0.083)\",\n            5: \"hsla(200, 90.3%, 93.4%, 0.109)\",\n            6: \"hsla(209, 95.3%, 93.5%, 0.139)\",\n            7: \"hsla(204, 98.5%, 93.9%, 0.182)\",\n            8: \"hsla(209, 94.0%, 94.7%, 0.265)\",\n            9: \"hsla(207, 97.3%, 94.0%, 0.412)\",\n            10: \"hsla(209, 99.4%, 95.2%, 0.472)\",\n            11: \"hsla(208, 98.7%, 96.8%, 0.615)\",\n            12: \"hsla(211, 86.7%, 99.6%, 0.927)\",\n          },\n          orange: {\n            1: \"hsl(30, 70.0%, 7.2%)\",\n            2: \"hsl(28, 100%, 8.4%)\",\n            3: \"hsl(26, 91.1%, 11.6%)\",\n            4: \"hsl(25, 88.3%, 14.1%)\",\n            5: \"hsl(24, 87.6%, 16.6%)\",\n            6: \"hsl(24, 88.6%, 19.8%)\",\n            7: \"hsl(24, 92.4%, 24.0%)\",\n            8: \"hsl(25, 100%, 29.0%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 58.5%)\",\n            11: \"hsl(24, 100%, 62.2%)\",\n            12: \"hsl(24, 97.0%, 93.2%)\",\n          },\n          blue: {\n            1: \"hsl(212, 35.0%, 9.2%)\",\n            2: \"hsl(216, 50.0%, 11.8%)\",\n            3: \"hsl(214, 59.4%, 15.3%)\",\n            4: \"hsl(214, 65.8%, 17.9%)\",\n            5: \"hsl(213, 71.2%, 20.2%)\",\n            6: \"hsl(212, 77.4%, 23.1%)\",\n            7: \"hsl(211, 85.1%, 27.4%)\",\n            8: \"hsl(211, 89.7%, 34.1%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(209, 100%, 60.6%)\",\n            11: \"hsl(210, 100%, 66.1%)\",\n            12: \"hsl(206, 98.0%, 95.8%)\",\n          },\n          red: {\n            1: \"hsl(353, 23.0%, 9.8%)\",\n            2: \"hsl(357, 34.4%, 12.0%)\",\n            3: \"hsl(356, 43.4%, 16.4%)\",\n            4: \"hsl(356, 47.6%, 19.2%)\",\n            5: \"hsl(356, 51.1%, 21.9%)\",\n            6: \"hsl(356, 55.2%, 25.9%)\",\n            7: \"hsl(357, 60.2%, 31.8%)\",\n            8: \"hsl(358, 65.0%, 40.4%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 85.3%, 64.0%)\",\n            11: \"hsl(358, 100%, 69.5%)\",\n            12: \"hsl(351, 89.0%, 96.0%)\",\n          },\n          grass: {\n            1: \"hsl(146, 30.0%, 7.4%)\",\n            2: \"hsl(136, 33.3%, 8.8%)\",\n            3: \"hsl(137, 36.0%, 11.4%)\",\n            4: \"hsl(137, 37.6%, 13.7%)\",\n            5: \"hsl(136, 38.7%, 16.0%)\",\n            6: \"hsl(135, 39.6%, 19.1%)\",\n            7: \"hsl(134, 40.3%, 23.8%)\",\n            8: \"hsl(131, 40.1%, 30.8%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(131, 39.0%, 52.1%)\",\n            11: \"hsl(131, 43.0%, 57.2%)\",\n            12: \"hsl(137, 72.0%, 94.0%)\",\n          },\n        },\n      },\n      boxShadow: {\n        login: \"0px 64px 100px -80px #FF5F13, 0px 16px 56px rgba(181, 107, 72, 0.19)\",\n        superlative: \"0px 22px 24px -8px rgba(0, 0, 0, 0.05), 0px 4px 8px rgba(0, 0, 0, 0.1)\",\n        paginate: \"0px 1px 2px rgba(237, 95, 0, 0.05), 0px 1px 1px rgba(237, 95, 0, 0.05)\",\n        input: \"0px 1px 2px rgba(17, 24, 28, 0.05), 0px 1px 1px rgba(17, 24, 28, 0.05)\",\n      },\n      backgroundImage: { \"gradient-radial\": \"radial-gradient(var(--tw-gradient-stops))\" },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & { size: number })[], totalCount = 0, joinLiteral = \"\") => {\n  const filteredLangs = langs\n    .filter(({ size }) => size > 0 && (size / totalCount) * 100 >= 0.5);\n\n  return filteredLangs\n    .map(({ color, size }) => {\n      const realPercent = size / totalCount * 100;\n\n      return ` 0 ? realPercent : 100 / filteredLangs.length}%\"/>`;\n    })\n    .join(joinLiteral);\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n\n      \n        ${name}\n      \n\n      \n    \n\n    ${cardFooter(langs, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 15;\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(`${name.substring(0, charLimit).replace(/\\.+$/, \"\")}${name.length > charLimit ? \"...\" : \"\"}`, `${String(avatarUrl)}&size=40`));\n\n  return `${repoList.slice(0, limit).join(\"\")}${repoList.length > limit\n    ? `+${repoList.length - limit}`\n    : ``}`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
