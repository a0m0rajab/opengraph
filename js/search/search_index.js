var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.842,1,2.122]],["body/modules/AppModule.html",[0,1.24,1,4.201,2,1.402,3,2.155,4,3.073,5,3.073,6,3.546,7,0.031,8,3.546,9,2.712,10,3.546,11,2.346,12,1.794,13,1.519,14,0.324,15,0.324,16,0.349,17,3.668,18,2.614,19,1.101,20,3.668,21,0.623,22,4.797,23,4.479,24,2.389,25,3.124,26,1.296,27,4.019,28,2.682,29,3.668,30,3.668,31,4.797,32,3.668,33,3.668,34,3.668,35,3.507,36,3.668,37,3.124,38,3.073,39,3.124,40,3.073,41,3.073,42,2.614,43,1.695,44,5.345,45,0.949,46,1.026,47,2.389,48,2.564,49,2.564,50,3.668,51,3.668,52,3.668,53,1.715,54,3.668,55,2.682,56,3.668,57,3.073,58,3.668,59,0.743,60,3.668,61,3.668,62,3.668,63,3.668,64,3.668,65,3.668,66,3.668,67,3.668,68,3.668,69,3.668,70,3.668,71,3.668,72,3.668,73,3.668,74,3.668,75,3.668,76,3.668,77,3.668,78,3.668,79,3.073,80,3.668,81,3.668,82,3.668,83,2.389,84,2.682,85,1.402,86,1.961,87,0.369,88,0.623,89,0.022,90,0.022]],["title/interfaces/DbInsight.html",[91,0.412,92,1.741]],["body/interfaces/DbInsight.html",[7,0.03,14,0.373,15,0.373,16,0.276,59,1.209,87,0.425,89,0.024,90,0.024,91,0.664,92,2.807,93,1.616,94,2.259,95,3.09,96,0.654,97,1.254,98,4.001,99,1.589,100,5.006,101,5.006,102,2.111,103,5.006,104,2.922,105,4.367,106,1.582,107,1.099,108,1.957,109,3.347,110,3.891,111,1.467,112,3.541,113,3.541,114,3.09]],["title/interfaces/DbReaction.html",[91,0.412,115,1.914]],["body/interfaces/DbReaction.html",[7,0.03,14,0.434,15,0.434,16,0.321,87,0.494,89,0.026,90,0.026,91,0.622,93,1.879,94,2.628,96,0.761,97,1.373,106,1.549,107,0.977,115,3.38,116,4.119,117,6.286,118,6.286]],["title/interfaces/DbRepo.html",[91,0.412,119,2.382]],["body/interfaces/DbRepo.html",[7,0.03,14,0.339,15,0.339,16,0.25,87,0.385,89,0.023,90,0.023,91,0.485,93,1.465,94,2.049,96,0.593,97,1.178,99,1.491,106,1.57,107,1.12,108,2.046,114,4.215,119,3.608,120,3.212,121,2.331,122,5.765,123,5.765,124,3.387,125,5.765,126,5.765,127,4.83,128,2.59,129,5.765,130,5.765,131,5.765,132,5.765,133,2.82,134,5.765,135,5.765]],["title/interfaces/DbUserHighlight.html",[91,0.412,136,1.914]],["body/interfaces/DbUserHighlight.html",[7,0.03,14,0.369,15,0.369,16,0.272,87,0.42,89,0.024,90,0.024,91,0.528,93,1.597,94,2.232,96,0.646,97,1.244,98,3.874,99,1.538,104,2.91,105,4.349,106,1.615,107,1.104,109,3.037,111,1.552,136,3.062,137,1.169,138,3.499,139,5.949,140,2.673,141,3.495,142,5.949,143,3.874,144,2.673,145,2.352]],["title/interfaces/DbUserInsightRepo.html",[91,0.412,110,2.122]],["body/interfaces/DbUserInsightRepo.html",[7,0.03,14,0.391,15,0.391,16,0.289,59,0.895,87,0.445,89,0.025,90,0.025,91,0.683,92,2.364,93,1.691,94,2.364,95,3.234,96,0.684,97,1.289,98,4.054,99,1.61,100,3.706,101,3.706,102,1.563,103,3.706,104,2.163,105,3.234,106,1.566,107,1.057,108,1.993,109,2.886,110,3.796,111,1.486,112,5.086,113,5.086,114,4.437,121,1.908]],["title/modules/GithubModule.html",[0,0.842,146,1.593]],["body/modules/GithubModule.html",[0,1.45,2,1.8,3,2.52,7,0.03,11,2.743,12,2.304,13,1.95,14,0.416,15,0.416,16,0.307,18,2.304,19,0.952,21,0.8,86,2.998,87,0.474,88,0.8,89,0.026,90,0.026,146,3.175,147,3.947,148,3.947,149,3.947,150,2.18,151,4.711,152,4.699,153,4.711]],["title/injectables/GithubService.html",[150,1.065,154,0.842]],["body/injectables/GithubService.html",[7,0.031,14,0.301,15,0.301,16,0.222,19,1.025,21,0.578,24,2.218,37,3.355,38,2.853,55,2.489,59,1.043,87,0.342,88,0.578,89,0.021,90,0.021,96,0.527,97,1.09,106,1.484,107,0.875,111,1.441,121,1.821,137,1.54,150,1.493,154,1.181,155,1.82,156,2.853,157,1.689,158,5.152,159,2.474,160,1.891,161,1.88,162,4.024,163,4.024,164,6.136,165,1.381,166,3.405,167,4.612,168,2.447,169,4.567,170,2.315,171,4.567,172,2.377,173,3.405,174,2.441,175,2.133,176,2.683,177,4.567,178,3.405,179,2.233,180,1.493,181,3.405,182,1.665,183,1.665,184,1.54,185,4.567,186,3.405,187,3.826,188,2.441,189,2.133,190,1.82,191,4.567,192,3.405,193,3.405,194,3.405,195,3.405,196,2.218,197,3.405,198,3.405,199,3.405,200,1.826,201,2.218,202,1.203,203,2.218,204,2.218,205,2.218,206,2.001,207,2.974,208,3.585,209,3.405,210,1.684,211,4.567,212,1.332,213,3.405,214,2.683,215,3.405,216,1.53,217,3.405,218,3.405,219,3.405]],["title/controllers/HealthController.html",[220,0.778,221,2.122]],["body/controllers/HealthController.html",[7,0.031,14,0.316,15,0.316,16,0.234,19,0.954,21,0.608,23,4.428,24,2.333,28,2.619,79,3.002,83,3.076,84,4.268,85,1.37,87,0.36,88,0.608,89,0.022,90,0.022,96,0.554,111,0.855,157,1.678,160,1.956,161,1.987,165,1.084,168,1.956,175,1.956,176,2.775,212,1.221,220,0.855,221,3.076,222,3.002,223,2.333,224,5.996,225,6.114,226,5.996,227,3.076,228,3.583,229,4.724,230,3.659,231,3.003,232,3.301,233,4.724,234,3.583,235,3.583,236,4.724,237,3.583,238,4.724,239,4.724,240,4.724,241,5.285,242,4.724,243,4.724,244,3.441,245,3.441,246,2.333,247,2.333,248,3.583,249,3.583,250,3.583,251,3.583,252,3.583,253,3.583,254,3.076,255,4.724,256,4.724,257,3.583,258,3.583,259,3.583,260,3.583,261,3.583,262,3.583,263,4.724,264,3.583,265,3.583,266,3.583,267,3.583,268,3.583,269,3.583,270,3.583,271,3.583,272,3.583,273,3.583,274,3.583,275,3.583,276,3.583,277,3.583,278,3.583,279,3.583]],["title/modules/HealthModule.html",[0,0.842,280,2.382]],["body/modules/HealthModule.html",[0,1.487,2,1.879,7,0.03,14,0.434,15,0.434,16,0.321,18,2.405,19,1.036,21,0.835,27,4.819,28,3.594,85,2.199,87,0.494,88,0.835,89,0.026,90,0.026,221,3.971,280,4.205,281,4.917,282,4.917]],["title/controllers/HighlightCardController.html",[220,0.778,283,2.122]],["body/controllers/HighlightCardController.html",[7,0.031,14,0.256,15,0.256,16,0.189,19,0.874,21,0.493,42,3.062,48,3.008,53,1.237,59,0.828,85,1.109,87,0.292,88,0.493,89,0.019,90,0.019,96,0.449,99,1.573,107,0.921,108,1.702,111,0.693,121,1.445,124,3.527,140,2.813,144,1.304,157,0.812,160,1.693,161,1.702,165,0.877,168,1.693,170,1.838,175,1.693,180,1.681,184,1.144,196,1.889,200,1.433,202,1.445,210,1.548,212,1.225,214,2.403,220,0.693,223,1.889,227,2.664,230,3.35,244,2.664,245,3.085,246,1.889,247,1.889,254,2.664,283,2.664,284,1.225,285,1.889,286,2.431,287,4.737,288,5.424,289,2.901,290,4.448,291,4.227,292,2.431,293,4.09,294,3.76,295,3.76,296,3.35,297,3.76,298,3.649,299,2.186,300,2.431,301,3.766,302,2.664,303,3.845,304,2.121,305,2.99,306,2.99,307,2.121,308,3.085,309,2.431,310,4.31,311,2.121,312,2.901,313,2.901,314,2.431,315,2.99,316,2.664,317,2.121,318,2.121,319,3.463,320,2.121,321,2.121,322,2.99,323,2.431,324,2.431,325,2.901,326,2.121,327,2.121,328,2.121,329,3.969,330,2.99,331,3.969,332,2.99,333,2.99,334,3.463,335,2.99,336,2.121,337,2.317,338,1.109,339,2.901,340,2.901,341,1.705,342,2.431,343,1.705,344,2.121,345,2.121,346,2.121,347,3.427,348,2.99,349,1.811,350,1.811,351,1.966,352,4.09,353,2.121,354,2.901,355,2.121,356,2.431,357,2.99,358,2.99,359,2.99,360,2.431,361,1.109,362,2.99,363,2.99,364,2.664,365,2.121,366,2.121,367,2.121,368,1.889,369,2.121,370,2.121]],["title/interfaces/HighlightCardData.html",[91,0.412,371,2.122]],["body/interfaces/HighlightCardData.html",[7,0.031,14,0.214,15,0.214,16,0.279,19,1.047,21,0.411,26,0.855,43,0.855,45,0.927,46,0.677,48,1.916,53,0.731,59,0.726,87,0.243,88,0.411,89,0.016,90,0.016,91,0.306,93,0.924,96,0.374,97,0.856,99,1.105,102,0.855,104,2.807,106,1.432,107,0.975,108,1.814,111,1.128,115,1.421,128,1.92,133,2.09,136,1.421,137,1.195,140,1.611,141,1.421,143,3.66,144,2.375,145,1.001,150,1.397,154,0.927,157,1.412,159,1.611,161,1.429,165,0.731,172,2.265,174,1.293,180,1.397,184,1.195,188,1.293,189,1.957,190,1.293,200,1.956,202,1.51,210,2.015,212,1.222,216,1.611,220,0.577,284,0.625,299,1.293,337,1.183,338,0.924,349,1.633,350,1.633,351,0.924,361,2.021,371,2.783,372,1.087,373,2.375,374,3.66,375,2.924,376,3.215,377,4.196,378,1.183,379,1.183,380,2.09,381,1.754,382,1.183,383,1.183,384,1.183,385,1.183,386,1.183,387,1.397,388,1.087,389,1.183,390,2.107,391,1.183,392,1.484,393,1.183,394,2.783,395,1.575,396,1.575,397,2.026,398,1.183,399,2.335,400,2.026,401,2.026,402,1.484,403,1.183,404,2.026,405,3.004,406,2.026,407,2.026,408,2.026,409,2.026,410,2.026,411,2.026,412,2.026,413,2.026,414,2.026,415,2.09,416,2.107,417,2.026,418,2.026,419,2.026,420,2.026,421,3.004,422,2.026,423,2.026,424,1.421,425,1.421,426,1.421,427,2.026,428,1.575,429,1.087,430,1.087,431,0.924,432,1.087,433,1.183,434,0.924,435,1.183,436,3.58,437,2.09,438,1.183,439,1.183,440,1.183,441,2.026,442,1.183,443,2.026,444,1.421,445,2.026,446,1.421,447,1.754,448,1.754,449,1.754,450,1.754,451,1.754,452,1.754,453,1.611,454,1.183,455,1.087,456,1.183,457,1.183,458,1.183,459,1.183,460,1.611,461,1.754,462,1.754,463,1.371,464,1.754,465,1.183,466,1.183,467,1.183,468,1.183,469,1.183,470,1.001,471,1.183,472,1.183,473,1.183,474,1.183,475,1.183,476,1.087,477,2.026,478,1.183,479,1.183,480,1.754,481,1.183,482,1.183,483,2.026,484,2.026,485,3.004,486,2.026,487,2.335,488,2.026,489,1.183,490,1.183,491,1.183,492,1.575,493,1.575,494,1.575,495,1.575,496,1.183,497,1.183,498,1.087,499,2.026,500,1.183]],["title/modules/HighlightCardModule.html",[0,0.842,6,1.914]],["body/modules/HighlightCardModule.html",[0,1.386,2,1.67,3,2.408,6,3.846,7,0.031,9,2.837,11,2.621,12,2.137,13,1.809,14,0.386,15,0.386,16,0.378,18,2.621,19,1.072,21,0.742,25,3.49,26,1.544,45,1.13,46,1.222,47,2.845,48,3.098,85,2.048,86,2.864,87,0.439,88,0.742,89,0.024,90,0.024,140,2.408,146,3.087,283,3.775,284,1.13,337,3.087,338,1.67,501,3.66,502,3.66,503,4.369,504,3.194,505,3.194,506,3.194]],["title/injectables/HighlightCardService.html",[154,0.842,337,1.593]],["body/injectables/HighlightCardService.html",[7,0.031,14,0.2,15,0.2,16,0.268,19,1.035,21,0.385,26,0.8,43,0.8,45,0.883,46,0.634,48,3.229,53,0.685,59,1.084,87,0.228,88,0.385,89,0.016,90,0.016,91,0.286,96,0.35,97,0.815,99,1.269,102,0.8,104,2.523,106,1.092,107,0.834,108,1.857,111,1.232,115,1.331,121,1.734,128,1.846,133,2.01,136,1.331,137,1.15,140,1.534,141,1.331,143,3.197,144,1.846,145,0.938,150,1.75,154,0.883,155,1.211,157,1.578,159,2.056,160,1.414,161,1.789,165,1.033,168,2.136,170,2.205,172,1.894,174,1.211,175,1.894,176,1.331,180,1.686,182,1.108,183,1.108,184,1.28,188,1.211,189,1.414,190,1.211,200,1.942,202,0.8,210,1.992,212,1.183,216,1.534,220,0.541,284,1.385,299,1.211,337,1.67,338,0.866,349,1.571,350,1.571,351,0.866,361,1.972,371,2.979,372,1.018,373,1.846,374,3.197,375,2.445,376,2.688,377,3.771,378,1.108,379,1.108,380,2.523,381,1.67,382,1.108,383,1.108,384,1.108,385,1.108,386,1.108,387,1.75,388,1.018,389,1.108,390,2.006,391,1.108,392,1.414,393,1.108,394,2.676,395,1.475,396,1.475,397,1.898,398,1.108,399,2.224,400,1.898,401,1.898,402,1.414,403,1.67,404,3.443,405,3.833,406,1.898,407,1.898,408,1.898,409,1.898,410,1.898,411,1.898,412,1.898,413,1.898,414,1.898,415,2.01,416,2.006,417,1.898,418,1.898,419,1.898,420,1.898,421,2.861,422,1.898,423,1.898,424,1.331,425,1.331,426,1.331,427,1.898,428,1.475,429,1.018,430,1.018,431,0.866,432,1.018,433,1.108,434,0.866,435,2.01,436,4.112,437,2.01,438,1.108,439,1.108,440,1.108,441,1.898,442,1.108,443,1.898,444,1.331,445,1.898,446,1.331,447,1.67,448,1.67,449,1.67,450,1.67,451,1.67,452,1.67,453,1.534,454,1.108,455,1.018,456,1.108,457,1.108,458,1.108,459,1.108,460,1.534,461,1.67,462,1.67,463,1.305,464,1.67,465,1.108,466,1.108,467,1.108,468,1.108,469,1.108,470,0.938,471,1.108,472,1.108,473,1.108,474,1.108,475,2.01,476,1.018,477,1.898,478,1.108,479,1.108,480,1.67,481,1.108,482,1.108,483,1.898,484,1.898,485,2.861,486,1.898,487,2.224,488,1.898,489,1.108,490,1.108,491,1.108,492,1.475,493,1.475,494,1.475,495,1.475,496,1.108,497,1.108,498,1.018,499,3.443,500,1.108,507,1.656,508,2.861,509,1.898,510,2.265,511,2.265,512,2.265,513,1.475,514,2.265,515,2.265,516,2.265,517,2.265]],["title/controllers/InsightCardController.html",[220,0.778,518,2.122]],["body/controllers/InsightCardController.html",[7,0.031,14,0.257,15,0.257,16,0.19,19,0.875,21,0.494,42,3.063,49,3.01,53,1.239,59,0.829,85,1.112,87,0.292,88,0.494,89,0.019,90,0.019,96,0.45,99,1.574,107,0.922,108,1.703,111,0.694,121,1.448,124,3.529,144,1.307,157,0.814,160,1.696,161,1.703,165,0.88,168,1.696,170,1.841,175,1.696,180,1.683,184,1.146,196,1.894,200,1.435,202,1.448,210,1.55,212,1.227,214,2.407,220,0.694,223,1.894,227,2.668,230,3.353,244,2.668,245,3.089,246,1.894,247,1.894,254,2.668,284,1.227,285,1.894,290,4.45,291,4.23,292,2.437,294,3.764,295,3.764,296,3.353,297,3.764,298,3.651,299,2.19,300,2.437,301,3.768,302,2.668,303,3.848,304,2.126,305,2.995,306,2.995,307,2.126,308,3.089,309,2.437,310,4.314,311,2.126,314,2.437,315,2.995,316,2.668,317,2.126,318,2.126,319,3.467,320,2.126,321,2.126,322,2.995,323,2.437,324,2.437,326,2.126,327,2.126,328,2.126,329,3.974,330,2.995,331,3.974,332,2.995,333,2.995,334,3.467,335,2.995,336,2.126,338,1.112,341,1.709,342,2.437,343,1.709,344,2.126,345,2.126,346,2.126,347,3.433,348,2.995,349,1.813,350,1.813,351,1.968,353,2.126,355,2.126,356,2.437,357,2.995,358,2.995,359,2.995,360,2.437,361,1.112,362,2.995,363,2.995,364,2.668,365,2.126,366,2.126,367,2.126,368,1.894,369,2.126,370,2.126,518,2.668,519,2.437,520,4.743,521,5.428,522,2.908,523,4.097,524,5.248,525,2.908,526,2.908,527,2.908,528,2.32,529,2.908,530,2.908,531,4.097,532,2.908]],["title/interfaces/InsightCardData.html",[91,0.412,533,2.122]],["body/interfaces/InsightCardData.html",[7,0.031,14,0.234,15,0.234,16,0.294,19,1.047,21,0.451,26,0.938,43,0.938,45,0.993,46,0.743,49,2.052,53,0.803,59,1,87,0.267,88,0.451,89,0.018,90,0.018,91,0.336,92,1.419,93,1.015,96,0.411,97,0.917,99,1.166,102,2.077,104,2.875,106,1.377,107,0.928,108,1.494,111,1.18,137,0.743,140,1.193,145,1.099,150,1.474,154,0.993,157,1.466,159,1.725,161,1.494,165,0.803,174,1.419,180,1.474,184,1.382,200,1.969,202,1.593,207,1.729,210,1.997,212,1.278,216,1.725,220,0.634,284,0.687,338,1.015,349,1.724,350,1.724,351,1.015,361,2.088,372,1.193,373,1.725,378,1.298,379,1.298,380,2.205,381,1.878,382,1.298,383,1.298,384,1.298,385,1.298,386,1.298,387,1.474,388,1.193,392,1.589,393,1.298,394,2.937,395,1.729,398,1.298,399,1.729,402,1.589,403,1.298,416,2.649,428,1.729,429,1.193,430,1.193,431,1.015,432,1.193,433,1.298,434,1.015,435,1.298,437,1.878,438,1.298,439,1.298,440,1.298,442,1.298,446,1.56,447,1.878,448,1.878,449,1.878,450,1.878,451,1.878,452,1.878,453,1.725,454,1.298,455,1.193,456,1.298,457,1.298,458,1.298,459,1.298,460,1.725,461,1.878,462,1.878,463,1.467,464,1.878,465,1.298,466,1.298,467,1.298,468,1.298,469,1.298,470,1.099,471,1.298,472,1.298,473,1.298,474,1.298,475,1.298,476,1.193,478,1.298,479,1.298,480,1.878,481,1.298,482,1.298,487,1.729,489,1.298,490,1.298,491,1.298,492,1.729,493,1.729,494,1.729,495,1.729,496,1.298,497,1.298,498,1.193,500,1.298,528,1.298,533,2.937,534,4.217,535,3.994,536,3.839,537,2.224,538,1.729,539,2.224,540,1.729,541,3.217,542,1.729,543,2.224,544,3.217,545,3.217,546,1.729,547,2.224,548,2.224,549,2.224,550,2.224,551,2.224,552,2.224,553,2.224,554,2.224,555,2.224,556,1.941,557,2.224,558,2.224,559,2.224,560,2.224,561,2.224,562,2.224,563,2.224,564,2.224,565,2.806,566,2.224,567,2.224,568,2.224,569,3.778,570,2.224,571,2.224,572,2.224,573,2.224,574,2.224,575,2.224,576,2.224]],["title/modules/InsightCardModule.html",[0,0.842,8,1.914]],["body/modules/InsightCardModule.html",[0,1.387,2,1.673,3,2.411,7,0.031,8,3.847,9,2.838,11,2.624,12,2.14,13,1.812,14,0.387,15,0.387,16,0.378,18,2.624,19,1.073,21,0.743,25,3.494,26,1.546,45,1.132,46,1.224,47,2.85,49,2.867,85,2.051,86,2.867,87,0.44,88,0.743,89,0.025,90,0.025,146,3.089,284,1.132,338,1.673,504,3.199,505,3.199,506,3.199,518,3.778,524,4.495,528,3.089,577,3.667,578,4.377,579,3.667]],["title/injectables/InsightCardService.html",[154,0.842,528,1.593]],["body/injectables/InsightCardService.html",[7,0.031,14,0.211,15,0.211,16,0.277,19,1.027,21,0.406,26,0.845,43,0.845,45,0.92,46,0.669,49,3.262,53,0.724,59,1.159,87,0.241,88,0.406,89,0.016,90,0.016,91,0.303,92,1.279,96,0.37,97,0.849,99,1.299,102,1.861,104,2.575,106,1.122,107,0.853,108,1.81,111,1.257,121,1.775,137,0.669,140,1.075,145,0.991,150,1.782,154,0.92,155,1.279,157,1.601,159,2.112,160,1.473,161,1.81,165,1.076,168,2.18,170,2.257,174,1.279,175,1.946,176,1.406,180,1.721,182,1.17,183,1.17,184,1.406,200,1.948,202,0.845,207,1.558,210,1.956,212,1.216,216,1.598,220,0.571,284,1.41,338,0.915,349,1.623,350,1.623,351,0.915,361,2.013,372,1.075,373,1.598,378,1.17,379,1.17,380,2.575,381,1.74,382,1.17,383,1.17,384,1.17,385,1.17,386,1.17,387,1.782,388,1.075,392,1.473,393,1.17,394,2.765,395,1.558,398,1.17,399,1.558,402,1.473,403,1.74,416,2.495,428,1.558,429,1.075,430,1.075,431,0.915,432,1.075,433,1.17,434,0.915,435,2.076,437,1.74,438,1.17,439,1.17,440,1.17,442,1.17,446,1.406,447,1.74,448,1.74,449,1.74,450,1.74,451,1.74,452,1.74,453,1.598,454,1.17,455,1.075,456,1.17,457,1.17,458,1.17,459,1.17,460,1.598,461,1.74,462,1.74,463,1.36,464,1.74,465,1.17,466,1.17,467,1.17,468,1.17,469,1.17,470,0.991,471,1.17,472,1.17,473,1.17,474,1.17,475,2.076,476,1.075,478,1.17,479,1.17,480,1.74,481,1.17,482,1.17,487,1.558,489,1.17,490,1.17,491,1.17,492,1.558,493,1.558,494,1.558,495,1.558,496,1.17,497,1.17,498,1.075,500,1.17,507,1.749,508,2.005,509,2.005,513,1.558,528,1.74,533,3.061,534,3.673,535,3.104,537,2.005,538,1.558,539,2.005,540,1.558,541,2.98,542,1.558,543,3.557,544,3.939,545,2.98,546,1.558,547,2.005,548,2.005,549,2.005,550,2.005,551,2.005,552,2.005,553,2.005,554,2.005,555,2.005,556,1.749,557,2.005,558,2.005,559,2.005,560,2.005,561,2.005,562,2.005,563,2.005,564,2.005,565,2.6,566,2.005,567,2.005,568,2.005,569,4.21,570,2.005,571,2.005,572,2.005,573,2.005,574,2.005,575,2.005,576,3.557,580,3.557,581,2.393,582,2.393,583,2.393,584,2.393,585,2.393,586,2.393]],["title/interfaces/RequiresUpdateMeta.html",[91,0.412,402,1.349]],["body/interfaces/RequiresUpdateMeta.html",[7,0.031,14,0.227,15,0.227,16,0.289,19,1.02,21,0.437,26,0.91,43,1.327,45,0.971,46,0.72,53,0.779,59,0.986,87,0.445,88,0.437,89,0.017,90,0.017,91,0.475,93,0.984,96,0.398,97,0.896,99,0.971,102,1.721,106,1.393,107,0.827,108,1.136,109,2.889,111,1.163,128,1.687,133,1.836,137,1.24,145,2.016,150,1.448,154,0.971,157,1.449,159,1.687,161,1.473,165,0.779,172,1.554,179,2.644,180,1.448,184,1.512,188,1.376,189,2.016,190,1.376,200,1.94,201,1.677,202,1.721,203,2.445,204,2.445,205,1.677,206,1.513,210,1.937,212,1.146,216,1.687,220,0.615,284,0.666,349,2.133,350,2.133,351,1.979,361,2.266,372,1.157,373,1.991,375,2.768,376,3.176,378,1.259,379,1.259,380,2.167,381,1.836,382,1.259,383,1.259,384,1.259,385,1.259,386,1.259,387,1.448,388,1.157,389,1.259,390,2.206,391,1.259,392,1.554,393,1.259,398,1.259,402,1.835,403,1.259,415,1.259,424,1.513,425,2.603,426,1.513,429,1.157,430,1.157,431,0.984,432,1.157,433,1.259,434,0.984,435,1.259,437,2.167,438,1.259,439,1.259,440,1.259,442,1.259,444,1.513,447,1.836,448,1.836,449,1.836,450,1.836,451,1.836,452,1.836,453,1.687,454,1.259,455,1.157,456,1.259,457,1.259,458,1.259,459,1.259,460,1.687,461,1.836,462,1.836,463,1.435,464,1.836,465,1.259,466,1.259,467,1.259,468,1.259,469,1.259,470,1.066,471,1.259,472,1.259,473,1.259,474,1.259,475,1.259,476,1.157,478,1.259,479,1.259,480,1.836,481,1.259,482,1.259,489,1.259,490,1.259,491,1.259,496,1.259,497,1.259,498,1.157,500,1.259,587,1.513,588,1.882,589,1.259,590,2.206,591,1.882,592,1.882,593,3.56,594,1.157,595,1.882,596,1.677,597,1.882,598,1.882,599,1.882,600,1.882,601,1.882,602,1.882,603,1.882,604,1.882,605,1.882,606,1.882,607,1.882,608,1.882,609,1.882,610,1.882,611,1.882,612,1.882,613,1.882,614,1.882,615,1.882,616,1.882,617,3.239,618,1.882,619,1.882,620,1.882,621,2.603,622,1.882,623,2.745,624,1.882,625,1.882,626,1.677,627,1.677,628,1.882,629,1.882]],["title/modules/S3FileStorageModule.html",[0,0.842,9,1.464]],["body/modules/S3FileStorageModule.html",[0,1.44,2,1.78,3,2.503,7,0.03,9,2.911,11,2.724,12,2.278,13,1.928,14,0.411,15,0.411,16,0.403,18,2.278,19,0.946,21,0.791,45,1.204,46,1.303,86,2.977,87,0.468,88,0.791,89,0.025,90,0.025,152,4.667,387,2.177,388,2.093,630,3.902,631,3.902,632,3.902,633,3.404,634,4.657]],["title/injectables/S3FileStorageService.html",[154,0.842,387,1.065]],["body/injectables/S3FileStorageService.html",[7,0.031,14,0.239,15,0.239,16,0.418,19,0.897,21,0.459,24,1.761,39,1.761,40,2.266,41,2.266,45,1.178,46,1.652,53,0.818,55,1.977,57,3.26,59,1.069,87,0.272,88,0.459,89,0.018,90,0.018,96,0.418,97,0.929,106,1.515,107,0.934,111,1.19,121,1.866,145,2.186,154,1.006,155,1.445,157,1.394,160,1.611,161,1.854,165,1.177,167,4.175,168,2.4,170,2.372,175,2.063,180,1.895,182,1.903,183,1.903,184,1.477,200,1.177,210,1.629,212,1.422,299,2.822,374,1.761,387,1.272,429,2.545,476,2.78,498,1.748,513,1.761,596,2.967,633,4.316,635,2.266,636,4.557,637,4.557,638,5.498,639,4.557,640,4.557,641,4.557,642,4.557,643,2.704,644,2.704,645,2.704,646,2.704,647,2.704,648,2.704,649,2.704,650,2.704,651,2.704,652,4.557,653,4.983,654,5.28,655,2.704,656,4.557,657,2.704,658,2.704,659,2.704,660,4.983,661,3.891,662,2.266,663,2.704,664,2.704,665,2.704,666,2.704,667,2.704,668,2.704,669,2.704,670,2.704,671,2.704,672,2.704,673,2.704,674,1.977,675,2.704,676,2.266,677,2.704,678,2.266,679,2.704,680,2.266,681,2.704,682,2.266,683,2.704,684,4.557,685,4.983,686,4.175,687,4.983,688,4.983,689,4.557,690,6.131,691,4.557,692,4.557,693,4.557,694,4.557,695,3.891,696,2.704,697,2.704,698,2.704,699,2.704]],["title/controllers/UserCardController.html",[220,0.778,700,2.122]],["body/controllers/UserCardController.html",[7,0.031,14,0.262,15,0.262,16,0.193,19,0.882,21,0.503,42,3.073,43,2.002,53,1.256,59,0.84,85,1.133,87,0.298,88,0.503,89,0.019,90,0.019,96,0.459,106,1.353,107,0.928,111,0.708,121,1.467,124,3.418,137,1.688,144,1.332,157,0.829,160,1.719,161,1.714,165,0.896,168,1.719,170,1.866,175,1.719,179,2.845,180,1.697,184,1.162,196,1.93,200,1.653,202,1.467,210,1.567,212,1.239,214,2.439,220,0.708,223,1.93,227,2.704,230,3.382,244,2.704,245,3.121,246,1.93,247,1.93,254,2.704,284,1.239,285,1.93,290,4.468,291,4.253,294,3.796,295,3.796,296,3.382,297,3.796,298,3.663,299,2.219,301,3.789,302,2.704,303,3.69,304,2.167,305,3.035,306,3.035,307,2.167,308,3.121,311,2.167,315,3.035,316,2.704,317,2.167,318,2.167,319,3.503,320,2.167,321,2.167,322,3.035,326,2.167,327,2.167,328,2.167,330,3.035,332,3.035,333,3.035,334,3.503,335,3.035,336,2.167,338,1.133,341,1.741,343,1.741,344,2.167,345,2.167,346,2.167,348,3.035,349,1.832,350,1.832,351,1.985,353,2.167,355,2.167,357,3.035,358,3.035,359,3.035,361,1.133,362,3.035,363,3.035,364,2.704,365,2.167,366,2.167,367,2.167,368,1.93,369,2.167,370,2.167,594,2.153,700,2.704,701,2.483,702,4.792,703,5.467,704,2.964,705,2.964,706,4.152,707,2.964,708,2.964,709,2.964,710,2.964,711,2.964,712,2.964,713,2.964,714,2.964,715,2.964,716,4.152,717,4.152,718,4.152,719,4.152,720,2.964,721,2.964]],["title/interfaces/UserCardData.html",[91,0.412,590,1.914]],["body/interfaces/UserCardData.html",[7,0.031,14,0.225,15,0.225,16,0.287,19,1.018,21,0.433,26,0.901,43,1.318,45,0.964,46,0.714,53,0.771,59,1.126,87,0.443,88,0.433,89,0.017,90,0.017,91,0.472,93,0.975,96,0.395,97,0.89,99,1.334,102,1.966,106,1.431,107,0.876,108,1.466,109,1.993,111,1.158,128,1.675,133,1.824,137,1.233,145,1.544,150,1.441,154,0.964,157,1.443,159,1.675,161,1.466,165,0.771,172,1.544,179,2.635,180,1.441,184,1.507,188,1.363,189,2.231,190,1.363,200,1.937,201,1.661,202,1.318,203,2.428,204,2.428,205,1.661,206,1.499,210,1.933,212,1.14,216,1.675,220,0.609,284,0.66,349,1.853,350,1.853,351,1.425,361,2.127,372,1.146,373,2.421,375,3.049,376,3.419,378,1.247,379,1.247,380,2.156,381,1.824,382,1.247,383,1.247,384,1.247,385,1.247,386,1.247,387,1.441,388,1.146,389,1.247,390,2.191,391,1.247,392,1.544,393,1.247,398,1.247,402,1.544,403,1.247,415,1.247,424,1.499,425,2.59,426,1.499,429,1.146,430,1.146,431,0.975,432,1.146,433,1.247,434,0.975,435,1.247,437,2.156,438,1.247,439,1.247,440,1.247,442,1.247,444,1.499,447,1.824,448,1.824,449,1.824,450,1.824,451,1.824,452,1.824,453,1.675,454,1.247,455,1.146,456,1.247,457,1.247,458,1.247,459,1.247,460,1.675,461,1.824,462,1.824,463,1.425,464,1.824,465,1.247,466,1.247,467,1.247,468,1.247,469,1.247,470,1.056,471,1.247,472,1.247,473,1.247,474,1.247,475,1.247,476,1.146,478,1.247,479,1.247,480,1.824,481,1.247,482,1.247,489,1.247,490,1.247,491,1.247,496,1.247,497,1.247,498,1.146,500,1.247,587,1.499,588,1.865,589,1.247,590,2.59,591,1.865,592,1.865,593,4.068,594,1.146,595,1.865,596,1.661,597,1.865,598,1.865,599,1.865,600,1.865,601,1.865,602,1.865,603,1.865,604,1.865,605,1.865,606,1.865,607,1.865,608,1.865,609,1.865,610,1.865,611,1.865,612,1.865,613,1.865,614,1.865,615,1.865,616,1.865,617,3.222,618,1.865,619,1.865,620,1.865,621,2.59,622,1.865,623,2.726,624,1.865,625,1.865,626,1.661,627,1.661,628,1.865,629,1.865]],["title/modules/UserCardModule.html",[0,0.842,10,1.914]],["body/modules/UserCardModule.html",[0,1.387,2,1.673,3,2.411,7,0.031,9,2.838,10,3.847,11,2.624,12,2.14,13,1.812,14,0.387,15,0.387,16,0.378,18,2.624,19,1.073,21,0.743,25,3.494,26,1.546,43,1.896,45,1.132,46,1.224,47,2.85,85,2.051,86,2.867,87,0.44,88,0.743,89,0.025,90,0.025,137,1.501,146,3.089,284,1.132,338,1.673,504,3.199,505,3.199,506,3.199,594,2.838,700,3.778,722,3.667,723,4.377,724,3.667]],["title/injectables/UserCardService.html",[154,0.842,594,1.464]],["body/injectables/UserCardService.html",[7,0.031,14,0.206,15,0.206,16,0.273,19,0.998,21,0.396,26,0.824,43,2.146,45,0.902,46,0.652,53,0.705,59,1.151,87,0.42,88,0.396,89,0.016,90,0.016,91,0.441,96,0.361,97,0.833,99,0.902,102,1.64,106,1.462,107,0.844,108,1.055,109,1.865,111,1.245,121,1.756,128,1.568,133,1.706,137,1.17,145,1.445,150,1.767,154,0.902,155,1.246,157,1.59,159,2.085,160,1.445,161,1.8,165,1.055,168,2.159,170,2.233,172,1.445,175,1.922,176,1.37,179,2.831,180,1.705,182,1.14,183,1.14,184,1.513,188,1.246,189,1.922,190,1.246,200,1.916,201,1.518,202,1.233,203,2.272,204,2.272,205,1.518,206,1.37,210,1.892,212,1.081,216,1.568,220,0.557,284,1.398,349,1.774,350,1.774,351,1.334,361,2.067,372,1.048,373,1.879,375,2.656,376,3.064,378,1.14,379,1.14,380,2.551,381,1.706,382,1.14,383,1.14,384,1.14,385,1.14,386,1.14,387,1.767,388,1.048,389,1.14,390,2.05,391,1.14,392,1.445,393,1.14,398,1.14,402,1.445,403,1.706,415,1.14,424,1.37,425,2.457,426,1.37,429,1.048,430,1.048,431,0.891,432,1.048,433,1.14,434,0.891,435,2.045,437,2.045,438,1.14,439,1.14,440,1.14,442,1.14,444,1.37,447,1.706,448,1.706,449,1.706,450,1.706,451,1.706,452,1.706,453,1.568,454,1.14,455,1.048,456,1.14,457,1.14,458,1.14,459,1.14,460,1.568,461,1.706,462,1.706,463,1.334,464,1.706,465,1.14,466,1.14,467,1.14,468,1.14,469,1.14,470,0.965,471,1.14,472,1.14,473,1.14,474,1.14,475,2.045,476,1.048,478,1.14,479,1.14,480,1.706,481,1.14,482,1.14,489,1.14,490,1.14,491,1.14,496,1.14,497,1.14,498,1.048,500,1.14,507,1.705,513,1.518,587,1.37,588,1.705,589,1.14,590,2.727,591,1.705,592,1.705,593,3.393,594,1.568,595,3.057,596,1.518,597,1.705,598,1.705,599,1.705,600,1.705,601,1.705,602,1.705,603,1.705,604,1.705,605,1.705,606,1.705,607,1.705,608,1.705,609,1.705,610,1.705,611,1.705,612,1.705,613,1.705,614,1.705,615,1.705,616,1.705,617,3.633,618,1.705,619,1.705,620,1.705,621,2.457,622,1.705,623,2.551,624,1.705,625,1.705,626,1.518,627,1.518,628,1.705,629,3.057,725,3.489,726,2.332,727,2.332,728,2.332,729,2.332,730,2.332,731,2.332,732,2.332,733,2.332]],["title/changelog.html",[734,1.776,735,1.994,736,2.285]],["body/changelog.html",[0,0.719,3,1.561,7,0.03,16,0.227,42,1.36,45,1.197,59,0.937,83,1.133,89,0.013,90,0.013,99,0.719,102,0.982,107,0.295,127,3.877,128,1.783,137,1.295,140,1.249,141,1.022,144,1.249,172,1.916,179,2.468,183,0.851,184,0.487,187,2.91,206,1.022,212,0.898,231,0.93,286,2.33,296,1.811,298,2.549,301,2.584,302,1.811,308,1.133,341,2.549,364,1.133,431,1.659,434,1.063,460,0.781,463,0.665,546,2.262,565,1.271,589,1.36,621,1.634,626,1.811,627,1.811,674,2.033,686,2.33,734,1.811,736,1.457,737,1.739,738,1.739,739,3.474,740,1.457,741,1.739,742,1.457,743,3.877,744,5.35,745,2.78,746,6.067,747,6.067,748,4.339,749,1.739,750,1.739,751,1.739,752,1.739,753,2.78,754,5.204,755,2.33,756,6.399,757,2.78,758,2.78,759,4.228,760,2.78,761,4.07,762,3.474,763,2.78,764,2.33,765,2.78,766,4.858,767,4.628,768,2.78,769,2.78,770,3.325,771,2.78,772,2.78,773,5.712,774,2.78,775,2.78,776,4.628,777,2.33,778,2.78,779,2.78,780,3.969,781,2.78,782,2.78,783,2.78,784,4.07,785,2.78,786,2.78,787,2.78,788,2.78,789,2.78,790,3.969,791,2.78,792,2.78,793,2.78,794,2.78,795,2.78,796,2.78,797,2.78,798,2.78,799,6.385,800,3.474,801,1.739,802,3.969,803,1.739,804,3.474,805,3.474,806,4.858,807,2.78,808,2.78,809,5.337,810,2.33,811,2.78,812,2.78,813,3.172,814,2.78,815,3.969,816,3.636,817,2.78,818,2.33,819,2.78,820,2.78,821,2.78,822,3.969,823,3.969,824,3.325,825,3.325,826,2.33,827,2.78,828,2.91,829,2.78,830,2.33,831,4.649,832,3.969,833,2.78,834,2.78,835,2.78,836,2.901,837,4.858,838,2.33,839,2.78,840,2.78,841,2.901,842,2.78,843,2.91,844,3.969,845,2.33,846,2.78,847,3.877,848,3.877,849,3.325,850,2.78,851,2.33,852,2.33,853,2.91,854,2.78,855,2.78,856,4.339,857,3.474,858,2.78,859,2.78,860,2.78,861,2.78,862,2.78,863,2.78,864,2.78,865,2.33,866,2.78,867,2.78,868,3.969,869,2.78,870,2.78,871,2.78,872,2.033,873,2.33,874,2.78,875,2.78,876,2.78,877,2.78,878,2.78,879,2.33,880,2.78,881,2.78,882,3.969,883,3.325,884,2.78,885,2.78,886,2.33,887,2.78,888,2.78,889,2.33,890,2.78,891,2.78,892,2.78,893,3.969,894,2.78,895,2.78,896,2.78,897,2.78,898,2.78,899,2.78,900,2.033,901,2.78,902,2.78,903,2.78,904,2.33,905,3.474,906,3.474,907,2.78,908,2.78,909,2.78,910,2.33,911,2.78,912,5.337,913,1.739,914,1.739,915,1.739,916,1.739,917,1.739,918,1.739,919,1.739,920,2.78,921,2.78,922,1.739,923,1.739,924,1.739,925,1.457,926,1.739,927,1.739,928,1.739,929,2.78,930,1.739,931,1.739,932,1.457,933,2.91,934,1.739,935,1.739,936,1.739,937,1.739,938,1.739,939,1.739,940,1.739,941,1.457,942,1.739,943,1.739,944,1.739,945,1.739,946,3.474,947,1.739,948,1.739,949,1.739,950,1.739,951,1.739,952,1.739,953,2.78,954,1.739,955,1.739,956,1.739,957,1.739,958,1.739,959,1.739,960,1.739,961,1.739,962,1.739,963,1.739,964,2.78,965,1.739,966,1.739,967,1.271,968,1.739,969,1.739,970,1.739,971,1.739,972,1.739,973,2.78,974,1.739,975,1.739,976,1.739,977,1.739,978,1.739,979,1.739,980,1.739,981,1.739,982,1.739,983,1.457,984,1.739,985,1.739,986,1.739,987,1.457,988,1.457,989,1.739,990,1.739,991,1.739,992,2.91,993,1.739,994,1.739,995,1.739,996,1.739,997,1.739,998,1.739,999,2.78,1000,1.739,1001,2.91,1002,1.739,1003,1.271,1004,1.739,1005,1.739,1006,1.739,1007,1.457,1008,1.739,1009,1.739,1010,2.33,1011,1.457,1012,1.739,1013,1.739,1014,1.457,1015,1.739,1016,1.739,1017,1.739,1018,1.739,1019,1.457,1020,1.739,1021,1.739,1022,1.739,1023,1.739,1024,1.457,1025,1.739,1026,1.739]],["title/coverage.html",[1027,3.713]],["body/coverage.html",[7,0.031,16,0.326,35,2.341,37,2.085,39,2.085,43,2.138,46,0.896,48,3.102,49,3.102,89,0.02,90,0.02,91,0.776,92,1.712,94,3.004,95,3.202,107,0.544,110,2.085,115,1.881,116,2.683,119,2.341,120,2.683,136,1.881,137,0.896,138,2.683,150,1.047,154,1.454,156,2.683,162,2.341,163,2.341,184,0.896,220,1.281,221,2.085,222,2.683,283,2.085,284,1.706,285,3.251,337,1.566,371,2.085,372,2.67,387,1.047,389,1.566,391,1.566,392,1.326,396,2.085,402,1.326,415,3.286,463,1.224,518,2.085,528,1.566,533,2.085,538,2.085,540,2.085,542,2.085,587,1.881,589,1.566,590,1.881,594,1.439,633,2.341,635,2.683,700,2.085,836,2.341,900,2.341,1027,2.683,1028,3.202,1029,3.202,1030,2.683,1031,5.453,1032,6.53,1033,2.683,1034,2.683,1035,2.683,1036,4.38,1037,3.202,1038,5.621,1039,3.202,1040,3.202,1041,5.368,1042,3.67,1043,2.683,1044,2.683,1045,2.683,1046,3.202,1047,2.683,1048,3.202,1049,4.38,1050,2.683,1051,4.183,1052,2.683,1053,4.183,1054,4.183,1055,2.683,1056,2.683,1057,2.683,1058,2.683,1059,4.183,1060,2.683,1061,2.683,1062,3.67,1063,2.683,1064,2.683,1065,2.683,1066,3.67,1067,2.683,1068,2.683,1069,2.683,1070,3.202,1071,3.202,1072,3.202]],["title/miscellaneous/functions.html",[967,2.862,1073,1.776]],["body/miscellaneous/functions.html",[7,0.027,89,0.027,90,0.027,96,0.8,967,3.782,1045,4.335,1047,5.216,1073,3.37,1074,5.174]],["title/index.html",[96,0.422,734,1.776,735,1.994]],["body/index.html",[7,0.029,13,1.279,15,0.273,16,0.202,42,2.09,45,0.799,53,0.935,59,0.625,83,2.012,84,3.865,89,0.02,90,0.02,91,0.391,121,1.092,137,1.196,157,0.864,172,1.279,182,2.09,189,1.77,208,3.615,231,3.068,232,3.106,316,2.012,341,3.106,343,1.815,430,1.388,431,2.122,432,2.202,434,1.634,556,2.259,589,1.511,662,2.589,701,2.589,740,3.581,759,4.105,761,4.105,770,2.589,777,3.581,813,2.259,818,2.589,824,2.589,825,4.43,826,2.589,828,3.581,830,2.589,831,3.581,838,2.589,841,4.197,843,2.589,845,2.589,847,2.589,848,2.589,849,2.589,851,2.589,852,4.105,853,2.589,865,3.581,873,2.589,883,2.589,889,3.581,904,2.589,910,4.43,925,2.589,941,2.589,983,2.589,1007,4.105,1010,4.105,1011,2.589,1019,4.105,1024,3.581,1031,2.589,1075,3.124,1076,2.589,1077,3.09,1078,4.43,1079,3.09,1080,3.09,1081,4.274,1082,3.09,1083,4.274,1084,3.09,1085,3.09,1086,3.09,1087,4.9,1088,6.28,1089,4.274,1090,4.65,1091,2.589,1092,3.09,1093,3.09,1094,3.09,1095,3.09,1096,3.09,1097,3.09,1098,3.09,1099,5.998,1100,3.09,1101,3.09,1102,2.589,1103,2.589,1104,2.589,1105,3.09,1106,4.105,1107,3.09,1108,4.274,1109,2.589,1110,3.09,1111,3.09,1112,3.09,1113,3.09,1114,3.09,1115,3.09,1116,3.09,1117,3.09,1118,3.09,1119,3.09,1120,3.09,1121,3.09,1122,3.09,1123,3.09,1124,3.09,1125,3.09,1126,3.09,1127,3.09,1128,3.09,1129,3.09,1130,3.09,1131,3.09,1132,3.09,1133,3.09,1134,3.09,1135,3.09,1136,3.09,1137,3.09,1138,3.09,1139,3.09,1140,3.09,1141,3.09,1142,3.09,1143,3.09,1144,3.09,1145,3.09,1146,3.09,1147,3.09,1148,4.274,1149,3.09,1150,4.274,1151,3.09,1152,4.274,1153,3.09,1154,3.581,1155,3.09,1156,3.09,1157,3.09,1158,3.09,1159,3.09,1160,3.09,1161,3.09,1162,3.09,1163,3.09,1164,3.09,1165,3.09,1166,3.09,1167,3.09,1168,3.09,1169,3.09,1170,3.09,1171,4.274,1172,3.09,1173,4.9,1174,3.09,1175,3.09,1176,3.09,1177,3.09,1178,3.09,1179,3.09,1180,3.09,1181,3.09,1182,3.09,1183,3.09,1184,3.581,1185,3.09,1186,3.09,1187,4.274,1188,4.274,1189,3.09,1190,2.589,1191,4.274,1192,3.09,1193,3.09,1194,3.09,1195,3.09,1196,3.09,1197,3.09,1198,3.09,1199,3.09,1200,3.09,1201,3.09,1202,3.09,1203,3.09,1204,3.09,1205,3.09,1206,4.274,1207,3.09,1208,3.09,1209,3.09,1210,3.09,1211,3.09,1212,3.09,1213,3.09,1214,3.09,1215,3.09,1216,2.012,1217,2.259]],["title/license.html",[734,1.776,735,1.994,1216,1.776]],["body/license.html",[7,0.025,13,1.818,89,0.025,90,0.025,231,2.348,232,2.581,434,2.055,744,3.68,764,3.68,836,3.211,1090,3.68,1091,5.456,1102,4.505,1109,4.868,1190,4.505,1216,2.86,1217,3.211,1218,5.811,1219,4.392,1220,5.377,1221,4.392,1222,4.392,1223,4.392,1224,4.392,1225,4.392,1226,4.392,1227,4.392,1228,4.392,1229,4.392,1230,4.392,1231,4.392,1232,4.392,1233,4.392,1234,4.392,1235,4.392,1236,4.392,1237,4.392,1238,4.392,1239,5.377,1240,4.392,1241,4.392,1242,4.392,1243,4.392,1244,4.392,1245,4.392,1246,5.377,1247,5.377,1248,4.392,1249,4.392,1250,4.392,1251,4.392,1252,4.392,1253,4.392,1254,4.392,1255,4.392,1256,4.392,1257,4.392,1258,4.392,1259,4.392,1260,4.392,1261,3.68,1262,4.392,1263,4.392,1264,4.392,1265,4.392,1266,4.392,1267,4.392,1268,4.392,1269,4.392,1270,4.392,1271,4.392,1272,4.392,1273,4.392,1274,4.392,1275,4.392,1276,4.392,1277,4.392]],["title/modules.html",[2,1.694]],["body/modules.html",[1,3.189,2,1.872,6,2.877,7,0.026,8,2.877,9,2.2,10,2.877,89,0.026,90,0.026,146,2.395,280,3.58,453,2.912,1278,6.481,1279,6.481,1280,6.542,1281,4.897,1282,4.897]],["title/overview.html",[1283,3.713]],["body/overview.html",[1,4.233,2,1.594,3,2.339,4,3.494,5,3.494,6,3.792,7,0.031,8,3.792,9,2.9,10,3.792,11,2.546,12,2.039,13,1.726,85,1.594,89,0.024,90,0.024,93,1.594,146,3.13,147,3.494,148,3.494,149,3.494,150,2.069,155,2.229,337,2.776,387,2.069,470,1.726,501,3.494,502,3.494,528,2.776,577,3.494,579,3.494,594,2.551,630,3.494,631,3.494,632,3.494,722,3.494,724,3.494,872,3.048,1003,3.048,1283,3.494,1284,3.494]],["title/properties.html",[97,0.935,933,2.285]],["body/properties.html",[7,0.03,42,2.381,89,0.026,90,0.026,97,1.162,124,2.86,189,2.015,231,2.602,232,2.86,298,2.86,742,4.079,743,4.079,1014,4.079,1075,3.559,1076,4.079,1216,3.17,1217,3.559,1261,4.079,1285,4.868,1286,4.868,1287,4.868,1288,4.868,1289,5.719,1290,4.868,1291,4.868,1292,4.868,1293,4.868,1294,4.868,1295,4.868,1296,4.868,1297,4.868,1298,4.868]],["title/miscellaneous/variables.html",[208,2.549,1073,1.776]],["body/miscellaneous/variables.html",[7,0.031,14,0.095,35,1.36,37,1.212,39,1.212,59,1.046,89,0.009,90,0.009,96,0.166,98,0.7,99,1.116,102,1.684,106,1.426,107,0.183,108,1.003,128,0.483,133,2.194,141,1.724,143,1.212,144,1.318,162,1.36,163,1.36,172,1.215,174,2.203,179,1.435,182,2.602,183,2.602,189,0.77,200,1.179,207,1.911,208,1.603,212,0.858,214,2.422,231,0.574,232,1.093,284,1.232,303,0.7,343,1.093,368,0.7,373,2.082,374,1.212,375,1.941,377,2.655,389,0.91,391,0.91,392,0.77,396,1.212,415,2.388,416,1.093,431,0.411,446,2.8,455,0.836,463,0.711,470,1.973,519,0.9,534,2.145,535,1.36,538,1.212,540,1.212,542,1.212,546,3.418,587,1.093,589,0.91,621,2.8,674,0.786,676,0.9,678,4.512,680,0.9,682,0.9,755,4.259,784,0.9,810,2.458,813,0.786,816,3.993,841,0.786,872,3.484,879,2.062,886,0.9,900,1.36,932,0.9,987,0.9,988,0.9,992,0.9,1001,1.559,1003,3.716,1030,0.9,1033,0.9,1034,1.559,1035,0.9,1042,1.559,1043,1.559,1044,1.559,1050,0.9,1051,3.043,1052,0.9,1053,1.559,1054,2.779,1055,1.559,1056,1.559,1057,1.559,1058,2.779,1059,2.062,1060,1.559,1061,1.559,1062,2.458,1063,0.9,1064,1.559,1065,2.062,1066,1.559,1067,1.559,1068,0.9,1069,0.9,1073,0.7,1075,1.36,1078,0.9,1103,0.9,1104,0.9,1106,0.9,1154,0.9,1184,0.9,1284,4.331,1299,1.075,1300,2.461,1301,1.075,1302,1.861,1303,1.075,1304,1.075,1305,2.934,1306,1.075,1307,1.075,1308,2.461,1309,1.075,1310,1.075,1311,1.075,1312,1.075,1313,1.075,1314,1.075,1315,1.075,1316,1.075,1317,1.075,1318,1.075,1319,1.075,1320,1.075,1321,1.075,1322,1.075,1323,1.075,1324,1.075,1325,3.897,1326,1.075,1327,1.075,1328,1.075,1329,1.075,1330,1.075,1331,1.075,1332,1.075,1333,1.075,1334,6.019,1335,1.075,1336,1.075,1337,1.075,1338,1.075,1339,1.075,1340,1.075,1341,1.075,1342,1.861,1343,1.075,1344,1.075,1345,1.075,1346,3.632,1347,1.861,1348,1.075,1349,1.861,1350,1.075,1351,1.861,1352,1.075,1353,1.075,1354,1.861,1355,1.075,1356,1.861,1357,1.075,1358,1.075,1359,1.861,1360,1.075,1361,1.861,1362,1.075,1363,1.075,1364,1.075,1365,1.075,1366,1.075,1367,1.075,1368,1.075,1369,1.075,1370,1.075,1371,1.861,1372,1.075,1373,1.075,1374,1.075,1375,1.075,1376,1.075,1377,1.075,1378,1.075,1379,1.075,1380,1.075,1381,1.075,1382,1.075,1383,1.075,1384,1.075,1385,1.075,1386,1.075,1387,1.075,1388,1.861,1389,1.075,1390,1.075,1391,1.861,1392,1.075,1393,1.075,1394,1.861,1395,1.075,1396,1.075,1397,1.861,1398,1.075,1399,1.075,1400,1.861,1401,1.075,1402,1.861,1403,1.075,1404,1.861,1405,1.075,1406,1.075,1407,1.861,1408,1.075,1409,1.861,1410,1.075,1411,1.075,1412,1.861,1413,1.075,1414,1.861,1415,1.075,1416,1.075,1417,1.075,1418,1.075,1419,1.075,1420,1.075,1421,1.075,1422,1.075,1423,1.075,1424,1.075,1425,1.861,1426,1.075,1427,1.075,1428,1.075,1429,1.075,1430,1.861,1431,1.075,1432,1.075,1433,1.861,1434,1.075,1435,1.861,1436,1.075,1437,1.075,1438,1.075,1439,1.075,1440,1.075,1441,1.075,1442,1.075,1443,1.075,1444,1.075,1445,1.075,1446,1.075,1447,1.075,1448,1.075,1449,1.075,1450,1.075,1451,1.075,1452,1.075,1453,1.075,1454,1.075,1455,1.075,1456,1.075,1457,1.075,1458,1.861,1459,1.075,1460,1.861,1461,3.316,1462,3.316,1463,3.316,1464,2.934,1465,1.861,1466,2.461,1467,1.861,1468,3.316,1469,2.934,1470,1.075,1471,1.075,1472,1.075,1473,1.075,1474,1.075,1475,1.075,1476,1.075,1477,1.075,1478,1.075,1479,1.075,1480,1.075,1481,1.075,1482,1.075,1483,1.075,1484,1.075,1485,1.075,1486,1.075,1487,1.075,1488,1.075,1489,1.075,1490,1.075,1491,1.075,1492,1.075,1493,1.075,1494,1.075,1495,1.075,1496,1.075,1497,1.075,1498,1.075,1499,1.075,1500,1.861,1501,1.075,1502,1.075,1503,2.934,1504,1.075,1505,1.075,1506,1.075,1507,1.075,1508,1.075,1509,1.075,1510,1.075,1511,1.861,1512,1.861,1513,1.075,1514,1.861,1515,1.075,1516,1.075,1517,1.075,1518,1.075,1519,1.075,1520,1.075,1521,1.075,1522,1.075,1523,1.075,1524,1.075,1525,3.316,1526,1.075,1527,1.075,1528,1.861,1529,1.075,1530,1.861,1531,1.075,1532,2.461,1533,1.075,1534,1.075,1535,2.461,1536,1.075,1537,3.316,1538,2.934,1539,2.934,1540,1.861,1541,2.461,1542,1.861,1543,1.075,1544,1.861,1545,1.075,1546,1.861,1547,1.075,1548,1.075,1549,1.075,1550,1.075,1551,1.075,1552,1.075,1553,1.861,1554,1.861,1555,1.861,1556,1.075,1557,1.861,1558,1.075,1559,1.075,1560,1.075,1561,1.075,1562,1.861,1563,2.934,1564,1.861,1565,2.461,1566,1.861,1567,1.861,1568,1.861,1569,1.861,1570,1.861,1571,1.861,1572,1.861,1573,3.316,1574,1.075,1575,2.461,1576,1.861,1577,1.861,1578,1.075,1579,1.075,1580,1.075,1581,1.075,1582,1.075,1583,1.075,1584,2.934,1585,4.883,1586,2.461,1587,2.934,1588,3.316,1589,1.075,1590,1.861,1591,3.632,1592,1.075,1593,2.461,1594,1.075,1595,1.861,1596,2.934,1597,1.075,1598,2.461,1599,4.766,1600,1.861,1601,1.075,1602,1.861,1603,1.861,1604,1.075,1605,4.766,1606,1.075,1607,1.075,1608,1.075,1609,3.632,1610,1.075,1611,1.075,1612,1.075,1613,1.075,1614,1.861,1615,1.075,1616,1.861,1617,3.316,1618,1.075,1619,1.075,1620,1.075,1621,1.075,1622,1.861,1623,1.075,1624,1.075,1625,1.075,1626,1.075,1627,1.075,1628,1.075,1629,1.075,1630,1.075,1631,2.934,1632,1.075,1633,1.075,1634,1.075,1635,1.075,1636,1.075,1637,1.075,1638,1.861,1639,1.075,1640,1.075,1641,1.075,1642,1.075,1643,1.861,1644,1.075,1645,1.075,1646,2.461,1647,1.075,1648,1.075,1649,1.075,1650,1.075,1651,1.075,1652,5.084,1653,1.861,1654,1.075,1655,1.075,1656,3.316,1657,1.075,1658,1.075,1659,1.075,1660,1.075,1661,1.075,1662,1.075,1663,3.632,1664,4.122,1665,2.461,1666,1.075,1667,1.075,1668,1.861,1669,1.075,1670,1.861,1671,1.075,1672,1.861,1673,1.075,1674,1.075,1675,1.075,1676,1.075,1677,1.075,1678,1.075,1679,1.075,1680,1.075,1681,1.075,1682,2.934,1683,1.075,1684,1.075,1685,1.861,1686,2.934,1687,1.861,1688,1.075,1689,2.934,1690,1.861,1691,1.075,1692,1.861,1693,1.075,1694,1.075,1695,1.861,1696,1.075,1697,1.075,1698,1.861,1699,1.075,1700,3.897,1701,1.861,1702,1.861,1703,1.075,1704,1.861,1705,1.861,1706,1.075,1707,1.075,1708,1.075,1709,1.861,1710,1.075,1711,1.861,1712,1.861,1713,1.075,1714,1.075,1715,1.075,1716,1.075,1717,1.861,1718,1.075,1719,1.075,1720,1.075,1721,1.075,1722,1.861,1723,1.075,1724,1.075,1725,1.075,1726,1.075,1727,3.632,1728,1.075,1729,1.075,1730,1.861,1731,1.075,1732,1.075,1733,1.075,1734,1.075,1735,1.075,1736,1.075,1737,1.075,1738,1.075,1739,1.075,1740,1.861,1741,1.075,1742,1.075,1743,1.075,1744,1.075,1745,1.075,1746,1.075,1747,1.075,1748,1.075,1749,1.075,1750,1.075,1751,1.075,1752,1.861,1753,1.075,1754,1.075,1755,1.075,1756,1.075,1757,1.075,1758,1.075,1759,1.075,1760,1.075,1761,1.075,1762,1.075,1763,1.075,1764,1.075,1765,1.075,1766,1.075,1767,1.075,1768,1.075,1769,1.075,1770,2.461,1771,1.075,1772,2.934,1773,1.861,1774,1.075,1775,1.075,1776,1.075,1777,1.075,1778,1.075,1779,1.075,1780,1.075,1781,1.075,1782,1.075,1783,1.075,1784,1.075,1785,1.075,1786,1.075,1787,1.075,1788,1.075,1789,1.075,1790,1.075,1791,1.075,1792,1.075,1793,1.075,1794,1.075,1795,1.075,1796,1.075,1797,1.075,1798,1.075,1799,1.075,1800,1.075,1801,1.075,1802,1.075,1803,1.075,1804,1.075,1805,1.075,1806,1.075,1807,1.075,1808,1.075,1809,1.075,1810,1.075,1811,1.861,1812,1.075,1813,1.075,1814,1.075,1815,1.075,1816,1.861,1817,1.075,1818,1.075,1819,1.075,1820,1.075,1821,1.075,1822,1.075,1823,1.075,1824,1.075,1825,1.075,1826,1.075,1827,1.075,1828,1.075,1829,1.075,1830,1.075,1831,1.075,1832,1.075,1833,1.075,1834,1.075,1835,1.861,1836,1.075,1837,1.075,1838,2.934,1839,1.075,1840,1.075,1841,1.075,1842,1.075,1843,1.075,1844,1.075,1845,1.075,1846,1.075,1847,1.075,1848,1.075,1849,1.075,1850,1.075,1851,1.075,1852,1.075,1853,1.075,1854,1.075,1855,1.075,1856,1.861,1857,1.075,1858,2.461,1859,1.075,1860,1.075,1861,1.075,1862,1.075,1863,1.075,1864,1.075,1865,1.075,1866,1.075,1867,1.075,1868,1.075,1869,1.075,1870,1.075,1871,1.075,1872,1.075,1873,1.075,1874,1.075,1875,1.075,1876,1.075,1877,4.122,1878,1.075,1879,1.075,1880,1.075,1881,1.075,1882,1.075,1883,1.075,1884,1.075,1885,1.075,1886,1.075,1887,1.075,1888,1.075,1889,1.075,1890,1.861,1891,3.316,1892,1.075,1893,1.075,1894,1.075,1895,3.632,1896,1.861,1897,1.861,1898,1.861,1899,1.075,1900,1.861,1901,1.861,1902,1.075,1903,1.861,1904,1.075,1905,1.075,1906,1.075,1907,1.075,1908,1.861,1909,1.075,1910,1.075,1911,1.861,1912,1.075,1913,1.075,1914,1.075,1915,1.075,1916,1.075]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":415,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.016",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.026",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.028",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.055",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.057",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.075",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.083",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.099",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.109",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.126",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.139",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.157",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.182",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.19",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.244",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.265",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.412",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.467",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.472",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":886,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["0.506",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.593",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.615",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.927",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.934",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["076ace0",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["077e473",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["08cead1",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":678,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":546,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0004",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7965",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9029",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100px",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["108",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":816,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["11.0",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1922",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2885",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3906",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.5582",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6209",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6223",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6557",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.7",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8652",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.9269",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":755,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["12.0",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2378",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3228",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3318",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3438",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.6543",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7115",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7344",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.8078",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":456,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["1200px",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.1192",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.2035",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.4627",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.5078",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.7",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.9996",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138a847",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["14.1",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4738",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.6",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.9",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1440px",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1454cbb",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.3",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.393",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.5735",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.8",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1555a25",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["16.0",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.2945",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c19.1764",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c8.60701",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6388",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.7",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["16px",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.2635",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6112",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6948",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c20.1986",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c7.70549",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.9",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["18.5479",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.8973",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18a3e23",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["19.1",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c11.2656",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c14.1434",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.3425",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.4301",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.6567",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.7929",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091c12.3443",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091l12",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.85l12.0731",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19043fc",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":446,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":742,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.4",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c14.9702",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c3.82903",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5zm6.73649",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.171",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c10.4922",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c14.9816",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.5",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.7157",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.9544",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":744,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21.1169c11.4093",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.1169c13.0971",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2031",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2388",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2886",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.318",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3516c11.7407",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3693c12.5003",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4132",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4238",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527c12.1193",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.5",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.9",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22px",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.0",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.1",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.8",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":469,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["235",{"_index":468,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["24",{"_index":810,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["24.0",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.3",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24bfb15",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.9",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["26.5",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.0",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e6cb05",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2xl",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":621,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["3.72621",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.80141",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":206,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["30.0",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":1104,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3047cec",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["31.6",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.8",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.5",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["34.1",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.4",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.0",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["36.0",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.0",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.1",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.6",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["38.1",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.7",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["39.0",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["3dc1a0a",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1284,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.8",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8236",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.1",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.3",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.4",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":449,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["41",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["41.0",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["42.2",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.6",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425px",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.0",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.1",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.2",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.4",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.5",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.9",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.5",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.3",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.5",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.6",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4748b98",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["48.7",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["49.5",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a434e6",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["4c15.1581",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c4.65746",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c7d29a",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xl",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4z",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1003,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5).join",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.052",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.38899",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.4",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.6",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.60482c10.8808",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.8",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.88043",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.9",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50.0",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":452,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["51.1",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.1",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.3",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52b97ed",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["53.6",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55.2",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.1",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.3",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57.2",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5797c54",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["58.5",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5846c42",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["58px",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.0",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.4",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5ae3704",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["5rem",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.38882",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.73649",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.8",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.0",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.2",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.6",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.2",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["627",{"_index":458,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["627px",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63.0",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.0",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.3",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64372f4",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["64px",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.0",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.3",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.8",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.1",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6893d90",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["68d0202",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["69.4",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.5",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6efe0e6",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":872,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.36118",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.4",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c10.5373",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c12.6094",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.94883",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.0",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.2",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.2",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["715e349",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72.0",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.2",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.3",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.0",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.3",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.9",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.4",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["778ad4e",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["78.0",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["792992e",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["7c6f199",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["7d82c0d",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541c11.6772",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c1",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c2.5",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c21.5",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c23",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.84185",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80px",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.2",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.7",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.9",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.3",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84.5",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.1",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.3",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.9",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8594508",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["86.5",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86.7",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.6",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.7",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.8",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8757519",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["88.2",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.3",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.6",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.9",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.0",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.7",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8b48513",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":470,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9.0",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.01844",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.02981",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.2",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.8",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.85656",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.2",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.3",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.1",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.4",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.8",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.9",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.2",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.4",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.6",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.0",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.2",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.4",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.5",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.9",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.0",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.1",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.7",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.8",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.0",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.2",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.3",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.8",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.0",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.4",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.5",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.8",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96px",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.0",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.1",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.3",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.6",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.9",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977df75",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["98.0",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.5",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.6",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.7",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.8",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.9",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.0",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.1",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.2",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.4",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.6",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.size",{"_index":612,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["a0e6d3f",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1245,"title":{},"body":{"license.html":{}}}],["acbe81a",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":413,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["access",{"_index":1131,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":680,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":698,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":1271,"title":{},"body":{"license.html":{}}}],["actions",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":831,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":1186,"title":{},"body":{"index.html":{}}}],["adding",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["adjust",{"_index":1183,"title":{},"body":{"index.html":{}}}],["adjustments",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["advised",{"_index":1148,"title":{},"body":{"index.html":{}}}],["ago",{"_index":628,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["ahmed",{"_index":1296,"title":{},"body":{"properties.html":{}}}],["amz",{"_index":363,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["and/or",{"_index":1237,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1157,"title":{},"body":{"index.html":{}}}],["api_domain=opengraph.opensauced.pizza",{"_index":1166,"title":{},"body":{"index.html":{}}}],["api_host=0.0.0.0",{"_index":1164,"title":{},"body":{"index.html":{}}}],["api_port=3005",{"_index":1165,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":331,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["apiconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":332,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinocontentresponse",{"_index":333,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinotfoundresponse",{"_index":334,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiokresponse",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apioperation",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiresponse",{"_index":335,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags(\"health",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"highlight",{"_index":340,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apitags(\"insight",{"_index":530,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["apitags(\"user",{"_index":714,"title":{},"body":{"controllers/UserCardController.html":{}}}],["app",{"_index":873,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":1161,"title":{},"body":{"index.html":{}}}],["application",{"_index":1007,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1275,"title":{},"body":{"license.html":{}}}],["array",{"_index":1116,"title":{},"body":{"index.html":{}}}],["array.from(object.values(langs)).sort((a",{"_index":609,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["asc",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":941,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":1227,"title":{},"body":{"license.html":{}}}],["async",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["atwa",{"_index":1298,"title":{},"body":{"properties.html":{}}}],["author",{"_index":1295,"title":{},"body":{"properties.html":{}}}],["author_login",{"_index":563,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["authorization",{"_index":197,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":1264,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1282,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":373,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1149,"title":{},"body":{"index.html":{}}}],["await",{"_index":210,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["awaits",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":297,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["aws",{"_index":662,"title":{},"body":{"injectables/S3FileStorageService.html":{},"index.html":{}}}],["axios",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":610,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b.size",{"_index":611,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b1f870c",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["b6abefa",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":466,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["backgroundimage",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["bee0e6e",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1177,"title":{},"body":{"index.html":{}}}],["being",{"_index":925,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":1207,"title":{},"body":{"index.html":{}}}],["beta",{"_index":1083,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":743,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.10",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["beta.opengraph.opensauced",{"_index":1085,"title":{},"body":{"index.html":{}}}],["beta@digital",{"_index":1084,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":1092,"title":{},"body":{"index.html":{}}}],["bio",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":374,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["body.length",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.slice(0",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":843,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["boolean",{"_index":109,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["bootstrap",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxshadow",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":1214,"title":{},"body":{"index.html":{}}}],["break",{"_index":1175,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1280,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1278,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":686,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{}}}],["bucketname",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":652,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1291,"title":{},"body":{"properties.html":{}}}],["build",{"_index":759,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":1219,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["c5a5fec",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":296,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["cached",{"_index":1151,"title":{},"body":{"index.html":{}}}],["caching",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":298,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"properties.html":{}}}],["card.controller",{"_index":506,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.controller.ts",{"_index":285,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"coverage.html":{}}}],["card.controller.ts:31",{"_index":712,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:33",{"_index":325,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:41",{"_index":527,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.controller.ts:55",{"_index":708,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:57",{"_index":312,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:65",{"_index":525,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":504,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.service",{"_index":338,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{}}}],["card.service.ts",{"_index":372,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["card.service.ts:120",{"_index":581,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:123",{"_index":510,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:131",{"_index":727,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:150",{"_index":585,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:155",{"_index":515,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:159",{"_index":731,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:26",{"_index":580,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:34",{"_index":508,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{}}}],["card.service.ts:35",{"_index":725,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:42",{"_index":517,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:43",{"_index":733,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:81",{"_index":512,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:82",{"_index":583,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:89",{"_index":729,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.template",{"_index":398,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["card.template.ts",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/highlight",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["card/insight",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["card/templates/highlight",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/insight",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/card",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/insight",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/repo",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/user",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/tailwind.config.ts",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/user",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["cardfooter",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfooter(langs",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cards",{"_index":341,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["cardstylesetup",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":689,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["catching",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["cba7521",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["ccc8a96",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["cdn",{"_index":852,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdn.opensauced.pizzaother",{"_index":1156,"title":{},"body":{"index.html":{}}}],["cdncustomdomain",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1159,"title":{},"body":{"index.html":{}}}],["changed",{"_index":818,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":736,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":1205,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1224,"title":{},"body":{"license.html":{}}}],["charlimit",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charlimit).replace",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["checkhighlightsocialcard",{"_index":287,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkhighlightsocialcard(id",{"_index":289,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkinsightsocialcard",{"_index":520,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkinsightsocialcard(id",{"_index":522,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkrequiresupdate",{"_index":475,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["checkrequiresupdate(id",{"_index":509,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{}}}],["checkrequiresupdate(username",{"_index":726,"title":{},"body":{"injectables/UserCardService.html":{}}}],["checkusersocialcard",{"_index":702,"title":{},"body":{"controllers/UserCardController.html":{}}}],["checkusersocialcard(username",{"_index":704,"title":{},"body":{"controllers/UserCardController.html":{}}}],["churntotalcount",{"_index":122,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["cito",{"_index":1100,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1267,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["classes",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["clc",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["clip",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed_prs_count",{"_index":123,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["closes",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":147,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":148,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":149,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule",{"_index":501,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule_imports",{"_index":503,"title":{},"body":{"modules/HighlightCardModule.html":{}}}],["cluster_highlightcardmodule_providers",{"_index":502,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule",{"_index":577,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule_imports",{"_index":578,"title":{},"body":{"modules/InsightCardModule.html":{}}}],["cluster_insightcardmodule_providers",{"_index":579,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":630,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":631,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":632,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_usercardmodule",{"_index":722,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["cluster_usercardmodule_imports",{"_index":723,"title":{},"body":{"modules/UserCardModule.html":{}}}],["cluster_usercardmodule_providers",{"_index":724,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["code",{"_index":761,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codename",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":932,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["colors.util",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":1173,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commits",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":1178,"title":{},"body":{"index.html":{}}}],["community",{"_index":1198,"title":{},"body":{"index.html":{}}}],["company",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":1189,"title":{},"body":{"index.html":{}}}],["component",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["concept",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1244,"title":{},"body":{"license.html":{}}}],["config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":681,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":675,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":683,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":1127,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":167,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":853,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configured",{"_index":1162,"title":{},"body":{"index.html":{}}}],["connected",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1276,"title":{},"body":{"license.html":{}}}],["const",{"_index":200,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":165,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["constructor(config",{"_index":643,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":166,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":507,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["container",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":654,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1272,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1193,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1191,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":904,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["contributor",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors",{"_index":534,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["contributors.map",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors.ts",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributorsreq",{"_index":557,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsreq.data.data",{"_index":561,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres",{"_index":560,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres.map",{"_index":562,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["controller",{"_index":220,"title":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"highlights",{"_index":339,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["controller(\"insights",{"_index":529,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["controller(\"users",{"_index":713,"title":{},"body":{"controllers/UserCardController.html":{}}}],["controllers",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":1200,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1239,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1102,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1218,"title":{},"body":{"license.html":{}}}],["correct",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":215,"title":{},"body":{"injectables/GithubService.html":{}}}],["count",{"_index":487,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["couple",{"_index":1182,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1027,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":98,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":679,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["curr",{"_index":412,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["custom",{"_index":851,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customprops",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["d84015b",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["d='m6.73649",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1268,"title":{},"body":{"license.html":{}}}],["dark",{"_index":879,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":461,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["data:image/svg+xml,%3csvg",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":202,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date((new",{"_index":204,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":600,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(updated_at",{"_index":428,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["date).getdate",{"_index":625,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate((new",{"_index":624,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate(today.getdate",{"_index":205,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["datesince",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":627,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["dbinsight",{"_index":92,"title":{"interfaces/DbInsight.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["dbreaction",{"_index":115,"title":{"interfaces/DbReaction.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbrepo",{"_index":119,"title":{"interfaces/DbRepo.html":{}},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["dbuserhighlight",{"_index":136,"title":{"interfaces/DbUserHighlight.html":{}},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbuserinsightrepo",{"_index":110,"title":{"interfaces/DbUserInsightRepo.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["dc9f3a4",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["dd096ca",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1229,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1277,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["defauls",{"_index":1143,"title":{},"body":{"index.html":{}}}],["default",{"_index":182,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1158,"title":{},"body":{"index.html":{}}}],["defined",{"_index":168,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["deleted_at",{"_index":139,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":1011,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deployment",{"_index":828,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":124,"title":{},"body":{"interfaces/DbRepo.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"properties.html":{}}}],["design",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":1106,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev/usercards.ts",{"_index":1119,"title":{},"body":{"index.html":{}}}],["dev:usercards",{"_index":1115,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1113,"title":{},"body":{"index.html":{}}}],["development",{"_index":841,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devit",{"_index":1147,"title":{},"body":{"index.html":{}}}],["differently",{"_index":1163,"title":{},"body":{"index.html":{}}}],["digital",{"_index":847,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitalocean",{"_index":1134,"title":{},"body":{"index.html":{}}}],["digitaloceanconfig",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":433,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["direction",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discord.find",{"_index":1201,"title":{},"body":{"index.html":{}}}],["disk",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_percentage=0.7",{"_index":1169,"title":{},"body":{"index.html":{}}}],["disk_size",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size=100",{"_index":1170,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":813,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/local",{"_index":1121,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1235,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":987,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["do_spaces_",{"_index":1140,"title":{},"body":{"index.html":{}}}],["do_spaces_access_key_id",{"_index":1136,"title":{},"body":{"index.html":{}}}],["do_spaces_bucket_name=opengraph",{"_index":1146,"title":{},"body":{"index.html":{}}}],["do_spaces_cdn_disabled=trueif",{"_index":1153,"title":{},"body":{"index.html":{}}}],["do_spaces_endpoint=digitaloceanspaces.com",{"_index":1144,"title":{},"body":{"index.html":{}}}],["do_spaces_region=sfo3",{"_index":1145,"title":{},"body":{"index.html":{}}}],["do_spaces_secret_access_key=*******************************************ping",{"_index":1137,"title":{},"body":{"index.html":{}}}],["do_spaces_subdomain=beta.opengraph",{"_index":1155,"title":{},"body":{"index.html":{}}}],["docker",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":1097,"title":{},"body":{"index.html":{}}}],["document",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":836,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1154,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":1285,"title":{},"body":{"properties.html":{}}}],["double",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["downgrade",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["draft_prs_count",{"_index":125,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["dry",{"_index":1185,"title":{},"body":{"index.html":{}}}],["during",{"_index":1152,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["e91c43f",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["earlier",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":677,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge",{"_index":423,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["edge.node",{"_index":424,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge.size",{"_index":425,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge?.node.id",{"_index":603,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edges",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji_id",{"_index":117,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["enable",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":1192,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":674,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["engineer",{"_index":1125,"title":{},"body":{"index.html":{}}}],["engines",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["env.example",{"_index":1123,"title":{},"body":{"index.html":{}}}],["environment",{"_index":889,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["error",{"_index":690,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":692,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":865,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["etl",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1263,"title":{},"body":{"license.html":{}}}],["exceeded",{"_index":346,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["exceeded'})@apibadrequestresponse({description",{"_index":323,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["exceeded'})@redirect",{"_index":711,"title":{},"body":{"controllers/UserCardController.html":{}}}],["except",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":490,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["explanation",{"_index":1129,"title":{},"body":{"index.html":{}}}],["export",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["exports",{"_index":152,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":1254,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraneous",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["extrenaous",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["f7db713",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":498,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fastify",{"_index":336,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fastifyreply",{"_index":291,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fc9211c",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["fe44711",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":1107,"title":{},"body":{"index.html":{}}}],["ff5f13",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":656,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":639,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":645,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":1228,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":349,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fill",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='%2324292f'/%3e%3c/svg%3e",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='none",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs.length",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1122,"title":{},"body":{"index.html":{}}}],["first",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":394,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["fitness",{"_index":1259,"title":{},"body":{"license.html":{}}}],["fix",{"_index":770,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":988,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":1090,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":459,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["footer.ts",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":378,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["forcepathstyle",{"_index":673,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":1176,"title":{},"body":{"index.html":{}}}],["formattedname",{"_index":593,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["found",{"_index":308,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":321,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["free",{"_index":1223,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":384,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fs.readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":448,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["full",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["full_name",{"_index":114,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["function",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":967,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1242,"title":{},"body":{"license.html":{}}}],["gaps",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1286,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":983,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatecardbuffer",{"_index":435,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["generatecardbuffer(highlightid",{"_index":511,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["generatecardbuffer(insightid",{"_index":582,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["generatecardbuffer(username",{"_index":728,"title":{},"body":{"injectables/UserCardService.html":{}}}],["generated",{"_index":1210,"title":{},"body":{"index.html":{}}}],["generatehighlightsocialcard",{"_index":288,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generatehighlightsocialcard(id",{"_index":313,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generateinsightsocialcard",{"_index":521,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generateinsightsocialcard(id",{"_index":526,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generates",{"_index":316,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{}}}],["generateusersocialcard",{"_index":703,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generateusersocialcard(username",{"_index":709,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generating",{"_index":1114,"title":{},"body":{"index.html":{}}}],["generation",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":1076,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:id",{"_index":342,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:id/metadata",{"_index":356,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:username",{"_index":715,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/:username/metadata",{"_index":721,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/service",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":314,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:id/metadata')@apioperation({operationid",{"_index":292,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":710,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/:username/metadata')@apioperation({operationid",{"_index":705,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":636,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":640,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":647,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta",{"_index":641,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta(hash",{"_index":649,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getgetinsightcard",{"_index":576,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getgetinsightcard(id",{"_index":584,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["gethighlightcard",{"_index":499,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightcard(id",{"_index":514,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightdata",{"_index":404,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightdata(highlightid",{"_index":516,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightsocialcardmetadata",{"_index":293,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["getinsightdata",{"_index":543,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getinsightdata(insightid",{"_index":586,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["getinsightsocialcardmetadata",{"_index":523,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["getoriginendpoint",{"_index":637,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getrepo",{"_index":162,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrepo(owner",{"_index":171,"title":{},"body":{"injectables/GithubService.html":{}}}],["gets",{"_index":294,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["getting",{"_index":734,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["getuser",{"_index":163,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":177,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":629,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getusercard(username",{"_index":730,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getuserdata",{"_index":595,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getuserdata(username",{"_index":732,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getusersocialcardmetadata",{"_index":706,"title":{},"body":{"controllers/UserCardController.html":{}}}],["gfonts",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1293,"title":{},"body":{"properties.html":{}}}],["github",{"_index":826,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":153,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/entities/db",{"_index":399,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["github/github.module",{"_index":505,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["github/github.service",{"_index":386,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["github_pat_user=ghp_",{"_index":1133,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":199,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":146,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":150,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":1112,"title":{},"body":{"index.html":{}}}],["gql/get",{"_index":191,"title":{},"body":{"injectables/GithubService.html":{}}}],["gradient",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient(var",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1222,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1281,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":187,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":195,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":158,"title":{},"body":{"injectables/GithubService.html":{}}}],["grass",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":1195,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1196,"title":{},"body":{"index.html":{}}}],["handler",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["hasfile",{"_index":350,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hash",{"_index":476,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hassponsorslisting",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["having",{"_index":1110,"title":{},"body":{"index.html":{}}}],["head",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":326,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["header(\"content",{"_index":344,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headers",{"_index":196,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headobjectcommand",{"_index":660,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":282,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":221,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":280,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["hearticondata",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":457,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["height='24",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1142,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1221,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":140,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{}}}],["highlight.entity",{"_index":400,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlight.entity.ts",{"_index":138,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"coverage.html":{}}}],["highlightcardcontroller",{"_index":283,"title":{"controllers/HighlightCardController.html":{}},"body":{"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"coverage.html":{}}}],["highlightcarddata",{"_index":371,"title":{"interfaces/HighlightCardData.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["highlightcardmodule",{"_index":6,"title":{"modules/HighlightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["highlightcardservice",{"_index":337,"title":{"injectables/HighlightCardService.html":{}},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["highlightcardtemplate",{"_index":396,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlightcardtemplate(avatarurl",{"_index":443,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightdata",{"_index":436,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightid",{"_index":405,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq",{"_index":406,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq.data",{"_index":408,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlights",{"_index":286,"title":{},"body":{"controllers/HighlightCardController.html":{},"changelog.html":{}}}],["highlights/${string(id)}.png",{"_index":477,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["higlight",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1265,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1288,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host_id",{"_index":126,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["hsl(116",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(120",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(121",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(122",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(124",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(126",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(130",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(131",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(132",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(133",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(134",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(135",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(136",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(137",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(146",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(15",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(19",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(195",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(197",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(198",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(199",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(200",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(201",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(203",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(205",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(206",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(207",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(208",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(209",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(210",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(211",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(212",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(213",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(214",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(216",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(23",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(24",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(25",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(26",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(28",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(30",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(33",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(351",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(353",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(354",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(356",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(357",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(358",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(359",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(360",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(0",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(181",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(182",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(19",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(200",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(202",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(204",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(205",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(206",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(207",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(208",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(209",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(210",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(211",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(216",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":437,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["html(insightcardtemplate(pagename",{"_index":571,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["http",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["https",{"_index":992,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://api.opensauced.pizza/v1/contributors/search?${string(query",{"_index":559,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["https://github.com/open",{"_index":1289,"title":{},"body":{"properties.html":{}}}],["https://www.github.com/${author_login}.png?size=50",{"_index":564,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["https://www.github.com/${owner}.png?size=50",{"_index":568,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["httpservice",{"_index":380,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["httpstatus",{"_index":327,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.bad_request",{"_index":360,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["httpstatus.no_content",{"_index":357,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_found",{"_index":359,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_modified",{"_index":358,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["icon",{"_index":900,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":99,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["id'})@apinocontentresponse({description",{"_index":300,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["id'})@redirect",{"_index":324,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["identifier",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":301,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["image'})@apinotfoundresponse({description",{"_index":320,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png",{"_index":345,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":318,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["images",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1255,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori",{"_index":438,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori\")).default",{"_index":440,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["included",{"_index":1248,"title":{},"body":{"license.html":{}}}],["including",{"_index":1190,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":96,"title":{"index.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":671,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":193,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":154,"title":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"overview.html":{}}}],["input",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insertion",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":1117,"title":{},"body":{"index.html":{}}}],["insight",{"_index":524,"title":{},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{}}}],["insight.entity",{"_index":537,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insight.entity.ts",{"_index":95,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["insight_id",{"_index":112,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["insightcardcontroller",{"_index":518,"title":{"controllers/InsightCardController.html":{}},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"coverage.html":{}}}],["insightcarddata",{"_index":533,"title":{"interfaces/InsightCardData.html":{}},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["insightcardmodule",{"_index":8,"title":{"modules/InsightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InsightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["insightcardservice",{"_index":528,"title":{"injectables/InsightCardService.html":{}},"body":{"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["insightcardtemplate",{"_index":538,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors",{"_index":542,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors(contributors",{"_index":572,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightdata",{"_index":569,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightfooter",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightfooter(contributors",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insightid",{"_index":544,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq",{"_index":547,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq.data",{"_index":549,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightrepos",{"_index":540,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightrepos(repos",{"_index":573,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insights",{"_index":519,"title":{},"body":{"controllers/InsightCardController.html":{},"miscellaneous/variables.html":{}}}],["insights/${string(id)}.png",{"_index":574,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["install",{"_index":1098,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1093,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":691,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":460,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":447,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interarraybuffermedium",{"_index":451,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interface",{"_index":91,"title":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":93,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"overview.html":{}}}],["invalid",{"_index":310,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["is_favorite",{"_index":100,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["is_public",{"_index":101,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["isbountyhunter",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":127,"title":{},"body":{"interfaces/DbRepo.html":{},"changelog.html":{}}}],["join",{"_index":556,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"index.html":{}}}],["join(joinliteral",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":383,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["json.stringify(ratelimit",{"_index":219,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":688,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keys",{"_index":1139,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":1287,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1253,"title":{},"body":{"license.html":{}}}],["langlist",{"_index":421,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["langrepos",{"_index":598,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langrepos.map(repo",{"_index":601,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs",{"_index":375,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":605,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs[edge.node.id].size",{"_index":606,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langtotal",{"_index":376,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["language",{"_index":128,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":784,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages(first",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":365,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodified",{"_index":361,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified.toisostring",{"_index":491,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified?.toisostring",{"_index":367,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["latest",{"_index":295,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["layout",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":626,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["level",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1269,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1266,"title":{},"body":{"license.html":{}}}],["license",{"_index":1216,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["light",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":214,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["limit).join",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit).join(\"\")}${repolist.length",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":1231,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1256,"title":{},"body":{"license.html":{}}}],["link",{"_index":315,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lins",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1171,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":1174,"title":{},"body":{"index.html":{}}}],["literal",{"_index":536,"title":{},"body":{"interfaces/InsightCardData.html":{}}}],["little",{"_index":1128,"title":{},"body":{"index.html":{}}}],["live",{"_index":824,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":431,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":1108,"title":{},"body":{"index.html":{}}}],["location",{"_index":368,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["logger(githubservice.name",{"_index":185,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":403,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["loggermodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":141,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["lowercase",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1094,"title":{},"body":{"index.html":{}}}],["main",{"_index":1079,"title":{},"body":{"index.html":{}}}],["make",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(repo",{"_index":554,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["matching",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxrepoqueryidslenght",{"_index":545,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["media",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_heap=200",{"_index":1167,"title":{},"body":{"index.html":{}}}],["memory_rss",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss=3000",{"_index":1168,"title":{},"body":{"index.html":{}}}],["memoryhealthindicator",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1258,"title":{},"body":{"license.html":{}}}],["merge",{"_index":764,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["merged_prs_count",{"_index":129,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["message",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":364,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["metadata",{"_index":299,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{}}}],["metadata?.[\"reactions",{"_index":486,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["method",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["min",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1073,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1184,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1217,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":366,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["modify",{"_index":1233,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":1297,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":1130,"title":{},"body":{"index.html":{}}}],["move",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":1126,"title":{},"body":{"index.html":{}}}],["namewithowner",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1089,"title":{},"body":{"index.html":{}}}],["needs",{"_index":305,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["needsupdate",{"_index":351,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["nestjs",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["nestjs/terminus",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":492,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["next",{"_index":1077,"title":{},"body":{"index.html":{}}}],["nextjs",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1001,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":385,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["node:stream",{"_index":664,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":1095,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1262,"title":{},"body":{"license.html":{}}}],["normal",{"_index":464,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["normal.woff",{"_index":450,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notable",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":693,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notfoundexception",{"_index":379,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notice",{"_index":1246,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1099,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":1096,"title":{},"body":{"index.html":{}}}],["null",{"_index":145,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["number",{"_index":108,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["number(curr.reaction_count",{"_index":414,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":604,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["obtaining",{"_index":1226,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":848,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.app",{"_index":1081,"title":{},"body":{"index.html":{}}}],["ocean.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":1034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":1211,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":188,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["one",{"_index":343,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["one'})@header('content",{"_index":317,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["opacity",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["open_prs_count",{"_index":130,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["opengraph",{"_index":1075,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced",{"_index":1082,"title":{},"body":{"index.html":{}}}],["opengraph.opensauced.pizza",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opengraph@digital",{"_index":1080,"title":{},"body":{"index.html":{}}}],["opening",{"_index":1179,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["optimize",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":121,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["options",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["orange",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1087,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":1274,"title":{},"body":{"license.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outputs",{"_index":1120,"title":{},"body":{"index.html":{}}}],["overflowing",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1283,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1203,"title":{},"body":{"index.html":{}}}],["owner",{"_index":174,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":933,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1187,"title":{},"body":{"index.html":{}}}],["pagename",{"_index":535,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["paginate",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":328,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["param(\"id",{"_index":347,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["param(\"username",{"_index":716,"title":{},"body":{"controllers/UserCardController.html":{}}}],["parameters",{"_index":170,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["parseintpipe",{"_index":329,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["partial",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1260,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":348,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["path",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["permission",{"_index":1220,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1240,"title":{},"body":{"license.html":{}}}],["person",{"_index":1225,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1241,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["pinned",{"_index":142,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["pinneditems",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1194,"title":{},"body":{"index.html":{}}}],["png",{"_index":473,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata",{"_index":471,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata.aspng",{"_index":474,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["port",{"_index":1103,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1250,"title":{},"body":{"license.html":{}}}],["pr's",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["pr_active_count",{"_index":131,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["pr_velocity_count",{"_index":132,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["prefix",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["prerequisites",{"_index":1086,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["proceed",{"_index":1197,"title":{},"body":{"index.html":{}}}],["process.env.ci",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1078,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":589,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":740,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pronouns",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proof",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"properties.html":{}}}],["protocol",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1251,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["prpat",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":429,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["publish",{"_index":1234,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1180,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1261,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":661,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":1172,"title":{},"body":{"index.html":{}}}],["query",{"_index":207,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["query.set",{"_index":551,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["questions",{"_index":1199,"title":{},"body":{"index.html":{}}}],["radial",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":322,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["ratelimit",{"_index":164,"title":{},"body":{"injectables/GithubService.html":{}}}],["reaction",{"_index":494,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["reaction.entity",{"_index":401,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reaction.entity.ts",{"_index":116,"title":{},"body":{"interfaces/DbReaction.html":{},"coverage.html":{}}}],["reaction_count",{"_index":118,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["reactions",{"_index":377,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["reactionsreq",{"_index":409,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reactionsreq.data.reduce((acc",{"_index":411,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["read",{"_index":699,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":653,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readme",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":111,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["realpercent",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":596,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["red",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":330,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["redirecting",{"_index":496,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["refactoring",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["regeneration",{"_index":306,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["region",{"_index":676,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":825,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":216,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["remove",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":172,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repo.full_name.split",{"_index":567,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.languages?.edges?.flatmap(edge",{"_index":422,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":602,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo.languages?.totalsize",{"_index":427,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.repo_id",{"_index":555,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.ts",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo?.isprivate",{"_index":614,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo?.owner.login",{"_index":615,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo_id",{"_index":113,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["repoiconwithname",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoiconwithname(`${name.substring(0",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repoids",{"_index":552,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repolist",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame",{"_index":416,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["reponame.length",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame.substring(0",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos",{"_index":102,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repos.entity.ts",{"_index":120,"title":{},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["repos.length",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map(repo",{"_index":566,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repos.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":565,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{}}}],["repositories(first",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":189,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":1209,"title":{},"body":{"index.html":{}}}],["request",{"_index":1181,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":1010,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requiresupdatemeta",{"_index":402,"title":{"interfaces/RequiresUpdateMeta.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["res",{"_index":290,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(fileurl",{"_index":353,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(url",{"_index":355,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":217,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":695,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":696,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.metadata",{"_index":697,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":1230,"title":{},"body":{"license.html":{}}}],["results",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":381,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg(svg",{"_index":465,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg.render",{"_index":472,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg/resvg",{"_index":382,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["return",{"_index":212,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":175,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["returnval",{"_index":480,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.lastmodified",{"_index":482,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.needsupdate",{"_index":497,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["reverse",{"_index":1124,"title":{},"body":{"index.html":{}}}],["rewrite",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["rewrites",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(17",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(181",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(237",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(238",{"_index":467,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["rights",{"_index":1232,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["rolled",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["rule='evenodd",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1088,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":395,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["s3",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{}}}],["s3client",{"_index":638,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":9,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":387,"title":{"injectables/S3FileStorageService.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["same",{"_index":495,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["sanitizedusername",{"_index":717,"title":{},"body":{"controllers/UserCardController.html":{}}}],["satori",{"_index":439,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["satori(template",{"_index":454,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["sauced",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/maintainers",{"_index":1138,"title":{},"body":{"index.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":1290,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":1294,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":1292,"title":{},"body":{"properties.html":{}}}],["savedreactions",{"_index":485,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["schema",{"_index":190,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["screens",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":432,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["sdk",{"_index":845,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sdk/client",{"_index":663,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":682,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1238,"title":{},"body":{"license.html":{}}}],["send",{"_index":370,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["sensibly",{"_index":1141,"title":{},"body":{"index.html":{}}}],["server",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["set",{"_index":1019,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setup.ts",{"_index":1057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sfo3",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1247,"title":{},"body":{"license.html":{}}}],["short_code",{"_index":103,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["singleline",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":133,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":553,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["social",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1091,"title":{},"body":{"index.html":{},"license.html":{}}}],["sometimes",{"_index":1160,"title":{},"body":{"index.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["spaces",{"_index":849,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["spacing",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spam_prs_count",{"_index":134,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["spec",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":418,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["splitting",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../highlight",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../insight",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1074,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tailwind.config.ts",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":1030,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":1033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":1035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/entities/db",{"_index":94,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["src/github/github.module.ts",{"_index":151,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:12",{"_index":186,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:13",{"_index":169,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:22",{"_index":178,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:33",{"_index":173,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:41",{"_index":181,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":281,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":633,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":284,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stars",{"_index":135,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["start",{"_index":1101,"title":{},"body":{"index.html":{}}}],["start:devlocal",{"_index":1105,"title":{},"body":{"index.html":{}}}],["started",{"_index":735,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":883,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":303,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["status(hasfile",{"_index":369,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["stops",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["storage.module.ts",{"_index":634,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":388,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["storage.service.ts",{"_index":635,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":659,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:13",{"_index":658,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:15",{"_index":657,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:17",{"_index":644,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:34",{"_index":646,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:54",{"_index":648,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:75",{"_index":650,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:96",{"_index":655,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["strategy",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["streamablefile",{"_index":319,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["string",{"_index":106,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(reactions",{"_index":488,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":426,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["style",{"_index":463,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":830,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styling",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1243,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1236,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1249,"title":{},"body":{"license.html":{}}}],["suite",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["superlative",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1279,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":453,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"modules.html":{}}}],["switch",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["tailwind",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["tailwindconfig",{"_index":392,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":442,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["templates/highlight",{"_index":397,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["templates/insight",{"_index":539,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/insight",{"_index":541,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/user",{"_index":390,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/tailwind.config",{"_index":393,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/user",{"_index":588,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["terminusmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":1024,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test/local",{"_index":1118,"title":{},"body":{"index.html":{}}}],["testing",{"_index":777,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.config.bucketname",{"_index":687,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":670,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":669,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":666,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":665,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":668,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":279,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":271,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":275,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":277,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":273,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.gethighlightdata(highlightid",{"_index":441,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(id",{"_index":483,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getinsightdata(id",{"_index":575,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getinsightdata(insightid",{"_index":570,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getoriginendpoint",{"_index":667,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.getuserdata(username",{"_index":618,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.getrepo(owner",{"_index":420,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(login",{"_index":419,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(username",{"_index":597,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":500,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.graphqlwithauth",{"_index":194,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":213,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":211,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.highlightcardservice.checkrequiresupdate(id",{"_index":352,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.highlightcardservice.gethighlightcard(id",{"_index":354,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":278,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":274,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":276,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":272,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpservice.get",{"_index":558,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`https://api.opensauced.pizza/v1/highlights/${highlightid}/reactions",{"_index":410,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.httpservice.get(`https://api.opensauced.pizza/v1/insights/${insightid",{"_index":548,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightid",{"_index":407,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.insightcardservice.checkrequiresupdate(id",{"_index":531,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.insightcardservice.getgetinsightcard(id",{"_index":532,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.logger.debug",{"_index":489,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.logger.debug(`rate",{"_index":218,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":672,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":685,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.fileexists(hash",{"_index":479,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getcdnendpoint()}${hash",{"_index":478,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilelastmodified(hash",{"_index":481,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilemeta(hash",{"_index":484,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.usercardservice.checkrequiresupdate(sanitizedusername",{"_index":719,"title":{},"body":{"controllers/UserCardController.html":{}}}],["this.usercardservice.getusercard(sanitizedusername",{"_index":720,"title":{},"body":{"controllers/UserCardController.html":{}}}],["thresholdpercent",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":1135,"title":{},"body":{"index.html":{}}}],["throw",{"_index":694,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["title",{"_index":143,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["title.length",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title.slice(0",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["today",{"_index":201,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago",{"_index":203,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago.toisostring",{"_index":209,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":623,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["token",{"_index":198,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":1132,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1273,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["try",{"_index":684,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ts5",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["tw",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitterusername",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":107,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":192,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":910,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":1188,"title":{},"body":{"index.html":{}}}],["ui",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":311,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":309,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":307,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apiresponse({description",{"_index":304,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["unexisting",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":176,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["up",{"_index":302,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["update",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1213,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":104,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updated_at.toisostring",{"_index":493,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updatedat",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["uploadfile",{"_index":642,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":651,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":144,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["url.replace(\"https://github.com",{"_index":417,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["urlsearchparams",{"_index":550,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["usage",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":434,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":430,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["usefactory",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":137,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["user(login",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":607,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.login",{"_index":616,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.name",{"_index":608,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.repositories.nodes?.filter",{"_index":599,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.toprepositories.nodes?.filter",{"_index":613,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.ts",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user[\"databaseid",{"_index":591,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user[\"name",{"_index":592,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user_id",{"_index":105,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["usercardcontroller",{"_index":700,"title":{"controllers/UserCardController.html":{}},"body":{"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"coverage.html":{}}}],["usercarddata",{"_index":590,"title":{"interfaces/UserCardData.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["usercardmodule",{"_index":10,"title":{"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["usercardservice",{"_index":594,"title":{"injectables/UserCardService.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["userdata",{"_index":617,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userlangs",{"_index":389,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":444,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["username",{"_index":179,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinocontentresponse({description",{"_index":707,"title":{},"body":{"controllers/UserCardController.html":{}}}],["username.tolowercase",{"_index":718,"title":{},"body":{"controllers/UserCardController.html":{}}}],["userpat",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecardtemplate",{"_index":587,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilecardtemplate(avatarurl",{"_index":619,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userprofilerepos",{"_index":391,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos([repo",{"_index":445,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["userprofilerepos(repos",{"_index":620,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["users",{"_index":701,"title":{},"body":{"controllers/UserCardController.html":{},"index.html":{}}}],["users/${string(username)}.png",{"_index":622,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["using",{"_index":1150,"title":{},"body":{"index.html":{}}}],["utc:hh:mm:ss.l",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":183,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":1031,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":208,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1014,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1202,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visual",{"_index":1208,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1206,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":1212,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1257,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1252,"title":{},"body":{"license.html":{}}}],["way",{"_index":1111,"title":{},"body":{"index.html":{}}}],["web",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":462,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["whether",{"_index":1270,"title":{},"body":{"license.html":{}}}],["width",{"_index":455,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["width='24",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1109,"title":{},"body":{"index.html":{},"license.html":{}}}],["workflow",{"_index":1215,"title":{},"body":{"index.html":{}}}],["x",{"_index":362,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cpath",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xs",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":513,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}}}],["yoga",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1204,"title":{},"body":{"index.html":{}}}],["zero",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HighlightCardModule\n                        \n                        \n                            InsightCardModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                        \n                            UserCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { UserCardModule } from \"./social-card/user-card/user-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardModule } from \"./social-card/highlight-card/highlight-card.module\";\nimport { InsightCardModule } from \"./social-card/insight-card/insight-card.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [ApiConfig, GitHubConfig, DigitalOceanConfig],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    S3FileStorageModule,\n    UserCardModule,\n    HighlightCardModule,\n    InsightCardModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbInsight.html":{"url":"interfaces/DbInsight.html","title":"interface - DbInsight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbInsight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_favorite\n                                        \n                                \n                                \n                                        \n                                            is_public\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            short_code\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_favorite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_favorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:         DbUserInsightRepo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DbUserInsightRepo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        short_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        short_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbReaction.html":{"url":"interfaces/DbReaction.html","title":"interface - DbReaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-reaction.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji_id\n                                        \n                                \n                                \n                                        \n                                            reaction_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction_count:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbReaction {\n  emoji_id: string;\n  reaction_count: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbRepo.html":{"url":"interfaces/DbRepo.html","title":"interface - DbRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-repos.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            churnTotalCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closed_prs_count\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draft_prs_count\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            host_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            issues\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            merged_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_active_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_velocity_count\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spam_prs_count\n                                        \n                                \n                                \n                                        \n                                            stars\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        churnTotalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        churnTotalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closed_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draft_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draft_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issues:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        merged_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        merged_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_active_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_active_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_velocity_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_velocity_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spam_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spam_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stars:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbRepo {\n  id: string;\n  host_id: string;\n  size: number;\n  stars: number;\n  issues: number;\n  full_name: string;\n  pr_active_count?: number;\n  open_prs_count?: number;\n  merged_prs_count?: number;\n  closed_prs_count?: number;\n  draft_prs_count?: number;\n  spam_prs_count?: number;\n  pr_velocity_count?: number;\n  churnTotalCount?: number;\n  language: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserHighlight.html":{"url":"interfaces/DbUserHighlight.html","title":"interface - DbUserHighlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-user-highlight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            deleted_at\n                                        \n                                \n                                \n                                        \n                                            highlight\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            pinned\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted_at:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pinned\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pinned:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbUserHighlight {\n  readonly id: string;\n  readonly user_id: string;\n  readonly url: string;\n  readonly title: string;\n  readonly highlight: string;\n  readonly pinned: boolean;\n  readonly created_at: string;\n  readonly updated_at: string;\n  readonly deleted_at: string | null;\n  readonly login: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserInsightRepo.html":{"url":"interfaces/DbUserInsightRepo.html","title":"interface - DbUserInsightRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserInsightRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            insight_id\n                                        \n                                \n                                \n                                        \n                                            repo_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insight_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        insight_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRepo\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, Repository, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getRepo from \"./gql/get-repo\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async getRepo (owner: string, repo: string) {\n    const { query, variables } = getRepo(owner, repo);\n\n    const { repository } = await this.graphqlWithAuth(query, variables);\n\n    return repository;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HighlightCardController.html":{"url":"controllers/HighlightCardController.html","title":"controller - HighlightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HighlightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHighlightSocialCard\n                            \n                            \n                                    Async\n                                generateHighlightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getHighlightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Highlight social card image is up to date', status: undefined})@ApiResponse({description: 'Highlight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Highlight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid highlight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateHighlightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Highlight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid highlight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, ParseIntPipe, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { HighlightCardService } from \"./highlight-card.service\";\n\n\n@Controller(\"highlights\")\n@ApiTags(\"Highlight social cards\")\nexport class HighlightCardController {\n  constructor (\n    private readonly highlightCardService: HighlightCardService,\n  ) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateHighlightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Highlight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\" })\n  @Redirect()\n  async generateHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.highlightCardService.getHighlightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getHighlightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Highlight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Highlight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Highlight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\", status: HttpStatus.BAD_REQUEST })\n  async checkHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightCardData.html":{"url":"interfaces/HighlightCardData.html","title":"interface - HighlightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HighlightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            reactions\n                                        \n                                \n                                \n                                        \n                                            repo\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo:     Repository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\n\ninterface HighlightCardData {\n  title: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`),\n    );\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`),\n    );\n    const reactions = reactionsReq.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HighlightCardModule.html":{"url":"modules/HighlightCardModule.html","title":"module - HighlightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    HighlightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_HighlightCardModule_imports\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HighlightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HighlightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardService } from \"../highlight-card/highlight-card.service\";\nimport { HighlightCardController } from \"./highlight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [HighlightCardService],\n  controllers: [HighlightCardController],\n})\nexport class HighlightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HighlightCardService.html":{"url":"injectables/HighlightCardService.html","title":"injectable - HighlightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HighlightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getHighlightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getHighlightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(highlightId: number, highlightData?: HighlightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightData\n                                    \n                                                HighlightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHighlightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getHighlightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightData(highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\n\ninterface HighlightCardData {\n  title: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/user/highlights/${highlightId}`),\n    );\n    const { login, title, highlight: body, updated_at, url } = highlightReq.data;\n\n    const reactionsReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/highlights/${highlightId}/reactions`),\n    );\n    const reactions = reactionsReq.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const user = await this.githubService.getUser(login);\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      title,\n      body,\n      reactions,\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { title, body, reactions, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, title, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = await this.getHighlightData(id);\n      const metadata = await this.s3FileStorageService.getFileMeta(hash);\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InsightCardController.html":{"url":"controllers/InsightCardController.html","title":"controller - InsightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InsightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkInsightSocialCard\n                            \n                            \n                                    Async\n                                generateInsightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getInsightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Insight social card image is up to date', status: undefined})@ApiResponse({description: 'Insight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Insight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid insight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateInsightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Insight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid insight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Header,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Redirect,\n  Res,\n  StreamableFile,\n} from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { InsightCardService } from \"./insight-card.service\";\n\n@Controller(\"insights\")\n@ApiTags(\"Insight social cards\")\nexport class InsightCardController {\n  constructor (private readonly insightCardService: InsightCardService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateInsightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Insight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\" })\n  @Redirect()\n  async generateInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.insightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.insightCardService.getgetInsightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getInsightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Insight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Insight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Insight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\", status: HttpStatus.BAD_REQUEST })\n  async checkInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.insightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? (needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT) : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InsightCardData.html":{"url":"interfaces/InsightCardData.html","title":"interface - InsightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InsightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contributors\n                                        \n                                \n                                \n                                        \n                                            pageName\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contributors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `https://api.opensauced.pizza/v1/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 2)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InsightCardModule.html":{"url":"modules/InsightCardModule.html","title":"module - InsightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    InsightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_imports\n\n\n\ncluster_InsightCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InsightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InsightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\nimport { InsightCardService } from \"./insight-card.service\";\nimport { InsightCardController } from \"./insight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [InsightCardService],\n  controllers: [InsightCardController],\n})\nexport class InsightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightCardService.html":{"url":"injectables/InsightCardService.html","title":"injectable - InsightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getgetInsightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getInsightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(insightId: number, insightData?: InsightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightData\n                                    \n                                                InsightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getgetInsightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getgetInsightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getInsightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInsightData(insightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`https://api.opensauced.pizza/v1/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `https://api.opensauced.pizza/v1/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 2)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequiresUpdateMeta.html":{"url":"interfaces/RequiresUpdateMeta.html","title":"interface - RequiresUpdateMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequiresUpdateMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            hasFile\n                                        \n                                \n                                \n                                        \n                                            lastModified\n                                        \n                                \n                                \n                                        \n                                            needsUpdate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasFile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastModified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastModified:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsUpdate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(\n        repo => !repo?.isPrivate && repo?.owner.login !== username,\n      ) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                getFileMeta\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileMeta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileMeta(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string, metadata?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileMeta (hash: string): Promise | null> {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.Metadata ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n    metadata?: Record,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n        Metadata: metadata,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserCardController.html":{"url":"controllers/UserCardController.html","title":"controller - UserCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserSocialCard\n                            \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/metadata')@ApiOperation({operationId: 'getUserSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :username'})@ApiNoContentResponse({description: 'User social card image is up to date', status: undefined})@ApiResponse({description: 'User social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'User social card image not found', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\n\nimport { UserCardService } from \"./user-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class UserCardController {\n  constructor (\n    private readonly userCardService: UserCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.userCardService.getUserCard(sanitizedUsername);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:username/metadata\")\n  @ApiOperation({\n    operationId: \"getUserSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :username\",\n  })\n  @ApiNoContentResponse({ description: \"User social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"User social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"User social card image not found\", status: HttpStatus.NOT_FOUND })\n  async checkUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCardData.html":{"url":"interfaces/UserCardData.html","title":"interface - UserCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            formattedName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     Repository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(\n        repo => !repo?.isPrivate && repo?.owner.login !== username,\n      ) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserCardModule.html":{"url":"modules/UserCardModule.html","title":"module - UserCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UserCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_imports\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/user-card/user-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { UserCardService } from \"./user-card.service\";\nimport { UserCardController } from \"./user-card.controller\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [UserCardService],\n  controllers: [UserCardController],\n})\nexport class UserCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserCardService.html":{"url":"injectables/UserCardService.html","title":"injectable - UserCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Private\n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(username: string, userData?: UserCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UserCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(\n        repo => !repo?.isPrivate && repo?.owner.login !== username,\n      ) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.1.2-beta.1 (2023-06-06)\n🐛 Bug Fixes\n\nremove issue templates (#49) (778ad4e)\n\n2.1.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.1-beta.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.0 (2023-05-09)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\nhiglight card upload & storage (#39) (b6abefa)\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.6 (2023-05-09)\n🍕 Features\n\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.5 (2023-05-05)\n🍕 Features\n\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\n\n2.1.0-beta.4 (2023-05-04)\n🍕 Features\n\nhiglight card upload & storage (#39) (b6abefa)\n\n2.1.0-beta.3 (2023-05-02)\n🍕 Features\n\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\n\n2.1.0-beta.2 (2023-04-30)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n2.1.0-beta.1 (2023-04-26)\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\n\n2.0.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.2 (2023-04-19)\n🐛 Bug Fixes\n\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\n\n2.0.0 (2023-04-11)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\nimplement no-content verification strategy (6efe0e6)\noptimize image loading and return errors (7c6f199), closes #17\n\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\ncorrect dark logo render and make it static (dc9f3a4)\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect server generation environment (68d0202)\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\nupdate graphql types (f7db713)\n\n2.0.0-beta.3 (2023-04-11)\n🤖 Build System\n\nupdate graphql types (f7db713)\n\n2.0.0-beta.2 (2023-04-11)\n🐛 Bug Fixes\n\ncorrect dark logo render and make it static (dc9f3a4)\n\n2.0.0-beta.1 (2023-04-10)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🐛 Bug Fixes\n\ncorrect server generation environment (68d0202)\n\n1.2.0-beta.10 (2023-04-10)\n🐛 Bug Fixes\n\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\n\n1.2.0-beta.9 (2023-04-10)\n🍕 Features\n\noptimize image loading and return errors (7c6f199), closes #17\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\n\n1.2.0-beta.8 (2023-04-09)\n🍕 Features\n\nimplement no-content verification strategy (6efe0e6)\n\n🐛 Bug Fixes\n\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n1.2.0-beta.7 (2023-04-09)\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n1.2.0-beta.6 (2023-04-09)\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\n\n1.2.0-beta.5 (2023-04-09)\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n🐛 Bug Fixes\n\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\n\n1.2.0-beta.4 (2023-04-08)\n🍕 Features\n\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbInsight\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbUserInsightRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/github/entities/db-reaction.entity.ts\n            \n            interface\n            DbReaction\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/github/entities/db-repos.entity.ts\n            \n            interface\n            DbRepo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/github/entities/db-user-highlight.entity.ts\n            \n            interface\n            DbUserHighlight\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/github/gql/get-repo.ts\n            \n            variable\n            getRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.controller.ts\n            \n            controller\n            HighlightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            injectable\n            HighlightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            interface\n            HighlightCardData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.controller.ts\n            \n            controller\n            InsightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            injectable\n            InsightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            interface\n            InsightCardData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/templates/highlight-card.template.ts\n            \n            variable\n            highlightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/insight-card.template.ts\n            \n            variable\n            insightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            cardFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            heartIconData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-style-setup.ts\n            \n            variable\n            cardStyleSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-contributors.ts\n            \n            variable\n            insightContributors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-footer.ts\n            \n            variable\n            insightFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-repos.ts\n            \n            variable\n            insightRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/tailwind.config.ts\n            \n            variable\n            tailwindConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.template.ts\n            \n            variable\n            userProfileCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.controller.ts\n            \n            controller\n            UserCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            injectable\n            UserCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            RequiresUpdateMeta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            UserCardData\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n  \n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n  \n  \n  \n  \n  \n  \n  \n\n\n🚀 Live release environments\nProduction (main)\n\nopengraph@digital-ocean.app\nopengraph.opensauced\n\nBeta (beta)\n\nopengraph-beta@digital-ocean.app\nbeta.opengraph.opensauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\n node>=18.15.0\n npm>=9.6.3\n docker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:devLocal dev scripts\nThere are a few scripts that can be used to generate and test the social cards locally without having to deploy to the CDN. This is the way to go when developing & testing the interface for the social cards.\nGenerating user profile cards:\nnpm run local-dev:usercards\nGenerates user cards for all users in the test array inside test/local-dev/UserCards.ts and outputs them in dist/local-dev/ for testing.\n\n📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nOne can reverse engineer the named configs but some need a little explanation.\nBoilerplate, changed mostly locally:\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************\n\n# DigitalOcean Spaces through aws-sdk configuration\nDO_SPACES_ACCESS_KEY_ID=********************\nDO_SPACES_SECRET_ACCESS_KEY=*******************************************Ping @open-sauced/maintainers to get the dev CDN keys for the DO_SPACES_* variables.\nOther Digital Ocean S3 variables are sensibly set to default for local development, here are the defauls:\nDO_SPACES_ENDPOINT=digitaloceanspaces.com\nDO_SPACES_REGION=sfo3\nDO_SPACES_BUCKET_NAME=opengraph-devIt is also advised to set the following variables to true to avoid using the cached CDN during development:\nDO_SPACES_CDN_DISABLED=trueIf using a custom domain, you can set the following variable to the domain name:\nDO_SPACES_SUBDOMAIN=beta.opengraph-cdn.opensauced.pizzaOther API defaults you can change are not required in local development, but can sometimes appear configured differently for production:\nAPI_HOST=0.0.0.0\nAPI_PORT=3005\nAPI_DOMAIN=opengraph.opensauced.pizza\nMEMORY_HEAP=200\nMEMORY_RSS=3000\nDISK_PERCENTAGE=0.7\nDISK_SIZE=100🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-check In order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HighlightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InsightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.1.2-beta.1\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            cardFooter   (src/.../card-footer.ts)\n                        \n                        \n                            cardStyleSetup   (src/.../card-style-setup.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            getRepo   (src/.../get-repo.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            heartIconData   (src/.../card-footer.ts)\n                        \n                        \n                            highlightCardTemplate   (src/.../highlight-card.template.ts)\n                        \n                        \n                            insightCardTemplate   (src/.../insight-card.template.ts)\n                        \n                        \n                            insightContributors   (src/.../insight-contributors.ts)\n                        \n                        \n                            insightFooter   (src/.../insight-footer.ts)\n                        \n                        \n                            insightRepos   (src/.../insight-repos.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            tailwindConfig   (src/.../tailwind.config.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCardTemplate   (src/.../user-profile-card.template.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: string, repos: string, reactions?: number) => `\n    \n      \n        \n          ${repos}\n        \n\n        ${\n  reactions\n    ? `\n          \n            \n            \n              ${reactions} Reactions\n            \n          \n        `\n    : \"\"\n}\n      \n\n      \n        \n          ${langs}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heartIconData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M6.73649 2.5C3.82903 2.5 1 5.052 1 8.51351C1 12.3318 3.80141 15.5735 6.38882 17.7763C7.70549 18.8973 9.01844 19.7929 10.0004 20.4077C10.4922 20.7157 10.9029 20.9544 11.1922 21.1169C11.4093 21.2388 11.5582 21.318 11.6223 21.3516C11.7407 21.4132 11.8652 21.4527 12 21.4527C12.1193 21.4527 12.2378 21.4238 12.3438 21.3693C12.5003 21.2886 12.6543 21.2031 12.8078 21.1169C13.0971 20.9544 13.5078 20.7157 13.9996 20.4077C14.9816 19.7929 16.2945 18.8973 17.6112 17.7763C20.1986 15.5735 23 12.3318 23 8.51351C23 5.052 20.171 2.5 17.2635 2.5C14.9702 2.5 13.1192 3.72621 12 5.60482C10.8808 3.72621 9.02981 2.5 6.73649 2.5ZM6.73649 4C4.65746 4 2.5 5.88043 2.5 8.51351C2.5 11.6209 4.8236 14.4738 7.36118 16.6342C8.60701 17.6948 9.85656 18.5479 10.7965 19.1364C11.2656 19.4301 11.6557 19.6567 11.9269 19.8091L12 19.85L12.0731 19.8091C12.3443 19.6567 12.7344 19.4301 13.2035 19.1364C14.1434 18.5479 15.393 17.6948 16.6388 16.6342C19.1764 14.4738 21.5 11.6209 21.5 8.51351C21.5 5.88043 19.3425 4 17.2635 4C15.1581 4 13.4627 5.38899 12.7115 7.64258C12.6094 7.94883 12.3228 8.15541 12 8.15541C11.6772 8.15541 11.3906 7.94883 11.2885 7.64258C10.5373 5.38899 8.84185 4 6.73649 4Z' fill='%2324292F'/%3e%3c/svg%3e`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-style-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardStyleSetup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  \n    div {\n      display: flex;\n    }\n  \n`\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRepo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (owner: string, repo: string) => ({\n  query: `\nquery ($owner: String!, $repo: String!) {\n  repository(\n    owner: $owner\n    name: $repo\n  ) {\n    id\n    name\n    databaseId\n    nameWithOwner\n    owner {\n      id\n      login\n      avatarUrl\n    }\n    languages (first: 100, orderBy: { field: SIZE, direction: DESC }) {\n      edges {\n        node {\n          id\n          color\n          name\n        }\n        size\n      }\n      totalSize\n      totalCount\n    }\n  }\n}`,\n  variables: {\n    owner,\n    repo,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/highlight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  avatarUrl: string,\n  title: string,\n  body: string,\n  langs: string,\n  repos: string,\n  reactions: number,\n): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n      \n\n      \n        \n          ${title.length > 50 ? `${title.slice(0, 50)}...` : title}\n        \n        \n          ${body.length > 108 ? `${body.slice(0, 108)}...` : body}\n        \n      \n\n      \n        \n      \n    \n\n    ${cardFooter(langs, repos, reactions)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/insight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (pageName: string, contributors: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          ${pageName}: Insights\n        \n      \n    \n\n    ${insightFooter(contributors, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-contributors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightContributors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string[]): string => {\n  const repoList = contributors.map(\n    contributor => ``,\n  );\n\n  return `${repoList.slice(0, 5).join(\"\")}${\n    repoList.length > 5\n      ? `+${\n        repoList.length - 5\n      }`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string, repos: string) => `\n    \n      \n        \n          ${repos}\n        \n        \n           \n        \n      \n\n      \n        \n          ${contributors}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: { repoName: string; avatarUrl: string }[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 15;\n  const repoList = repos.map(({ repoName, avatarUrl }) =>\n    repoIconWithName(\n      `${repoName.substring(0, charLimit).replace(/\\.+$/, \"\")}${repoName.length > charLimit ? \"...\" : \"\"}`,\n      `${String(avatarUrl)}&size=40`,\n    ));\n\n  return `${repoList.slice(0, limit).join(\"\")}${\n    repoList.length > limit\n      ? `+${repoList.length - limit}`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n  \n    \n      \n      \n        \n          ${name}\n        \n      \n    \n  \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/tailwind.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tailwindConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  theme: {\n    extend: {\n      screens: {\n        xs: \"425px\",\n\n        // => @media (min-width: 425px) { ... }\n\n        \"2xl\": \"1440px\",\n\n        // => @media (min-width: 1440px) { ... }\n      },\n      blur: { \"4xl\": \"5rem\" },\n      spacing: {\n        \"6px\": \"6px\",\n        \"8px\": \"8px\",\n        \"12px\": \"12px\",\n        \"16px\": \"16px\",\n        \"32px\": \"32px\",\n        \"48px\": \"48px\",\n        \"58px\": \"58px\",\n        \"96px\": \"96px\",\n        \"134px\": \"134px\",\n        \"627px\": \"627px\",\n        \"1200px\": \"1200px\",\n      },\n      colors: {\n        sauced: { orange: \"hsla(19, 100%, 50%, 1)\" },\n        gradient: {\n          \"dark-two\": \"hsl(26, 54%, 15%)\",\n          \"dark-one\": \"hsl(23, 75%, 5%)\",\n          \"orange-one\": \"\thsl(33, 100%, 50%)\",\n          \"orange-two\": \"\thsl(19, 100%, 50%)\",\n        },\n        light: {\n          slate: {\n            1: \"hsl(206, 30.0%, 98.8%)\",\n            2: \"hsl(210, 16.7%, 97.6%)\",\n            3: \"hsl(209, 13.3%, 95.3%)\",\n            4: \"hsl(209, 12.2%, 93.2%)\",\n            5: \"hsl(208, 11.7%, 91.1%)\",\n            6: \"hsl(208, 11.3%, 88.9%)\",\n            7: \"hsl(207, 11.1%, 85.9%)\",\n            8: \"hsl(205, 10.7%, 78.0%)\",\n            9: \"hsl(206, 6.0%, 56.1%)\",\n            10: \"hsl(206, 5.8%, 52.3%)\",\n            11: \"hsl(206, 6.0%, 43.5%)\",\n            12: \"hsl(206, 24.0%, 9.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(210, 92.6%, 26.5%, 0.016)\",\n            2: \"hsla(210, 87.7%, 16.0%, 0.028)\",\n            3: \"hsla(210, 98.8%, 14.4%, 0.055)\",\n            4: \"hsla(210, 94.1%, 11.1%, 0.075)\",\n            5: \"hsla(216, 91.1%, 10.9%, 0.099)\",\n            6: \"hsla(206, 96.4%, 11.3%, 0.126)\",\n            7: \"hsla(210, 99.1%, 10.1%, 0.157)\",\n            8: \"hsla(205, 96.5%, 10.0%, 0.244)\",\n            9: \"hsla(206, 98.8%, 5.9%, 0.467)\",\n            10: \"hsla(206, 99.6%, 5.4%, 0.506)\",\n            11: \"hsla(206, 97.0%, 4.8%, 0.593)\",\n            12: \"hsla(202, 97.0%, 2.4%, 0.934)\",\n          },\n          orange: {\n            1: \"hsl(24, 70.0%, 99.0%)\",\n            2: \"hsl(24, 83.3%, 97.6%)\",\n            3: \"hsl(24, 100%, 95.3%)\",\n            4: \"hsl(25, 100%, 92.2%)\",\n            5: \"hsl(25, 100%, 88.2%)\",\n            6: \"hsl(25, 100%, 82.8%)\",\n            7: \"hsl(24, 100%, 75.3%)\",\n            8: \"hsl(24, 94.5%, 64.3%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 46.5%)\",\n            11: \"hsl(24, 100%, 37.0%)\",\n            12: \"hsl(15, 60.0%, 17.0%)\",\n          },\n          blue: {\n            1: \"hsl(206, 100%, 99.2%)\",\n            2: \"hsl(210, 100%, 98.0%)\",\n            3: \"hsl(209, 100%, 96.5%)\",\n            4: \"hsl(210, 98.8%, 94.0%)\",\n            5: \"hsl(209, 95.0%, 90.1%)\",\n            6: \"hsl(209, 81.2%, 84.5%)\",\n            7: \"hsl(208, 77.5%, 76.9%)\",\n            8: \"hsl(206, 81.9%, 65.3%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(208, 100%, 47.3%)\",\n            11: \"hsl(211, 100%, 43.2%)\",\n            12: \"hsl(211, 100%, 15.0%)\",\n          },\n          red: {\n            1: \"hsl(359, 100%, 99.4%)\",\n            2: \"hsl(359, 100%, 98.6%)\",\n            3: \"hsl(360, 100%, 96.8%)\",\n            4: \"hsl(360, 97.9%, 94.8%)\",\n            5: \"hsl(360, 90.2%, 91.9%)\",\n            6: \"hsl(360, 81.7%, 87.8%)\",\n            7: \"hsl(359, 74.2%, 81.7%)\",\n            8: \"hsl(359, 69.5%, 74.3%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 69.4%, 55.2%)\",\n            11: \"hsl(358, 65.0%, 48.7%)\",\n            12: \"hsl(354, 50.0%, 14.6%)\",\n          },\n          grass: {\n            1: \"hsl(116, 50.0%, 98.9%)\",\n            2: \"hsl(120, 60.0%, 97.1%)\",\n            3: \"hsl(120, 53.6%, 94.8%)\",\n            4: \"hsl(121, 47.5%, 91.4%)\",\n            5: \"hsl(122, 42.6%, 86.5%)\",\n            6: \"hsl(124, 39.0%, 79.7%)\",\n            7: \"hsl(126, 37.1%, 70.2%)\",\n            8: \"hsl(131, 38.1%, 56.3%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(132, 43.1%, 42.2%)\",\n            11: \"hsl(133, 50.0%, 32.5%)\",\n            12: \"hsl(130, 30.0%, 14.9%)\",\n          },\n        },\n        dark: {\n          slate: {\n            1: \"hsl(200, 7.0%, 8.8%)\",\n            2: \"hsl(195, 7.1%, 11.0%)\",\n            3: \"hsl(197, 6.8%, 13.6%)\",\n            4: \"hsl(198, 6.6%, 15.8%)\",\n            5: \"hsl(199, 6.4%, 17.9%)\",\n            6: \"hsl(201, 6.2%, 20.5%)\",\n            7: \"hsl(203, 6.0%, 24.3%)\",\n            8: \"hsl(207, 5.6%, 31.6%)\",\n            9: \"hsl(206, 6.0%, 43.9%)\",\n            10: \"hsl(206, 5.2%, 49.5%)\",\n            11: \"hsl(206, 6.0%, 63.0%)\",\n            12: \"hsl(210, 6.0%, 93.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(0, 0%, 0%, 0)\",\n            2: \"hsla(181, 98.9%, 91.8%, 0.026)\",\n            3: \"hsla(182, 86.7%, 91.4%, 0.057)\",\n            4: \"hsla(209, 86.7%, 93.9%, 0.083)\",\n            5: \"hsla(200, 90.3%, 93.4%, 0.109)\",\n            6: \"hsla(209, 95.3%, 93.5%, 0.139)\",\n            7: \"hsla(204, 98.5%, 93.9%, 0.182)\",\n            8: \"hsla(209, 94.0%, 94.7%, 0.265)\",\n            9: \"hsla(207, 97.3%, 94.0%, 0.412)\",\n            10: \"hsla(209, 99.4%, 95.2%, 0.472)\",\n            11: \"hsla(208, 98.7%, 96.8%, 0.615)\",\n            12: \"hsla(211, 86.7%, 99.6%, 0.927)\",\n          },\n          orange: {\n            1: \"hsl(30, 70.0%, 7.2%)\",\n            2: \"hsl(28, 100%, 8.4%)\",\n            3: \"hsl(26, 91.1%, 11.6%)\",\n            4: \"hsl(25, 88.3%, 14.1%)\",\n            5: \"hsl(24, 87.6%, 16.6%)\",\n            6: \"hsl(24, 88.6%, 19.8%)\",\n            7: \"hsl(24, 92.4%, 24.0%)\",\n            8: \"hsl(25, 100%, 29.0%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 58.5%)\",\n            11: \"hsl(24, 100%, 62.2%)\",\n            12: \"hsl(24, 97.0%, 93.2%)\",\n          },\n          blue: {\n            1: \"hsl(212, 35.0%, 9.2%)\",\n            2: \"hsl(216, 50.0%, 11.8%)\",\n            3: \"hsl(214, 59.4%, 15.3%)\",\n            4: \"hsl(214, 65.8%, 17.9%)\",\n            5: \"hsl(213, 71.2%, 20.2%)\",\n            6: \"hsl(212, 77.4%, 23.1%)\",\n            7: \"hsl(211, 85.1%, 27.4%)\",\n            8: \"hsl(211, 89.7%, 34.1%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(209, 100%, 60.6%)\",\n            11: \"hsl(210, 100%, 66.1%)\",\n            12: \"hsl(206, 98.0%, 95.8%)\",\n          },\n          red: {\n            1: \"hsl(353, 23.0%, 9.8%)\",\n            2: \"hsl(357, 34.4%, 12.0%)\",\n            3: \"hsl(356, 43.4%, 16.4%)\",\n            4: \"hsl(356, 47.6%, 19.2%)\",\n            5: \"hsl(356, 51.1%, 21.9%)\",\n            6: \"hsl(356, 55.2%, 25.9%)\",\n            7: \"hsl(357, 60.2%, 31.8%)\",\n            8: \"hsl(358, 65.0%, 40.4%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 85.3%, 64.0%)\",\n            11: \"hsl(358, 100%, 69.5%)\",\n            12: \"hsl(351, 89.0%, 96.0%)\",\n          },\n          grass: {\n            1: \"hsl(146, 30.0%, 7.4%)\",\n            2: \"hsl(136, 33.3%, 8.8%)\",\n            3: \"hsl(137, 36.0%, 11.4%)\",\n            4: \"hsl(137, 37.6%, 13.7%)\",\n            5: \"hsl(136, 38.7%, 16.0%)\",\n            6: \"hsl(135, 39.6%, 19.1%)\",\n            7: \"hsl(134, 40.3%, 23.8%)\",\n            8: \"hsl(131, 40.1%, 30.8%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(131, 39.0%, 52.1%)\",\n            11: \"hsl(131, 43.0%, 57.2%)\",\n            12: \"hsl(137, 72.0%, 94.0%)\",\n          },\n        },\n      },\n      boxShadow: {\n        login: \"0px 64px 100px -80px #FF5F13, 0px 16px 56px rgba(181, 107, 72, 0.19)\",\n        superlative: \"0px 22px 24px -8px rgba(0, 0, 0, 0.05), 0px 4px 8px rgba(0, 0, 0, 0.1)\",\n        paginate: \"0px 1px 2px rgba(237, 95, 0, 0.05), 0px 1px 1px rgba(237, 95, 0, 0.05)\",\n        input: \"0px 1px 2px rgba(17, 24, 28, 0.05), 0px 1px 1px rgba(17, 24, 28, 0.05)\",\n      },\n      backgroundImage: { \"gradient-radial\": \"radial-gradient(var(--tw-gradient-stops))\" },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & { size: number })[], totalCount = 0, joinLiteral = \"\") => {\n  const filteredLangs = langs\n    .filter(({ size }) => size > 0 && (size / totalCount) * 100 >= 0.5);\n\n  return filteredLangs\n    .map(({ color, size }) => {\n      const realPercent = size / totalCount * 100;\n\n      return ` 0 ? realPercent : 100 / filteredLangs.length}%\"/>`;\n    })\n    .join(joinLiteral);\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n\n      \n        ${name}\n      \n\n      \n    \n\n    ${cardFooter(langs, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 15;\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(`${name.substring(0, charLimit).replace(/\\.+$/, \"\")}${name.length > charLimit ? \"...\" : \"\"}`, `${String(avatarUrl)}&size=40`));\n\n  return `${repoList.slice(0, limit).join(\"\")}${repoList.length > limit\n    ? `+${repoList.length - limit}`\n    : ``}`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
