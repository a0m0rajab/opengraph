var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.586,1,1.58]],["body/modules/AppModule.html",[0,0.749,1,2.838,2,0.837,3,1.522,4,2.034,5,2.034,6,2.046,7,0.054,8,2.351,9,1.748,10,1.263,11,0.959,12,0.541,13,0.541,14,0.61,15,2.533,16,2.005,17,1.273,18,2.533,19,0.63,20,3.507,21,3.23,22,1.459,23,2.816,24,1.705,25,2.816,26,1.705,27,2.533,28,2.533,29,3.507,30,2.533,31,2.533,32,2.533,33,2.36,34,2.533,35,2.02,36,2.034,37,2.02,38,2.034,39,2.034,40,1.459,41,1.263,42,2.533,43,1.099,44,1.099,45,2.034,46,2.533,47,2.533,48,2.533,49,3.486,50,2.533,51,1.705,52,2.533,53,2.034,54,2.533,55,0.959,56,2.533,57,2.533,58,2.533,59,2.533,60,2.533,61,2.533,62,2.533,63,2.533,64,2.533,65,2.533,66,2.533,67,2.533,68,2.533,69,2.533,70,2.533,71,2.533,72,2.533,73,2.533,74,2.533,75,2.034,76,2.533,77,2.533,78,2.533,79,1.459,80,1.705,81,1.099,82,1.459,83,0.63,84,0.63,85,0.034,86,0.034]],["title/modules/GithubModule.html",[0,0.586,87,1.367]],["body/modules/GithubModule.html",[0,0.928,2,1.159,3,1.885,7,0.053,9,2.165,10,1.749,11,1.329,12,0.75,13,0.75,14,0.533,16,1.749,17,1.081,19,0.873,82,2.502,83,0.873,84,0.873,85,0.042,86,0.042,87,2.608,88,2.818,89,2.818,90,2.818,91,2.351,92,3.51,93,3.487,94,3.51]],["title/injectables/GithubService.html",[91,1.19,95,1.039]],["body/injectables/GithubService.html",[7,0.054,12,0.505,13,0.505,14,0.359,17,1.148,19,0.589,22,1.363,35,2.233,36,1.899,51,1.592,55,1.266,83,0.589,84,0.589,85,0.033,86,0.033,91,1.451,95,1.266,96,1.363,97,1.899,98,0.782,99,1.667,100,2.058,101,2.364,102,3.878,103,3.383,104,1.667,105,2.3,106,2.836,107,4.845,108,1.667,109,2.366,110,3.383,111,2.216,112,3.344,113,1.926,114,1.451,115,1.667,116,3.344,117,1.933,118,2.366,119,1.926,120,1.667,121,1.926,122,2.366,123,1.899,124,1.179,125,1.179,126,1.829,127,3.344,128,2.366,129,2.684,130,2.684,131,2.427,132,1.899,133,2.366,134,2.366,135,2.366,136,2.366,137,2.366,138,2.366,139,2.366,140,2.366,141,2.366,142,2.216,143,1.899,144,1.899,145,1.899,146,1.899,147,1.899,148,1.899,149,1.899,150,1.926,151,2.366,152,1.926,153,2.366,154,1.266,155,2.366,156,3.344,157,2.366,158,1.899,159,2.366,160,2.366,161,2.366]],["title/controllers/HealthController.html",[162,1.367,163,1.58]],["body/controllers/HealthController.html",[7,0.054,12,0.487,13,0.487,14,0.346,17,1.031,19,0.567,21,3.051,22,1.313,26,1.535,75,1.831,79,1.876,80,2.95,81,0.99,83,0.567,84,0.567,85,0.032,86,0.032,98,0.753,100,1.978,101,1.137,104,1.624,105,2.61,108,1.137,111,1.624,120,1.624,123,2.615,154,1.234,162,1.137,163,1.876,164,1.831,165,1.831,166,4.56,167,4.694,168,4.56,169,2.615,170,2.281,171,3.258,172,3.328,173,1.799,174,2.066,175,3.258,176,2.281,177,2.281,178,3.258,179,2.281,180,3.258,181,3.258,182,3.258,183,3.8,184,3.258,185,3.258,186,3.051,187,3.051,188,1.831,189,1.831,190,2.281,191,2.281,192,2.281,193,2.281,194,2.281,195,2.281,196,2.615,197,3.258,198,3.258,199,2.281,200,2.281,201,2.281,202,2.281,203,2.281,204,2.281,205,3.258,206,2.281,207,2.281,208,2.281,209,2.281,210,2.281,211,2.281,212,2.281,213,2.281,214,2.281,215,2.281,216,2.281,217,2.281,218,2.281,219,2.281,220,2.281,221,2.281]],["title/modules/HealthModule.html",[0,0.586,222,1.846]],["body/modules/HealthModule.html",[0,0.971,2,1.249,7,0.053,12,0.808,13,0.808,14,0.574,16,1.885,17,1.213,19,0.941,25,3.65,26,2.545,81,1.973,83,0.941,84,0.941,85,0.044,86,0.044,163,2.807,222,3.059,223,3.782,224,3.782]],["title/modules/S3FileStorageModule.html",[0,0.586,6,1.19]],["body/modules/S3FileStorageModule.html",[0,0.917,2,1.137,3,1.862,6,2.261,7,0.053,9,2.139,10,1.716,11,1.304,12,0.735,13,0.735,14,0.743,16,1.716,17,1.068,19,0.856,43,1.494,44,1.494,82,2.472,83,0.856,84,0.856,85,0.042,86,0.042,93,3.446,225,2.764,226,2.764,227,2.764,228,2.345,229,2.316,230,3.442,231,2.764]],["title/injectables/S3FileStorageService.html",[95,1.039,228,1.19]],["body/injectables/S3FileStorageService.html",[7,0.054,12,0.371,13,0.371,14,0.763,17,0.974,19,0.432,22,1.001,37,1.001,38,1.395,39,1.395,43,1.405,44,1.925,49,1.395,51,1.17,53,2.139,55,1.375,83,0.432,84,0.432,85,0.026,86,0.026,95,1.009,96,1.001,98,0.574,99,1.328,100,1.575,101,1.809,104,1.328,105,2.266,108,1.328,110,2.915,111,2.143,113,2.091,114,1.699,115,1.809,117,2.443,120,1.614,121,2.378,124,1.328,125,1.328,126,1.575,142,0.866,152,1.865,154,1.375,228,1.156,229,2.985,232,1.395,233,4.299,234,3.239,235,3.239,236,4.13,237,3.239,238,3.239,239,3.239,240,1.738,241,1.738,242,1.738,243,1.738,244,3.726,245,1.738,246,1.738,247,1.738,248,3.239,249,3.631,250,3.915,251,1.738,252,3.239,253,1.738,254,1.738,255,1.738,256,3.239,257,2.664,258,1.738,259,1.738,260,1.738,261,1.738,262,1.738,263,1.738,264,1.738,265,1.738,266,1.738,267,1.738,268,1.738,269,1.738,270,2.664,271,1.395,272,1.738,273,1.395,274,1.738,275,1.738,276,1.738,277,1.395,278,1.738,279,1.395,280,1.738,281,2.664,282,3.239,283,3.239,284,3.239,285,3.239,286,2.664,287,4.435,288,2.664,289,2.664,290,2.664,291,2.664,292,1.738,293,1.738,294,2.664,295,1.738,296,1.738,297,1.738,298,1.738]],["title/controllers/SocialCardController.html",[162,1.367,299,1.58]],["body/controllers/SocialCardController.html",[7,0.053,12,0.582,13,0.582,14,0.414,17,1.04,19,0.678,40,2.579,41,1.838,55,1.032,81,1.183,83,0.678,84,0.678,85,0.036,86,0.036,98,0.901,100,1.183,101,1.359,104,1.838,105,2.083,108,1.359,111,1.359,113,1.57,114,1.943,115,1.359,117,2.083,119,2.579,120,1.359,121,2.124,126,1.6,131,2.124,142,1.359,152,1.57,154,1.032,162,1.359,165,2.189,169,2.189,172,2.961,186,2.961,187,2.961,188,2.189,189,2.189,196,2.189,299,2.124,300,1.838,301,2.189,302,2.726,303,4.678,304,2.726,305,2.726,306,3.688,307,3.688,308,2.961,309,3.688,310,2.124,311,3.688,312,3.688,313,2.726,314,2.726,315,2.726,316,2.726,317,2.726,318,2.726,319,2.726,320,3.688,321,3.688,322,3.688,323,1.814,324,2.189,325,2.726,326,2.726,327,2.189,328,2.726,329,2.726,330,2.726,331,2.189,332,2.189,333,2.189,334,2.726,335,2.482,336,2.726]],["title/modules/SocialCardModule.html",[0,0.586,8,1.367]],["body/modules/SocialCardModule.html",[0,0.86,2,1.028,3,1.747,6,2.172,7,0.053,8,2.622,9,2.007,10,1.552,11,1.179,12,0.665,13,0.665,14,0.677,16,2.007,17,1.245,19,0.774,23,3.233,24,2.095,40,2.319,41,1.552,43,1.351,44,1.351,45,2.499,81,1.747,82,2.319,83,0.774,84,0.774,85,0.039,86,0.039,87,2.495,299,2.57,300,1.552,323,2.172,324,2.499,337,2.499,338,3.113,339,2.499,340,3.113,341,3.113,342,3.113]],["title/injectables/SocialCardService.html",[95,1.039,323,1.19]],["body/injectables/SocialCardService.html",[7,0.054,12,0.367,13,0.367,14,0.488,17,1.151,19,0.428,24,1.157,41,1.941,43,1.566,44,0.746,55,1.557,83,0.428,84,0.428,85,0.026,86,0.026,91,1.858,95,1,96,0.99,98,0.568,99,1.316,100,1.784,101,2.049,103,2.897,104,1.316,105,2.049,108,1.316,111,1.799,113,1.852,114,1.396,115,1.603,117,2.049,119,2.466,120,1.316,121,2.078,124,0.857,125,0.857,126,1.784,130,1.38,131,1.521,132,1.38,142,2.381,143,1.38,144,1.38,145,2.12,146,1.38,147,1.38,148,1.38,152,2.243,154,1.218,158,2.12,228,1.858,231,1.38,244,1.38,300,1.941,310,0.99,323,1.146,331,1.38,343,1.38,344,3.216,345,3.216,346,1.719,347,4.112,348,2.641,349,1.719,350,1.719,351,1.719,352,1.719,353,2.641,354,2.641,355,1.719,356,1.719,357,1.852,358,1.38,359,1.719,360,1.719,361,1.157,362,3.216,363,2.582,364,1.157,365,1.521,366,2.12,367,1.157,368,1.719,369,1.719,370,1.719,371,1.719,372,1.719,373,1.719,374,3.609,375,1.157,376,1.719,377,1.719,378,1.719,379,3.216,380,1.719,381,1.719,382,1.719,383,1.38,384,1.719,385,1.38,386,1.719,387,1.719,388,1.719,389,1.719,390,1.719,391,1.719,392,1.38,393,1.719,394,1.719,395,1.719,396,2.641,397,1.719,398,1.719,399,1.719,400,1.719,401,1.157,402,1.38,403,1.719,404,2.641,405,2.641,406,1.719,407,1.719,408,1.719,409,1.719,410,2.641,411,1.719,412,2.641,413,1.719,414,1.38,415,1.719,416,1.719,417,1.719,418,1.38,419,1.719,420,1.719,421,1.38,422,1.719,423,1.719,424,1.38,425,1.719,426,1.719,427,1.38,428,1.719,429,1.719,430,1.719,431,1.719,432,1.719,433,1.719,434,1.719,435,1.719,436,1.719,437,1.719,438,1.38,439,1.38,440,1.719]],["title/changelog.html",[441,1.555,442,1.555,443,1.855]],["body/changelog.html",[0,0.601,3,0.811,7,0.051,14,0.283,43,1.221,55,1.066,79,1.076,85,0.028,86,0.028,114,0.811,125,0.931,126,0.811,129,1.5,131,2.17,154,0.707,173,0.811,308,1.5,310,1.076,327,1.5,333,1.5,335,1.257,365,1.62,401,1.257,402,1.5,421,1.5,424,1.5,439,2.259,443,1.5,444,1.868,445,1.868,446,1.868,447,1.5,448,1.868,449,2.718,450,1.5,451,3.856,452,5.116,453,1.868,454,3.767,455,2.814,456,2.259,457,2.259,458,2.814,459,2.814,460,1.868,461,2.814,462,1.868,463,1.868,464,3.385,465,3.385,466,4.803,467,1.5,468,2.718,469,1.5,470,1.868,471,2.259,472,1.868,473,1.868,474,3.538,475,2.259,476,1.868,477,3.024,478,1.868,479,1.868,480,1.868,481,4.247,482,4.247,483,1.868,484,2.814,485,2.814,486,1.868,487,1.868,488,1.868,489,1.5,490,1.868,491,1.5,492,1.868,493,1.868,494,1.893,495,2.814,496,1.868,497,2.718,498,2.814,499,2.814,500,1.868,501,1.868,502,2.718,503,1.868,504,1.868,505,1.868,506,1.257,507,1.868,508,1.868,509,1.868,510,1.868,511,1.868,512,1.868,513,1.868,514,1.868,515,2.259,516,1.5,517,1.868,518,1.868,519,1.868,520,1.868,521,3.385,522,1.868,523,1.868,524,1.868,525,2.259,526,1.868,527,1.868,528,1.868,529,2.814,530,1.868,531,1.868,532,1.868,533,1.868,534,1.257,535,1.893,536,1.868,537,1.868,538,2.814,539,1.868,540,1.868,541,1.868,542,1.868,543,1.868,544,1.868,545,1.868,546,2.814,547,1.868,548,1.868,549,1.257,550,1.868,551,1.868,552,1.868,553,1.868,554,1.868,555,1.868,556,2.814,557,1.868,558,1.868,559,1.868,560,1.868,561,1.868,562,1.868,563,1.868,564,1.868,565,1.868,566,1.868,567,1.868,568,1.868,569,1.868,570,1.5,571,1.5,572,1.5,573,1.868,574,1.868,575,2.718,576,1.868,577,1.868,578,1.868,579,1.868,580,1.868,581,1.868,582,1.893,583,2.814,584,2.814,585,1.868,586,2.718,587,1.868,588,1.5,589,1.868,590,1.868,591,1.868,592,1.5,593,1.868,594,1.868,595,2.259,596,1.868,597,1.868,598,1.868,599,1.5,600,1.868,601,1.868,602,1.868,603,1.868,604,1.868,605,1.868,606,1.868,607,1.868,608,1.868,609,1.868,610,1.868,611,1.868]],["title/coverage.html",[612,2.973]],["body/coverage.html",[7,0.053,14,0.659,33,1.98,35,1.695,37,1.695,41,1.934,44,1.277,85,0.038,86,0.038,91,1.277,95,1.644,97,2.362,106,1.98,114,1.277,126,1.277,162,1.934,163,1.695,164,2.362,228,1.277,229,1.98,232,2.362,299,1.695,300,2.457,301,2.362,323,1.277,343,2.362,361,1.98,364,1.98,365,2.235,367,1.98,375,3.594,494,1.98,612,2.362,613,2.943,614,2.943,615,2.362,616,5.101,617,5.162,618,2.362,619,2.362,620,2.362,621,2.943,622,2.362,623,2.362,624,2.943,625,2.362,626,2.943,627,2.362,628,2.943,629,2.943,630,2.943,631,2.362,632,2.362,633,2.362,634,2.362,635,3.486,636,2.362,637,2.362,638,2.362,639,2.943,640,2.943]],["title/miscellaneous/functions.html",[549,2.213,641,1.331]],["body/miscellaneous/functions.html",[7,0.047,85,0.047,86,0.047,98,1.37,549,2.79,625,3.329,627,4.067,641,2.388,642,4.147]],["title/index.html",[98,0.763,441,1.555,442,1.555]],["body/index.html",[7,0.051,11,0.89,13,0.502,14,0.357,79,1.354,80,2.828,85,0.033,86,0.033,100,1.02,115,1.171,124,1.171,150,1.917,173,1.998,174,2.21,357,1.917,438,1.887,447,2.672,456,1.887,457,1.887,467,1.887,468,3.373,469,1.887,471,2.672,474,2.672,475,1.887,477,3.102,489,1.887,497,3.102,506,1.582,515,1.887,516,1.887,525,1.887,534,2.24,535,2.6,572,1.887,582,2.24,592,3.102,595,2.672,643,1.582,644,1.887,645,2.35,646,2.35,647,2.35,648,2.35,649,3.864,650,5.045,651,2.35,652,3.102,653,1.887,654,2.35,655,2.35,656,2.35,657,2.35,658,2.35,659,2.35,660,2.35,661,4.735,662,2.35,663,2.35,664,1.887,665,2.35,666,1.887,667,1.887,668,2.35,669,3.328,670,2.35,671,2.35,672,2.35,673,2.35,674,2.35,675,2.35,676,2.35,677,2.35,678,2.35,679,2.35,680,2.35,681,2.35,682,3.328,683,2.35,684,2.35,685,3.864,686,2.35,687,2.35,688,2.35,689,3.328,690,2.35,691,2.35,692,2.35,693,2.35,694,2.35,695,2.35,696,2.35,697,4.202,698,2.35,699,2.35,700,2.35,701,2.672,702,2.35,703,2.35,704,3.328,705,3.328,706,2.672,707,2.35,708,1.887,709,3.328,710,2.35,711,2.35,712,2.35,713,2.35,714,2.35,715,2.35,716,2.35,717,2.35,718,2.35,719,2.35,720,2.35,721,2.35,722,2.35,723,2.35,724,2.35,725,3.328,726,2.35,727,2.35,728,2.35,729,2.35,730,2.35,731,2.35,732,2.35,733,2.35,734,2.35,735,1.354,736,1.582]],["title/license.html",[441,1.555,442,1.555,735,1.331]],["body/license.html",[7,0.039,11,1.182,85,0.039,86,0.039,173,1.355,174,1.556,451,2.507,494,2.101,582,2.715,652,2.507,653,4.191,664,3.239,708,3.239,735,1.798,736,2.101,737,4.469,738,3.122,739,4.034,740,3.122,741,3.122,742,3.122,743,3.122,744,3.122,745,3.122,746,3.122,747,3.122,748,3.122,749,4.469,750,3.122,751,3.122,752,3.122,753,3.122,754,3.122,755,3.122,756,3.122,757,3.122,758,3.122,759,3.122,760,4.034,761,3.122,762,3.122,763,3.122,764,3.122,765,3.122,766,3.122,767,4.034,768,4.034,769,3.122,770,3.122,771,3.122,772,3.122,773,3.122,774,3.122,775,3.122,776,3.122,777,3.122,778,3.122,779,3.122,780,3.122,781,3.122,782,2.507,783,3.122,784,3.122,785,3.122,786,3.122,787,3.122,788,3.122,789,3.122,790,3.122,791,3.122,792,3.122,793,3.122,794,3.122,795,3.122,796,3.122,797,3.122,798,3.122]],["title/modules.html",[2,1.223]],["body/modules.html",[1,2.241,2,1.285,6,1.688,7,0.045,8,1.939,85,0.045,86,0.045,87,1.939,222,2.618,414,4.099,799,5.106,800,5.106,801,5.214,802,3.891,803,3.891]],["title/overview.html",[804,2.973]],["body/overview.html",[1,2.921,2,1.082,3,1.805,4,2.629,5,2.629,6,2.236,7,0.052,8,2.624,9,2.073,10,1.632,11,1.24,81,1.421,85,0.041,86,0.041,87,2.528,88,2.629,89,2.629,90,2.629,91,2.236,96,1.886,225,2.629,226,2.629,227,2.629,228,2.236,323,1.983,337,2.629,339,2.629,401,2.203,588,2.629,804,2.629,805,2.629]],["title/properties.html",[99,1.639,502,1.855]],["body/properties.html",[7,0.053,40,2.14,85,0.044,86,0.044,99,1.852,173,1.613,174,1.852,310,2.14,332,2.983,357,2.14,449,2.983,450,2.983,599,2.983,643,2.501,644,2.983,735,2.14,736,2.501,782,2.983,806,3.716,807,3.716,808,3.716,809,3.716,810,4.499,811,3.716,812,3.716,813,3.716,814,3.716,815,3.716,816,3.716,817,3.716,818,3.716,819,3.716]],["title/miscellaneous/variables.html",[150,1.894,641,1.331]],["body/miscellaneous/variables.html",[7,0.055,12,0.305,33,1.536,35,1.314,37,1.314,55,1.754,85,0.022,86,0.022,98,0.471,106,1.536,117,2.232,119,1.877,124,2.067,125,2.067,142,0.711,149,1.832,150,1.314,154,0.54,173,0.619,174,0.711,271,1.145,273,1.145,277,1.145,279,1.145,300,1.624,335,2.193,357,0.822,358,1.145,361,1.536,363,2.29,364,1.536,365,1.877,366,2.29,367,1.536,375,2.193,383,2.861,385,3.052,392,3.204,418,1.145,427,1.145,491,1.832,506,0.96,534,0.96,535,0.96,570,1.145,571,1.145,575,1.145,586,1.145,615,1.145,618,1.145,619,1.832,620,1.145,622,1.145,623,1.832,631,1.145,632,1.832,633,1.832,634,1.832,635,2.29,636,1.832,637,1.832,638,1.832,641,0.822,643,1.536,666,1.145,667,1.145,701,1.145,706,1.145,805,1.145,820,1.427,821,1.427,822,1.427,823,1.427,824,1.427,825,2.852,826,1.427,827,1.427,828,1.427,829,1.427,830,1.427,831,1.427,832,1.427,833,1.427,834,1.427,835,1.427,836,1.427,837,1.427,838,1.427,839,1.427,840,1.427,841,1.427,842,1.427,843,3.564,844,3.991,845,1.427,846,1.427,847,1.427,848,1.427,849,1.427,850,1.427,851,1.427,852,1.427,853,3.801,854,1.427,855,1.427,856,1.427,857,1.427,858,1.427,859,1.427,860,1.427,861,1.427,862,1.427,863,1.427,864,1.427,865,1.427,866,1.427,867,1.427,868,1.427,869,1.427,870,3.259,871,1.427,872,1.427,873,1.427,874,1.427,875,1.427,876,1.427,877,1.427,878,1.427,879,1.427,880,1.427,881,1.427,882,1.427,883,1.427,884,1.427,885,1.427,886,1.427,887,1.427,888,1.427,889,1.427,890,1.427,891,1.427,892,1.427,893,1.427,894,1.427,895,1.427,896,1.427,897,1.427,898,1.427,899,1.427,900,1.427,901,1.427,902,1.427,903,2.282,904,1.427,905,3.259,906,3.259,907,1.427,908,3.259,909,1.427,910,3.259,911,1.427,912,1.427,913,1.427,914,1.427,915,1.427,916,1.427,917,1.427,918,1.427,919,2.282,920,2.852,921,2.282,922,1.427,923,1.427,924,2.852,925,1.427,926,2.852,927,2.282,928,1.427,929,1.427,930,2.282,931,1.427,932,1.427,933,1.427,934,1.427,935,1.427,936,1.427,937,1.427,938,1.427,939,1.427,940,1.427,941,1.427,942,1.427,943,1.427,944,1.427,945,1.427,946,1.427,947,1.427,948,1.427,949,2.282,950,1.427,951,1.427,952,1.427,953,1.427,954,1.427,955,1.427,956,1.427,957,1.427,958,1.427,959,1.427,960,1.427,961,1.427,962,1.427]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":275,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["1.0.0",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":449,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11px",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":417,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["12b86a7",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15).replace",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["18a3e23",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["19043fc",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":805,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":451,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["230",{"_index":430,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["235",{"_index":429,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["24bfb15",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["2e6cb05",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":401,"title":{},"body":{"injectables/SocialCardService.html":{},"changelog.html":{},"overview.html":{}}}],["30",{"_index":148,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["3000",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":667,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4).join(\"\")}${repolist.length",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":412,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["4748b98",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["4a434e6",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["4c7d29a",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":588,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["52b97ed",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["5797c54",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["5ae3704",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["627",{"_index":419,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["64372f4",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["6893d90",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["792992e",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["8757519",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["8b48513",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":431,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["977df75",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["a0e6d3f",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":766,"title":{},"body":{"license.html":{}}}],["access",{"_index":679,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":277,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":297,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":792,"title":{},"body":{"license.html":{}}}],["actions",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":474,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":703,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":700,"title":{},"body":{"index.html":{}}}],["advised",{"_index":691,"title":{},"body":{"index.html":{}}}],["ago",{"_index":403,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["ahmed",{"_index":817,"title":{},"body":{"properties.html":{}}}],["and/or",{"_index":758,"title":{},"body":{"license.html":{}}}],["anything",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_host=0.0.0.0",{"_index":676,"title":{},"body":{"index.html":{}}}],["api_port=3003",{"_index":677,"title":{},"body":{"index.html":{}}}],["apiconfig",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":322,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["apiokresponse",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apioperation",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apitags",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apitags(\"health",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"user",{"_index":326,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["app",{"_index":665,"title":{},"body":{"index.html":{}}}],["application",{"_index":592,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":796,"title":{},"body":{"license.html":{}}}],["array.from(object.values(langs",{"_index":388,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["asc",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":516,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":746,"title":{},"body":{"license.html":{}}}],["async",{"_index":105,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["atwa",{"_index":819,"title":{},"body":{"properties.html":{}}}],["author",{"_index":816,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":139,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":785,"title":{},"body":{"license.html":{}}}],["available",{"_index":803,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":392,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":152,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["awaits",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":309,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["aws",{"_index":258,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["axios",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["b1f870c",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":427,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":692,"title":{},"body":{"index.html":{}}}],["being",{"_index":489,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":726,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":450,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["binaries",{"_index":654,"title":{},"body":{"index.html":{}}}],["bio",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":296,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["boilerplate",{"_index":475,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bootstrap",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["box",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":733,"title":{},"body":{"index.html":{}}}],["break",{"_index":688,"title":{},"body":{"index.html":{}}}],["browse",{"_index":801,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":799,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":283,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["bucketname",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":248,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":812,"title":{},"body":{"properties.html":{}}}],["build",{"_index":497,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":738,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":308,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["calculation",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":310,"title":{},"body":{"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"properties.html":{}}}],["card.controller",{"_index":341,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["card.controller.ts",{"_index":301,"title":{},"body":{"controllers/SocialCardController.html":{},"coverage.html":{}}}],["card.controller.ts:22",{"_index":317,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["card.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":340,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["card.service",{"_index":324,"title":{},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{}}}],["card.service.ts",{"_index":343,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{}}}],["card.service.ts:15",{"_index":348,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:23",{"_index":352,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:69",{"_index":350,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.ts",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/social",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"coverage.html":{}}}],["card/templates/repo",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cards",{"_index":327,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["catch",{"_index":286,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ccc8a96",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["cdncustomdomain",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changed",{"_index":672,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":443,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":724,"title":{},"body":{"index.html":{}}}],["charge",{"_index":743,"title":{},"body":{"license.html":{}}}],["check",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["cito",{"_index":662,"title":{},"body":{"index.html":{}}}],["claim",{"_index":788,"title":{},"body":{"license.html":{}}}],["class",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["clc",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":88,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":89,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":90,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":225,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":226,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":227,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_socialcardmodule",{"_index":337,"title":{},"body":{"modules/SocialCardModule.html":{},"overview.html":{}}}],["cluster_socialcardmodule_imports",{"_index":338,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["cluster_socialcardmodule_providers",{"_index":339,"title":{},"body":{"modules/SocialCardModule.html":{},"overview.html":{}}}],["code",{"_index":477,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codename",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["colors.util",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":685,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["committing",{"_index":693,"title":{},"body":{"index.html":{}}}],["community",{"_index":716,"title":{},"body":{"index.html":{}}}],["company",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":707,"title":{},"body":{"index.html":{}}}],["component",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":765,"title":{},"body":{"license.html":{}}}],["config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":278,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":272,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":280,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":110,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["connected",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":797,"title":{},"body":{"license.html":{}}}],["console.error(error",{"_index":295,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["const",{"_index":142,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":108,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["constructor(config",{"_index":240,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":109,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":346,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["container",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":250,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":793,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":711,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":709,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":646,"title":{},"body":{"index.html":{}}}],["controller",{"_index":162,"title":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"users",{"_index":325,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["controllers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":719,"title":{},"body":{"index.html":{}}}],["copies",{"_index":760,"title":{},"body":{"license.html":{}}}],["copy",{"_index":664,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":737,"title":{},"body":{"license.html":{}}}],["correct",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{}}}],["couple",{"_index":698,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":612,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":276,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["customprops",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":789,"title":{},"body":{"license.html":{}}}],["data",{"_index":422,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["database",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":144,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["date((new",{"_index":146,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":373,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["date).setdate(today.getdate",{"_index":147,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["datesince",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":402,"title":{},"body":{"injectables/SocialCardService.html":{},"changelog.html":{}}}],["dd096ca",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":748,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":798,"title":{},"body":{"license.html":{}}}],["debug",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["default",{"_index":124,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":111,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":471,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":332,"title":{},"body":{"controllers/SocialCardController.html":{},"properties.html":{}}}],["design",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":535,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["digital",{"_index":456,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitaloceanconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discord.find",{"_index":720,"title":{},"body":{"index.html":{}}}],["disk",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diskhealthindicator",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":506,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":756,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":570,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["docker",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":659,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":494,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dot",{"_index":806,"title":{},"body":{"properties.html":{}}}],["downgrade",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":702,"title":{},"body":{"index.html":{}}}],["during",{"_index":687,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":274,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge.node",{"_index":382,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["edge.size",{"_index":379,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["edge?.node.id",{"_index":378,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["edges",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":710,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":271,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["env",{"_index":675,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":671,"title":{},"body":{"index.html":{}}}],["environment",{"_index":669,"title":{},"body":{"index.html":{}}}],["environments",{"_index":647,"title":{},"body":{"index.html":{}}}],["error",{"_index":287,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":289,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":689,"title":{},"body":{"index.html":{}}}],["etl",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":784,"title":{},"body":{"license.html":{}}}],["exclude",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["exist",{"_index":437,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["exists",{"_index":397,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["export",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["exports",{"_index":93,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":775,"title":{},"body":{"license.html":{}}}],["extraneous",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":270,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["features",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":252,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":237,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":242,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":747,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":405,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["find",{"_index":670,"title":{},"body":{"index.html":{}}}],["first",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":780,"title":{},"body":{"license.html":{}}}],["fix",{"_index":525,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":571,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":652,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":420,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["forcepathstyle",{"_index":269,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":690,"title":{},"body":{"index.html":{}}}],["found",{"_index":333,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["found'})@redirect",{"_index":316,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["free",{"_index":742,"title":{},"body":{"license.html":{}}}],["function",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":549,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":763,"title":{},"body":{"license.html":{}}}],["general",{"_index":807,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":438,"title":{},"body":{"injectables/SocialCardService.html":{},"index.html":{}}}],["generates",{"_index":312,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generateusersocialcard",{"_index":303,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generateusersocialcard(username",{"_index":304,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generator",{"_index":644,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:username",{"_index":328,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get(\"/service",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":305,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":234,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":238,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":245,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getoriginendpoint",{"_index":235,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["gets",{"_index":306,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["getting",{"_index":441,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":106,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":116,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":344,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getusercard(username",{"_index":349,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getuserdata",{"_index":345,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getuserdata(username",{"_index":351,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["gfonts",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":814,"title":{},"body":{"properties.html":{}}}],["github",{"_index":469,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":94,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/github.module",{"_index":342,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["github/github.service",{"_index":368,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["github_pat_user=ghp_",{"_index":681,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":141,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":87,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":91,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"injectables/SocialCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":572,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["gql/get",{"_index":133,"title":{},"body":{"injectables/GithubService.html":{}}}],["granted",{"_index":741,"title":{},"body":{"license.html":{}}}],["graph",{"_index":802,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":129,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":137,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":102,"title":{},"body":{"injectables/GithubService.html":{}}}],["guide",{"_index":713,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":714,"title":{},"body":{"index.html":{}}}],["handler",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["hash",{"_index":244,"title":{},"body":{"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{}}}],["hassponsorslisting",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":318,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["header(\"content",{"_index":330,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["headers",{"_index":138,"title":{},"body":{"injectables/GithubService.html":{}}}],["headobjectcommand",{"_index":256,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":224,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":163,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":222,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["height",{"_index":418,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":740,"title":{},"body":{"license.html":{}}}],["higher",{"_index":400,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["holders",{"_index":786,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":809,"title":{},"body":{"properties.html":{}}}],["host",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html(userprofilecard(avatarurl",{"_index":407,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["http",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{}}}],["https",{"_index":575,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/open",{"_index":810,"title":{},"body":{"properties.html":{}}}],["httpservice",{"_index":347,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["icon",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":385,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":439,"title":{},"body":{"injectables/SocialCardService.html":{},"changelog.html":{}}}],["image/png",{"_index":331,"title":{},"body":{"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["image/png')@apiokresponse({type",{"_index":314,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["images",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":776,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{}}}],["included",{"_index":769,"title":{},"body":{"license.html":{}}}],["including",{"_index":708,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":98,"title":{"index.html":{}},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":267,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":135,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":95,"title":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{}},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"overview.html":{}}}],["insertion",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":660,"title":{},"body":{"index.html":{}}}],["installed",{"_index":655,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":288,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":421,"title":{},"body":{"injectables/SocialCardService.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":410,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["isbountyhunter",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":718,"title":{},"body":{"index.html":{}}}],["join(joinliteral",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":356,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["json.stringify(ratelimit",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":285,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keywords",{"_index":808,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":774,"title":{},"body":{"license.html":{}}}],["langrepos",{"_index":371,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langrepos.map(repo",{"_index":376,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langs",{"_index":363,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.length",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["langs.map",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":381,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langs[edge.node.id].size",{"_index":384,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langtotal",{"_index":374,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["language",{"_index":358,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["languages(first",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastmodified",{"_index":398,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["lastmodified.toisostring",{"_index":399,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["latest",{"_index":307,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["level",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":790,"title":{},"body":{"license.html":{}}}],["liable",{"_index":787,"title":{},"body":{"license.html":{}}}],["license",{"_index":735,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{}}}],["limitation",{"_index":751,"title":{},"body":{"license.html":{}}}],["limited",{"_index":777,"title":{},"body":{"license.html":{}}}],["link",{"_index":311,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["linting",{"_index":682,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":686,"title":{},"body":{"index.html":{}}}],["live",{"_index":467,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":534,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":674,"title":{},"body":{"index.html":{}}}],["location",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":103,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["logger(githubservice.name",{"_index":127,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":353,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["loggermodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":491,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["machines",{"_index":656,"title":{},"body":{"index.html":{}}}],["make",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.round",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memoryhealthindicator",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":779,"title":{},"body":{"license.html":{}}}],["merge",{"_index":754,"title":{},"body":{"license.html":{}}}],["message",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["method",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":104,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["miscellaneous",{"_index":641,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":701,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":736,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":753,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":818,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":673,"title":{},"body":{"index.html":{}}}],["move",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":651,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["nestjs/terminus",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":126,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":645,"title":{},"body":{"index.html":{}}}],["nextjs",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":586,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":360,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["node:stream",{"_index":260,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":657,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":783,"title":{},"body":{"license.html":{}}}],["normal",{"_index":425,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["normal.woff",{"_index":413,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["notable",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":290,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notice",{"_index":767,"title":{},"body":{"license.html":{}}}],["npm",{"_index":661,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":658,"title":{},"body":{"index.html":{}}}],["null",{"_index":294,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["number",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":380,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["obtaining",{"_index":745,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":457,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":729,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":130,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["one",{"_index":329,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["one'})@header('content",{"_index":313,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["open",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph",{"_index":643,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced.pizza",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opening",{"_index":694,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["optional",{"_index":115,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"index.html":{}}}],["options",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":649,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":795,"title":{},"body":{"license.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":804,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":722,"title":{},"body":{"index.html":{}}}],["owner",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":502,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":704,"title":{},"body":{"index.html":{}}}],["padding",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":319,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["param(\"username",{"_index":334,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["partial",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":781,"title":{},"body":{"license.html":{}}}],["path",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["permission",{"_index":739,"title":{},"body":{"license.html":{}}}],["permit",{"_index":761,"title":{},"body":{"license.html":{}}}],["person",{"_index":744,"title":{},"body":{"license.html":{}}}],["persons",{"_index":762,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["pinneditems",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":712,"title":{},"body":{"index.html":{}}}],["pngbuffer",{"_index":434,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["pngdata",{"_index":432,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["pngdata.aspng",{"_index":435,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["port",{"_index":666,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":771,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["prerequisites",{"_index":648,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":100,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"index.html":{}}}],["proceed",{"_index":715,"title":{},"body":{"index.html":{}}}],["process.env.ci",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":706,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":365,"title":{},"body":{"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":447,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":121,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["pronouns",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":99,"title":{"properties.html":{}},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"properties.html":{}}}],["protocol",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":772,"title":{},"body":{"license.html":{}}}],["provider",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{}}}],["prpat",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":233,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["publish",{"_index":755,"title":{},"body":{"license.html":{}}}],["pull",{"_index":695,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":782,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":257,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":684,"title":{},"body":{"index.html":{}}}],["query",{"_index":149,"title":{},"body":{"injectables/GithubService.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":717,"title":{},"body":{"index.html":{}}}],["ratelimit",{"_index":107,"title":{},"body":{"injectables/GithubService.html":{}}}],["read",{"_index":298,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":249,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readfile",{"_index":359,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":411,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["readme",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":101,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["record",{"_index":369,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["redirect",{"_index":320,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["redirecting",{"_index":404,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["refactoring",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["region",{"_index":273,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":468,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":158,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["remove",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":730,"title":{},"body":{"index.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":377,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["repo?.isprivate",{"_index":390,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["repo?.owner.login",{"_index":391,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["repoiconwithname",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoiconwithname(`${name.substring(0",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos",{"_index":366,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["repos.map",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.ts",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["repositories(first",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":357,"title":{},"body":{"injectables/SocialCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":728,"title":{},"body":{"index.html":{}}}],["request",{"_index":696,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":18,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":595,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":292,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":293,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":750,"title":{},"body":{"license.html":{}}}],["results",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":354,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["resvg(svg",{"_index":426,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["resvg.render",{"_index":433,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["resvg/resvg",{"_index":355,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["return",{"_index":154,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":120,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["rewrite",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["rgba(238",{"_index":428,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["rights",{"_index":752,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":650,"title":{},"body":{"index.html":{}}}],["s3",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{}}}],["s3client",{"_index":236,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":6,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":228,"title":{"injectables/S3FileStorageService.html":{}},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"coverage.html":{},"overview.html":{}}}],["satori(template",{"_index":415,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["sauced",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":811,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":815,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":813,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":132,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["scripts",{"_index":699,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["sdk/client",{"_index":259,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":279,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":759,"title":{},"body":{"license.html":{}}}],["service",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{}}}],["service_domain=opensauced.pizza",{"_index":678,"title":{},"body":{"index.html":{}}}],["set",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["sfo3",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":768,"title":{},"body":{"license.html":{}}}],["singleline",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":383,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["social",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socialcardcontroller",{"_index":299,"title":{"controllers/SocialCardController.html":{}},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"coverage.html":{}}}],["socialcardmodule",{"_index":8,"title":{"modules/SocialCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["socialcardservice",{"_index":323,"title":{"injectables/SocialCardService.html":{}},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"coverage.html":{},"overview.html":{}}}],["software",{"_index":653,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"index.html":{}}}],["spaces",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["splitting",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/github.module.ts",{"_index":92,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":97,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:11",{"_index":128,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:12",{"_index":112,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:21",{"_index":118,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:32",{"_index":122,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":164,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":223,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":229,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":300,"title":{},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":663,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":668,"title":{},"body":{"index.html":{}}}],["started",{"_index":442,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":515,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{}}}],["storage.module.ts",{"_index":230,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":231,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/SocialCardService.html":{}}}],["storage.service.ts",{"_index":232,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:10",{"_index":255,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:12",{"_index":254,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:14",{"_index":253,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:16",{"_index":241,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:33",{"_index":243,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:53",{"_index":246,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:76",{"_index":251,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"coverage.html":{}}}],["streamablefile",{"_index":321,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["streamablefile})@apinotfoundresponse({description",{"_index":315,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":393,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["style",{"_index":424,"title":{},"body":{"injectables/SocialCardService.html":{},"changelog.html":{}}}],["styles",{"_index":683,"title":{},"body":{"index.html":{}}}],["subject",{"_index":764,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":757,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":770,"title":{},"body":{"license.html":{}}}],["suite",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["support",{"_index":800,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":414,"title":{},"body":{"injectables/SocialCardService.html":{},"modules.html":{}}}],["switch",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":406,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["templates/user",{"_index":362,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["terminusmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["this.config.bucketname",{"_index":284,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":266,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":265,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":262,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":261,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":264,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.getoriginendpoint",{"_index":263,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.githubservice.getuser(username",{"_index":370,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":394,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["this.graphqlwithauth",{"_index":136,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":153,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug(`rate",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.logger.debug(`user",{"_index":396,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":268,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":282,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.uploadfile(pngbuffer",{"_index":436,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["this.socialcardservice.getusercard(username",{"_index":336,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["thresholdpercent",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":291,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["today",{"_index":143,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["today30daysago",{"_index":145,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["today30daysago.toisostring",{"_index":151,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":395,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["token",{"_index":140,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":680,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":794,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["try",{"_index":281,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["twitterusername",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":114,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["typeof",{"_index":134,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":697,"title":{},"body":{"index.html":{}}}],["types:auto",{"_index":705,"title":{},"body":{"index.html":{}}}],["unexisting",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":123,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{}}}],["update",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":732,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploaded",{"_index":440,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["uploadfile",{"_index":239,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":247,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":335,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["usage",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":582,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":131,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{}}}],["user(login",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":386,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["user.name",{"_index":387,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["user.repositories.nodes?.filter(repo",{"_index":372,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["user.toprepositories.nodes?.filter(repo",{"_index":389,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["user.ts",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs",{"_index":361,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":408,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["username",{"_index":119,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["userpat",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecard",{"_index":367,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos",{"_index":364,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos(repos",{"_index":409,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["users",{"_index":302,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["utc:hh:mm:ss.l",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":125,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":150,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":599,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":721,"title":{},"body":{"index.html":{}}}],["visual",{"_index":727,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":725,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":731,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":778,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":773,"title":{},"body":{"license.html":{}}}],["web",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":423,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["whether",{"_index":791,"title":{},"body":{"license.html":{}}}],["width",{"_index":416,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["without",{"_index":749,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":734,"title":{},"body":{"index.html":{}}}],["youtube",{"_index":723,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nSocialCardModule\n\nSocialCardModule\n\nAppModule -->\n\nSocialCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            S3FileStorageModule\n                        \n                        \n                            SocialCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { SocialCardModule } from \"./social-card/social-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        ApiConfig,\n        GitHubConfig,\n        DigitalOceanConfig,\n      ],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    SocialCardModule,\n    S3FileStorageModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      console.error(error);\n\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SocialCardController.html":{"url":"controllers/SocialCardController.html","title":"controller - SocialCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SocialCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile})@ApiNotFoundResponse({description: 'User not found'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/social-card.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, Param, Redirect, StreamableFile } from \"@nestjs/common\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\nimport { SocialCardService } from \"./social-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class SocialCardController {\n  constructor (\n    private readonly socialCardService: SocialCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n  ): Promise {\n    const url = await this.socialCardService.getUserCard(username);\n\n    return { url };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialCardModule.html":{"url":"modules/SocialCardModule.html","title":"module - SocialCardModule","body":"\n                   \n\n\n\n\n    Modules\n    SocialCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SocialCardModule\n\n\n\ncluster_SocialCardModule_imports\n\n\n\ncluster_SocialCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nSocialCardModule\n\nSocialCardModule\n\nSocialCardModule -->\n\nGithubModule->SocialCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nSocialCardModule -->\n\nS3FileStorageModule->SocialCardModule\n\n\n\n\n\nSocialCardService\n\nSocialCardService\n\nSocialCardModule -->\n\nSocialCardService->SocialCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/social-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SocialCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SocialCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { SocialCardService } from \"./social-card.service\";\nimport { SocialCardController } from \"./social-card.controller\";\nimport { GithubModule } from \"../github/github.module\";\nimport { S3FileStorageModule } from \"../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [SocialCardService],\n  controllers: [SocialCardController],\n})\nexport class SocialCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialCardService.html":{"url":"injectables/SocialCardService.html","title":"injectable - SocialCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/social-card.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/social-card.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport { readFile } from \"node:fs/promises\";\n\nimport userLangs from \"./templates/user-langs\";\nimport userProfileRepos from \"./templates/user-profile-repos\";\nimport userProfileCard from \"./templates/user-profile-card\";\nimport { GithubService } from \"../github/github.service\";\nimport { S3FileStorageService } from \"../s3-file-storage/s3-file-storage.service\";\n\n@Injectable()\nexport class SocialCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n    };\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining  today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} higher than 3 days ago, redirecting`);\n        return fileUrl;\n      }\n    }\n\n    const template = html(userProfileCard(avatarUrl, name!, userLangs(langs, langTotal), userProfileRepos(repos)));\n\n    const interArrayBuffer = await readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    const pngBuffer = pngData.asPng();\n\n    await this.s3FileStorageService.uploadFile(pngBuffer, hash, \"image/png\");\n\n    this.logger.debug(`User ${username} did not exist in S3, generated image and uploaded to S3, redirecting`);\n\n    return fileUrl;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/social-card/social-card.controller.ts\n            \n            controller\n            SocialCardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/social-card/social-card.service.ts\n            \n            injectable\n            SocialCardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/templates/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.ts\n            \n            variable\n            userProfileCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n  \n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n  \n  \n  \n  \n  \n  \n  \n\n\n🚀 Live release environments\n\nDigital Ocean\nOpen Sauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=18.15.0\nnpm>=9.6.3\ndocker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:dev📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nBoilerplate, changed mostly locally:\n# Global env\nAPI_HOST=0.0.0.0\nAPI_PORT=3003\nSERVICE_DOMAIN=opensauced.pizza\n\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-check In order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SocialCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_SocialCardModule\n\n\n\ncluster_SocialCardModule_providers\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\n\n\nSocialCardModule\n\nSocialCardModule\n\nSocialCardModule -->\n\nS3FileStorageModule->SocialCardModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nSocialCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nSocialCardModule -->\n\nGithubModule->SocialCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nSocialCardService\n\nSocialCardService\n\nSocialCardModule -->\n\nSocialCardService->SocialCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.2.0-beta.3\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCard   (src/.../user-profile-card.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-profile-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n    \n      \n          \n          \n              \n                  ${name}\n              \n          \n      \n    \n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & {\n  size: number,\n})[], totalCount = 0, joinLiteral = \"\") => langs.map(({ color, size }) => `\n     0 ? Math.round( size / totalCount * 100) : 100 / langs.length}%;\n      height: 11px;\n      background: ${color ?? \"#000\"};\n    \"/>`).join(joinLiteral)\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  \n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n  }\n\n  div {\n    display: flex;\n  }\n\n\n\n    \n        \n            \n\n            \n                ${name}\n            \n            \n                \n                    \n                \n            \n        \n    \n\n    \n        \n            \n                ${repos}\n            \n\n        \n\n        \n            \n                \n                    \n                        ${langs}\n                    \n                \n            \n        \n    \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[]): string => {\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(`${name.substring(0, 15).replace(/\\.+$/, \"\")}${name.length > 15 ? \"...\" : \"\"}`, `${String(avatarUrl)}&size=40`));\n\n  return `${repoList.slice(0, 4).join(\"\")}${repoList.length > 4\n    ? `\n          +${repoList.length - 2}\n      `\n    : ``}`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
