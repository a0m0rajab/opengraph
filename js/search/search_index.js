var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.681,1,1.477]],["body/modules/AppModule.html",[0,0.852,1,2.507,2,0.837,3,1.581,4,1.888,5,1.888,6,2.144,7,0.06,8,1.848,9,1.326,10,0.974,11,0.611,12,0.611,13,0.428,14,2.376,15,2.128,16,1.442,17,2.376,18,0.718,19,3.313,20,3.03,21,1.566,22,2.632,23,1.566,24,2.632,25,1.566,26,2.376,27,2.376,28,3.313,29,2.376,30,2.376,31,2.376,32,1.326,33,1.134,34,2.376,35,2.183,36,2.376,37,1.848,38,1.888,39,2.376,40,2.376,41,2.376,42,4.126,43,2.376,44,1.888,45,2.376,46,2.376,47,2.376,48,0.974,49,2.376,50,2.376,51,2.376,52,2.376,53,2.376,54,2.376,55,2.376,56,2.376,57,2.376,58,2.376,59,2.376,60,2.376,61,2.376,62,2.376,63,2.376,64,2.376,65,2.376,66,2.376,67,2.376,68,1.888,69,2.376,70,2.376,71,2.376,72,1.326,73,1.566,74,0.974,75,1.566,76,0.718,77,0.718,78,0.038,79,0.038]],["title/modules/GithubModule.html",[0,0.681,80,1.263]],["body/modules/GithubModule.html",[0,1.046,2,1.141,3,1.94,7,0.058,8,2.269,9,1.806,10,1.327,11,0.833,12,0.833,13,0.584,15,1.806,16,1.228,18,0.977,75,2.68,76,0.977,77,0.977,78,0.046,79,0.046,80,2.375,81,2.572,82,2.572,83,2.572,84,2.119,85,3.237,86,4.066,87,3.237]],["title/injectables/GithubService.html",[84,1.085,88,1.263]],["body/injectables/GithubService.html",[7,0.06,11,0.534,12,0.534,13,0.375,16,1.298,18,0.627,21,1.369,37,1.975,38,1.65,44,1.65,48,1.234,76,0.627,77,0.627,78,0.034,79,0.034,84,1.234,88,1.436,89,1.369,90,1.65,91,0.732,92,1.984,93,2.115,94,2.473,95,3.541,96,3.883,97,1.68,98,2.398,99,2.559,100,4.541,101,1.68,102,2.077,103,3.883,104,2.299,105,3.01,106,1.984,107,1.436,108,1.68,109,3.01,110,1.975,111,2.077,112,1.68,113,1.68,114,1.984,115,2.077,116,1.65,117,1.369,118,1.369,119,2.166,120,3.01,121,2.077,122,2.392,123,2.392,124,2.166,125,1.65,126,2.077,127,2.077,128,2.077,129,2.077,130,2.077,131,2.077,132,2.077,133,2.077,134,2.077,135,2.299,136,1.65,137,1.65,138,1.65,139,1.65,140,1.65,141,1.65,142,1.65,143,1.68,144,2.077,145,1.984,146,2.077,147,1.234,148,2.077,149,3.01,150,2.077,151,1.65,152,2.077,153,2.077,154,2.077]],["title/controllers/HealthController.html",[155,1.263,156,1.477]],["body/controllers/HealthController.html",[7,0.06,11,0.513,12,0.513,13,0.36,16,1.15,18,0.602,20,2.749,21,1.315,25,1.315,68,1.585,72,1.631,73,2.673,74,0.818,76,0.602,77,0.602,78,0.033,79,0.033,91,0.703,93,2.022,94,1.113,97,1.631,98,2.767,101,1.113,104,1.631,113,1.631,116,2.322,147,1.198,155,0.952,156,1.631,157,1.585,158,1.585,159,4.238,160,4.378,161,4.238,162,2.322,163,1.995,164,2.923,165,3.026,166,1.562,167,1.818,168,2.923,169,1.995,170,1.995,171,2.923,172,1.995,173,2.923,174,2.923,175,2.923,176,3.46,177,2.923,178,2.923,179,2.749,180,2.749,181,1.585,182,1.585,183,1.995,184,1.995,185,1.995,186,1.995,187,1.995,188,1.995,189,2.322,190,2.923,191,2.923,192,1.995,193,1.995,194,1.995,195,1.995,196,1.995,197,1.995,198,2.923,199,1.995,200,1.995,201,1.995,202,1.995,203,1.995,204,1.995,205,1.995,206,1.995,207,1.995,208,1.995,209,1.995,210,1.995,211,1.995,212,1.995,213,1.995,214,1.995]],["title/modules/HealthModule.html",[0,0.681,215,1.745]],["body/modules/HealthModule.html",[0,1.103,2,1.244,7,0.059,11,0.908,12,0.908,13,0.637,15,1.97,16,1.396,18,1.066,24,3.408,25,2.327,74,1.759,76,1.066,77,1.066,78,0.049,79,0.049,156,2.578,215,2.827,216,3.53,217,3.53]],["title/controllers/SocialCardController.html",[155,1.263,218,1.477]],["body/controllers/SocialCardController.html",[7,0.059,11,0.63,12,0.63,13,0.442,16,1.171,18,0.74,32,2.332,33,1.615,48,1.005,74,1.005,76,0.74,77,0.74,78,0.038,79,0.038,91,0.864,93,1.169,94,1.367,97,1.888,98,2.163,101,1.367,104,1.367,106,1.615,107,1.995,108,1.367,110,2.163,112,2.332,113,1.367,114,2.231,119,2.163,124,1.888,135,1.367,145,1.615,147,1.005,155,1.169,158,1.947,162,1.947,165,2.689,179,2.689,180,2.689,181,1.947,182,1.947,189,1.947,218,1.888,219,1.615,220,1.947,221,2.451,222,4.387,223,2.451,224,2.451,225,3.385,226,3.385,227,3.385,228,3.385,229,1.888,230,3.385,231,3.385,232,2.451,233,2.451,234,2.451,235,2.689,236,2.451,237,2.451,238,2.451,239,3.385,240,3.385,241,1.589,242,1.947,243,2.451,244,2.451,245,1.947,246,2.451,247,2.451,248,2.451,249,2.451,250,1.947,251,2.451,252,1.947,253,2.451,254,2.451]],["title/modules/SocialCardModule.html",[0,0.681,6,1.263]],["body/modules/SocialCardModule.html",[0,0.994,2,1.053,3,1.844,6,2.363,7,0.059,8,2.156,9,1.668,10,1.225,11,0.769,12,0.769,13,0.539,15,2.156,16,1.416,18,0.903,22,3.07,23,1.97,32,2.156,33,1.426,74,1.584,75,2.547,76,0.903,77,0.903,78,0.044,79,0.044,80,2.292,218,2.39,219,1.426,241,1.969,242,2.375,255,2.375,256,2.989,257,2.375,258,2.989,259,2.989,260,2.989]],["title/injectables/SocialCardService.html",[88,1.263,241,1.085]],["body/injectables/SocialCardService.html",[7,0.06,11,0.496,12,0.496,13,0.348,16,1.371,18,0.582,23,1.27,33,1.788,48,1.39,76,0.582,77,0.582,78,0.032,79,0.032,84,1.775,88,1.36,89,1.27,91,0.679,93,1.36,94,1.59,97,1.59,98,2.335,101,1.59,104,1.892,106,2.235,107,1.618,108,1.892,110,2.335,112,2.231,113,1.59,114,2.469,119,1.892,123,1.532,124,1.076,125,1.532,135,2.335,136,1.532,137,1.532,138,2.264,139,1.532,140,1.532,141,1.532,145,1.879,147,0.79,151,2.264,219,1.788,229,1.076,241,1.168,261,1.532,262,3.391,263,3.391,264,1.928,265,4.186,266,1.928,267,1.928,268,1.928,269,1.928,270,1.928,271,1.928,272,1.928,273,1.928,274,1.928,275,1.928,276,1.27,277,3.391,278,2.694,279,1.27,280,1.59,281,2.264,282,1.27,283,1.928,284,1.892,285,1.532,286,1.928,287,1.928,288,1.928,289,1.928,290,1.928,291,3.391,292,1.27,293,1.928,294,1.928,295,1.928,296,3.391,297,1.928,298,1.928,299,1.928,300,1.532,301,1.928,302,1.928,303,1.928,304,1.928,305,1.928,306,1.532,307,1.928,308,1.928]],["title/changelog.html",[309,1.472,310,1.472,311,1.774]],["body/changelog.html",[0,0.757,3,0.961,7,0.056,13,0.363,48,0.825,72,1.123,78,0.033,79,0.033,107,0.961,118,1.327,122,1.6,124,1.941,147,0.825,166,0.825,229,1.123,235,1.6,245,1.6,252,2.338,280,1.642,311,1.6,312,2.014,313,2.014,314,2.014,315,1.6,316,2.014,317,1.6,318,3.234,319,4.391,320,3.827,321,3.827,322,4.252,323,2.014,324,2.014,325,2.014,326,2.014,327,2.014,328,2.014,329,2.014,330,2.338,331,1.6,332,2.014,333,2.014,334,2.014,335,2.014,336,2.014,337,3.479,338,2.014,339,2.338,340,2.014,341,2.014,342,2.943,343,2.943,344,2.338,345,2.014,346,1.6,347,2.014,348,2.014,349,2.014,350,2.338,351,2.943,352,2.014,353,1.327,354,3.234,355,2.014,356,2.014,357,2.014,358,2.014,359,2.014,360,1.327,361,1.94,362,2.014,363,2.014,364,2.943,365,2.338,366,2.014,367,2.014,368,2.014,369,2.014,370,2.763,371,2.014,372,2.014,373,2.014,374,2.943,375,2.014,376,2.014,377,1.327,378,1.6,379,2.014,380,2.014,381,2.014,382,2.014,383,2.014,384,2.014,385,2.014,386,2.943,387,2.014,388,2.014,389,2.014,390,2.014,391,2.014,392,2.014,393,2.014,394,2.014,395,2.014,396,2.014,397,2.014,398,2.014,399,2.014,400,2.014,401,1.6,402,1.6,403,1.6,404,2.014,405,2.014,406,3.479,407,2.014,408,2.014,409,2.014,410,2.014,411,2.014,412,2.014,413,1.94,414,2.943,415,2.943,416,2.014,417,2.763,418,2.014,419,2.014,420,2.014,421,2.014,422,2.014,423,1.6,424,2.014,425,2.014,426,2.338,427,2.014,428,2.014,429,2.014,430,1.6,431,2.014,432,2.014,433,2.014,434,2.014,435,2.014,436,2.014,437,2.014,438,2.014,439,2.014,440,2.014,441,2.014,442,2.014,443,2.014]],["title/coverage.html",[444,2.834]],["body/coverage.html",[7,0.058,13,0.504,33,1.765,35,1.842,37,1.559,78,0.042,79,0.042,84,1.145,88,1.765,90,2.22,99,1.842,107,1.333,119,1.559,155,1.765,156,1.559,157,2.22,218,1.559,219,2.25,220,2.22,241,1.145,261,2.22,276,1.842,279,1.842,280,2.063,282,1.842,292,3.337,353,1.842,444,2.22,445,2.794,446,2.794,447,2.22,448,4.81,449,4.883,450,2.22,451,2.794,452,2.22,453,2.22,454,2.794,455,2.22,456,2.794,457,2.22,458,2.794,459,2.794,460,2.22,461,2.22,462,2.22,463,2.22,464,3.293,465,2.22,466,2.22,467,2.22,468,2.794,469,2.794]],["title/miscellaneous/functions.html",[377,2.09,470,1.246]],["body/miscellaneous/functions.html",[7,0.052,78,0.052,79,0.052,91,1.386,377,2.593,455,3.126,457,3.844,470,2.195,471,3.935]],["title/index.html",[91,0.787,309,1.472,310,1.472]],["body/index.html",[7,0.055,10,0.845,12,0.53,13,0.372,72,1.15,73,2.55,78,0.034,79,0.034,93,0.984,108,1.15,117,1.359,143,1.671,166,1.757,167,1.961,284,1.671,315,2.379,330,1.638,331,1.638,339,2.801,344,1.638,346,2.379,350,3.074,354,2.379,360,1.974,361,2.324,370,2.801,378,1.638,403,1.638,413,1.974,423,2.801,426,2.379,472,1.359,473,1.638,474,2.062,475,2.062,476,2.062,477,2.062,478,2.062,479,2.062,480,2.062,481,3.526,482,4.753,483,2.062,484,2.801,485,1.638,486,2.062,487,2.062,488,2.062,489,2.062,490,2.062,491,2.062,492,2.062,493,4.424,494,2.062,495,2.062,496,1.638,497,2.062,498,1.638,499,1.638,500,2.062,501,2.995,502,2.062,503,2.062,504,2.062,505,2.062,506,2.062,507,2.062,508,2.062,509,2.062,510,2.062,511,2.062,512,2.062,513,2.062,514,2.062,515,2.995,516,2.062,517,2.062,518,3.526,519,2.062,520,1.638,521,2.062,522,2.062,523,2.995,524,2.062,525,2.062,526,2.062,527,2.062,528,2.062,529,2.062,530,2.062,531,3.87,532,2.062,533,2.062,534,2.062,535,2.379,536,2.062,537,2.062,538,2.995,539,2.995,540,2.379,541,2.062,542,1.638,543,2.995,544,2.062,545,2.062,546,2.062,547,2.062,548,2.062,549,2.062,550,2.062,551,2.062,552,2.062,553,2.062,554,2.062,555,2.062,556,2.062,557,2.062,558,2.062,559,2.995,560,2.062,561,2.062,562,2.062,563,2.062,564,2.062,565,2.062,566,2.062,567,2.062,568,2.062,569,2.062,570,2.062,571,1.15,572,1.359]],["title/license.html",[309,1.472,310,1.472,571,1.246]],["body/license.html",[7,0.042,10,1.161,78,0.042,79,0.042,166,1.161,167,1.351,318,2.249,353,1.866,413,2.458,484,2.249,485,3.936,496,2.964,542,2.964,571,1.58,572,1.866,573,4.172,574,2.831,575,3.731,576,2.831,577,2.831,578,2.831,579,2.831,580,2.831,581,2.831,582,2.831,583,2.831,584,2.831,585,4.172,586,2.831,587,2.831,588,2.831,589,2.831,590,2.831,591,2.831,592,2.831,593,2.831,594,2.831,595,2.831,596,3.731,597,2.831,598,2.831,599,2.831,600,2.831,601,2.831,602,2.831,603,3.731,604,3.731,605,2.831,606,2.831,607,2.831,608,2.831,609,2.831,610,2.831,611,2.831,612,2.831,613,2.831,614,2.831,615,2.831,616,2.831,617,2.831,618,2.249,619,2.831,620,2.831,621,2.831,622,2.831,623,2.831,624,2.831,625,2.831,626,2.831,627,2.831,628,2.831,629,2.831,630,2.831,631,2.831,632,2.831,633,2.831,634,2.831]],["title/modules.html",[2,1.257]],["body/modules.html",[1,2.081,2,1.314,6,1.78,7,0.05,78,0.05,79,0.05,80,1.78,215,2.458,635,4.732,636,4.732,637,4.732,638,4.897,639,3.73,640,3.73]],["title/overview.html",[641,2.834]],["body/overview.html",[1,2.613,2,1.154,3,1.954,4,2.601,5,2.601,6,2.381,7,0.057,8,2.285,9,1.827,10,1.342,74,1.342,78,0.046,79,0.046,80,2.347,81,2.601,82,2.601,83,2.601,84,2.045,89,2.158,241,1.832,255,2.601,257,2.601,641,2.601,642,2.601,643,3.254]],["title/properties.html",[92,2.09,365,1.774]],["body/properties.html",[7,0.059,32,1.938,78,0.048,79,0.048,92,2.289,166,1.424,167,1.657,229,1.938,250,2.759,284,1.938,317,2.759,430,2.759,472,2.289,473,2.759,571,1.938,572,2.289,618,2.759,644,3.473,645,3.473,646,3.473,647,3.473,648,4.248,649,3.473,650,3.473,651,3.473,652,3.473,653,3.473,654,3.473,655,3.473,656,3.473,657,3.473]],["title/miscellaneous/variables.html",[143,1.769,470,1.246]],["body/miscellaneous/variables.html",[7,0.061,11,0.331,35,1.374,37,1.163,48,1.793,78,0.024,79,0.024,91,0.454,99,1.374,110,2.355,112,1.684,117,2.462,118,2.462,135,0.719,142,1.656,143,1.163,147,0.528,166,0.528,167,0.615,219,1.44,276,1.374,278,2.087,279,1.374,280,1.684,281,2.087,282,1.374,284,0.719,285,1.023,292,1.989,300,2.634,306,2.968,360,0.849,361,0.849,401,1.023,402,1.023,417,1.023,447,1.023,450,1.023,452,1.023,453,1.656,460,1.023,461,1.656,462,1.656,463,1.656,464,2.087,465,1.656,466,1.656,467,1.656,470,0.719,472,0.849,498,1.023,499,1.023,520,1.023,535,1.023,540,1.023,642,1.023,643,1.023,658,1.288,659,1.288,660,1.288,661,1.288,662,2.627,663,1.288,664,1.288,665,1.288,666,1.288,667,1.288,668,1.288,669,1.288,670,1.288,671,1.288,672,1.288,673,1.288,674,1.288,675,1.288,676,1.288,677,1.288,678,1.288,679,1.288,680,3.316,681,3.736,682,1.288,683,1.288,684,1.288,685,1.288,686,1.288,687,1.288,688,1.288,689,1.288,690,3.548,691,3.019,692,1.288,693,1.288,694,1.288,695,1.288,696,1.288,697,1.288,698,1.288,699,1.288,700,1.288,701,3.548,702,1.288,703,1.288,704,1.288,705,1.288,706,1.288,707,1.288,708,1.288,709,1.288,710,1.288,711,1.288,712,1.288,713,1.288,714,1.288,715,1.288,716,1.288,717,2.085,718,1.288,719,3.019,720,1.288,721,1.288,722,1.288,723,1.288,724,1.288,725,1.288,726,2.085,727,1.288,728,3.019,729,3.019,730,1.288,731,3.019,732,1.288,733,3.019,734,1.288,735,1.288,736,1.288,737,1.288,738,1.288,739,1.288,740,1.288,741,1.288,742,2.085,743,2.627,744,2.085,745,1.288,746,1.288,747,2.627,748,1.288,749,2.627,750,2.085,751,1.288,752,1.288,753,2.085,754,1.288,755,1.288,756,1.288,757,1.288,758,1.288,759,1.288,760,1.288,761,1.288,762,1.288,763,1.288,764,1.288,765,1.288,766,1.288,767,1.288,768,1.288,769,1.288,770,1.288,771,1.288,772,1.288,773,1.288,774,2.085,775,1.288,776,1.288,777,1.288,778,1.288,779,1.288,780,1.288,781,1.288,782,1.288,783,1.288,784,1.288,785,1.288,786,1.288]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":292,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["03",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":317,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["10",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11px",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15).replace",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["18a3e23",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":643,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":318,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["24bfb15",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["2e6cb05",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":141,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["3000",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":499,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":642,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4).join(\"\")}${repolist.length",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["52b97ed",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["5797c54",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["5ae3704",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["64372f4",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["6893d90",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["8757519",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["8b48513",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["a0e6d3f",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":602,"title":{},"body":{"license.html":{}}}],["access",{"_index":512,"title":{},"body":{"index.html":{}}}],["action",{"_index":628,"title":{},"body":{"license.html":{}}}],["add",{"_index":354,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":537,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":534,"title":{},"body":{"index.html":{}}}],["advised",{"_index":525,"title":{},"body":{"index.html":{}}}],["ahmed",{"_index":655,"title":{},"body":{"properties.html":{}}}],["and/or",{"_index":594,"title":{},"body":{"license.html":{}}}],["anything",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_host=0.0.0.0",{"_index":508,"title":{},"body":{"index.html":{}}}],["api_port=3003",{"_index":509,"title":{},"body":{"index.html":{}}}],["apiconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apinotfoundresponse",{"_index":240,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["apiokresponse",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apioperation",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apitags",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apitags(\"health",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"user",{"_index":244,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["app",{"_index":497,"title":{},"body":{"index.html":{}}}],["application",{"_index":423,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":632,"title":{},"body":{"license.html":{}}}],["array.from(object.values(langs",{"_index":302,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["asc",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":331,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":582,"title":{},"body":{"license.html":{}}}],["async",{"_index":98,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["atwa",{"_index":657,"title":{},"body":{"properties.html":{}}}],["author",{"_index":654,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":132,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":621,"title":{},"body":{"license.html":{}}}],["available",{"_index":640,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":306,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":145,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["awaits",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":228,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["axios",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["b1f870c",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":526,"title":{},"body":{"index.html":{}}}],["being",{"_index":567,"title":{},"body":{"index.html":{}}}],["below",{"_index":560,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":486,"title":{},"body":{"index.html":{}}}],["bio",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":378,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bootstrap",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["box",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":569,"title":{},"body":{"index.html":{}}}],["break",{"_index":522,"title":{},"body":{"index.html":{}}}],["browse",{"_index":638,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":635,"title":{},"body":{"modules.html":{}}}],["buffers",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":650,"title":{},"body":{"properties.html":{}}}],["build",{"_index":339,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":574,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":227,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["card",{"_index":229,"title":{},"body":{"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"properties.html":{}}}],["card.controller",{"_index":259,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["card.controller.ts",{"_index":220,"title":{},"body":{"controllers/SocialCardController.html":{},"coverage.html":{}}}],["card.controller.ts:21",{"_index":236,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["card.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":258,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["card.service",{"_index":242,"title":{},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{}}}],["card.service.ts",{"_index":261,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{}}}],["card.service.ts:13",{"_index":266,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:19",{"_index":270,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:61",{"_index":268,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.ts",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/social",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"coverage.html":{}}}],["card/templates/repo",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cards",{"_index":245,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["changed",{"_index":504,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":311,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":558,"title":{},"body":{"index.html":{}}}],["charge",{"_index":579,"title":{},"body":{"license.html":{}}}],["check",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["cito",{"_index":494,"title":{},"body":{"index.html":{}}}],["claim",{"_index":624,"title":{},"body":{"license.html":{}}}],["class",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["clc",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":81,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":83,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":82,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_socialcardmodule",{"_index":255,"title":{},"body":{"modules/SocialCardModule.html":{},"overview.html":{}}}],["cluster_socialcardmodule_imports",{"_index":256,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["cluster_socialcardmodule_providers",{"_index":257,"title":{},"body":{"modules/SocialCardModule.html":{},"overview.html":{}}}],["code",{"_index":370,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codename",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["colors.util",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":518,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["committing",{"_index":527,"title":{},"body":{"index.html":{}}}],["community",{"_index":550,"title":{},"body":{"index.html":{}}}],["company",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":541,"title":{},"body":{"index.html":{}}}],["component",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":601,"title":{},"body":{"license.html":{}}}],["config",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get(\"api.logging",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["config/api.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["config/github.config",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":103,"title":{},"body":{"injectables/GithubService.html":{}}}],["configuration",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":633,"title":{},"body":{"license.html":{}}}],["const",{"_index":135,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["constructor(githubconfig",{"_index":102,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":264,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["container",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":629,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":545,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":543,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":475,"title":{},"body":{"index.html":{}}}],["controller",{"_index":155,"title":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"users",{"_index":243,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["controllers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":553,"title":{},"body":{"index.html":{}}}],["copies",{"_index":596,"title":{},"body":{"license.html":{}}}],["copy",{"_index":496,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":573,"title":{},"body":{"license.html":{}}}],["correct",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":150,"title":{},"body":{"injectables/GithubService.html":{}}}],["couple",{"_index":532,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":444,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customprops",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":625,"title":{},"body":{"license.html":{}}}],["database",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["date",{"_index":137,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["date((new",{"_index":139,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":290,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["date).setdate(today.getdate",{"_index":140,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["datesince",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd096ca",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":584,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":634,"title":{},"body":{"license.html":{}}}],["debug",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":162,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["default",{"_index":117,"title":{},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":104,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/SocialCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":346,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":250,"title":{},"body":{"controllers/SocialCardController.html":{},"properties.html":{}}}],["development",{"_index":361,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["digital",{"_index":478,"title":{},"body":{"index.html":{}}}],["direction",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discord.find",{"_index":554,"title":{},"body":{"index.html":{}}}],["disk",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diskhealthindicator",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":520,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["displayname",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":592,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":401,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["docker",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":491,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":353,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dot",{"_index":644,"title":{},"body":{"properties.html":{}}}],["downgrade",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":536,"title":{},"body":{"index.html":{}}}],["during",{"_index":521,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["edge.node",{"_index":299,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["edge.size",{"_index":296,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["edge?.node.id",{"_index":295,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["edges",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":544,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{}}}],["engines",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["env",{"_index":507,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":503,"title":{},"body":{"index.html":{}}}],["environment",{"_index":501,"title":{},"body":{"index.html":{}}}],["environments",{"_index":477,"title":{},"body":{"index.html":{}}}],["errors",{"_index":523,"title":{},"body":{"index.html":{}}}],["etl",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":620,"title":{},"body":{"license.html":{}}}],["exclude",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["exports",{"_index":86,"title":{},"body":{"modules/GithubModule.html":{}}}],["express",{"_index":611,"title":{},"body":{"license.html":{}}}],["f1f5947",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":583,"title":{},"body":{"license.html":{}}}],["find",{"_index":502,"title":{},"body":{"index.html":{}}}],["first",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":616,"title":{},"body":{"license.html":{}}}],["fix",{"_index":344,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":402,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":484,"title":{},"body":{"index.html":{},"license.html":{}}}],["formatit",{"_index":524,"title":{},"body":{"index.html":{}}}],["found",{"_index":235,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["free",{"_index":578,"title":{},"body":{"license.html":{}}}],["function",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":377,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":599,"title":{},"body":{"license.html":{}}}],["general",{"_index":645,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":563,"title":{},"body":{"index.html":{}}}],["generates",{"_index":231,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generateusersocialcard",{"_index":222,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generateusersocialcard(username",{"_index":223,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generator",{"_index":473,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:username",{"_index":246,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get(\"/service",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":224,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":163,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["gets",{"_index":225,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["getting",{"_index":309,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":99,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":109,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":262,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getusercard(username",{"_index":267,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getuserdata",{"_index":263,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getuserdata(username",{"_index":269,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["gfonts",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":652,"title":{},"body":{"properties.html":{}}}],["github",{"_index":511,"title":{},"body":{"index.html":{}}}],["github.service",{"_index":87,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/github.module",{"_index":260,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["github/github.service",{"_index":283,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["github_pat_user=ghp_",{"_index":514,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":134,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":80,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":84,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"injectables/SocialCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":403,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["gql/get",{"_index":126,"title":{},"body":{"injectables/GithubService.html":{}}}],["granted",{"_index":577,"title":{},"body":{"license.html":{}}}],["graph",{"_index":639,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":122,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":130,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":95,"title":{},"body":{"injectables/GithubService.html":{}}}],["guide",{"_index":547,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":548,"title":{},"body":{"index.html":{}}}],["handler",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["hassponsorslisting",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":237,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["header(\"content",{"_index":248,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["headers",{"_index":131,"title":{},"body":{"injectables/GithubService.html":{}}}],["health",{"_index":159,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":217,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":156,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":215,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":164,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{}}}],["height",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hereby",{"_index":576,"title":{},"body":{"license.html":{}}}],["holders",{"_index":622,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":647,"title":{},"body":{"properties.html":{}}}],["host",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{}}}],["https",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["https://github.com/open",{"_index":648,"title":{},"body":{"properties.html":{}}}],["httpservice",{"_index":265,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["icon",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":252,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["image/png",{"_index":249,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":233,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["images",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":612,"title":{},"body":{"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["imports",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/SocialCardModule.html":{}}}],["included",{"_index":605,"title":{},"body":{"license.html":{}}}],["including",{"_index":542,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":91,"title":{"index.html":{}},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["inject(githubconfig.key",{"_index":128,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":88,"title":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":89,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{},"overview.html":{}}}],["insertion",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":492,"title":{},"body":{"index.html":{}}}],["installed",{"_index":487,"title":{},"body":{"index.html":{}}}],["instead",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["isbountyhunter",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":552,"title":{},"body":{"index.html":{}}}],["join(joinliteral",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":275,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["json.stringify(ratelimit",{"_index":154,"title":{},"body":{"injectables/GithubService.html":{}}}],["keywords",{"_index":646,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":610,"title":{},"body":{"license.html":{}}}],["langrepos",{"_index":288,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langrepos.map(repo",{"_index":293,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langs",{"_index":278,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.length",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["langs.map",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":298,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langs[edge.node.id].size",{"_index":301,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["langtotal",{"_index":291,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["language",{"_index":285,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["languages(first",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["latest",{"_index":226,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["level",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":626,"title":{},"body":{"license.html":{}}}],["liable",{"_index":623,"title":{},"body":{"license.html":{}}}],["license",{"_index":571,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":149,"title":{},"body":{"injectables/GithubService.html":{}}}],["limitation",{"_index":587,"title":{},"body":{"license.html":{}}}],["limited",{"_index":613,"title":{},"body":{"license.html":{}}}],["link",{"_index":230,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["linting",{"_index":515,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":519,"title":{},"body":{"index.html":{}}}],["live",{"_index":476,"title":{},"body":{"index.html":{}}}],["load",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":360,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":506,"title":{},"body":{"index.html":{}}}],["location",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":96,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(githubservice.name",{"_index":120,"title":{},"body":{"injectables/GithubService.html":{}}}],["loggermodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machines",{"_index":488,"title":{},"body":{"index.html":{}}}],["make",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.round",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memoryhealthindicator",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":615,"title":{},"body":{"license.html":{}}}],["merge",{"_index":590,"title":{},"body":{"license.html":{}}}],["message",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["method",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":97,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["miscellaneous",{"_index":470,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":535,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":572,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":589,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/SocialCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/SocialCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":656,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":505,"title":{},"body":{"index.html":{}}}],["move",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":483,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{}}}],["nestjs/swagger",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["nestjs/terminus",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":119,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"coverage.html":{}}}],["next",{"_index":474,"title":{},"body":{"index.html":{}}}],["nextjs",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":417,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":272,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["node>=18.15.0",{"_index":489,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":619,"title":{},"body":{"license.html":{}}}],["notable",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":603,"title":{},"body":{"license.html":{}}}],["npm",{"_index":493,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":490,"title":{},"body":{"index.html":{}}}],["number",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":297,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["obtaining",{"_index":581,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":479,"title":{},"body":{"index.html":{}}}],["octo",{"_index":564,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":123,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["one",{"_index":247,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["one'})@header('content",{"_index":232,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["open",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph",{"_index":472,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced.pizza",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opening",{"_index":528,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["optional",{"_index":108,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"index.html":{}}}],["options",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["order",{"_index":481,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":631,"title":{},"body":{"license.html":{}}}],["out",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/SocialCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":641,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":556,"title":{},"body":{"index.html":{}}}],["owner",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":365,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":538,"title":{},"body":{"index.html":{}}}],["padding",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":238,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["param(\"username",{"_index":251,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["parameters",{"_index":106,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["partial",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":617,"title":{},"body":{"license.html":{}}}],["path",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["permission",{"_index":575,"title":{},"body":{"license.html":{}}}],["permit",{"_index":597,"title":{},"body":{"license.html":{}}}],["person",{"_index":580,"title":{},"body":{"license.html":{}}}],["persons",{"_index":598,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["pinneditems",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":546,"title":{},"body":{"index.html":{}}}],["port",{"_index":498,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":607,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":158,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["prerequisites",{"_index":480,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":93,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"index.html":{}}}],["proceed",{"_index":549,"title":{},"body":{"index.html":{}}}],["process.env.ci",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":540,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":280,"title":{},"body":{"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":315,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":114,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["pronouns",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":92,"title":{"properties.html":{}},"body":{"injectables/GithubService.html":{},"properties.html":{}}}],["provided",{"_index":608,"title":{},"body":{"license.html":{}}}],["provider",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/SocialCardModule.html":{}}}],["prpat",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":591,"title":{},"body":{"license.html":{}}}],["pull",{"_index":529,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":618,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quality",{"_index":517,"title":{},"body":{"index.html":{}}}],["query",{"_index":142,"title":{},"body":{"injectables/GithubService.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":551,"title":{},"body":{"index.html":{}}}],["ratelimit",{"_index":100,"title":{},"body":{"injectables/GithubService.html":{}}}],["readfile",{"_index":271,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["readme",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":94,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["record",{"_index":286,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["refactoring",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["registeras(\"api",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":350,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":151,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["remove",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":565,"title":{},"body":{"index.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":294,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["repo?.isprivate",{"_index":304,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["repo?.owner.login",{"_index":305,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["repoiconwithname",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoiconwithname(`${name.substring(0",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos",{"_index":281,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["repos.map",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.ts",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["repositories(first",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":284,"title":{},"body":{"injectables/SocialCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":562,"title":{},"body":{"index.html":{}}}],["request",{"_index":530,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":426,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reset",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":152,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restriction",{"_index":586,"title":{},"body":{"license.html":{}}}],["results",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":273,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["resvg/resvg",{"_index":274,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["return",{"_index":147,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["rewrite",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":588,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":482,"title":{},"body":{"index.html":{}}}],["sauced",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":649,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":653,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":651,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":125,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["scripts",{"_index":533,"title":{},"body":{"index.html":{}}}],["sell",{"_index":595,"title":{},"body":{"license.html":{}}}],["service",{"_index":160,"title":{},"body":{"controllers/HealthController.html":{}}}],["service_domain=opensauced.pizza",{"_index":510,"title":{},"body":{"index.html":{}}}],["set",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":604,"title":{},"body":{"license.html":{}}}],["singleline",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":300,"title":{},"body":{"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["social",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socialcardcontroller",{"_index":218,"title":{"controllers/SocialCardController.html":{}},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"coverage.html":{}}}],["socialcardmodule",{"_index":6,"title":{"modules/SocialCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["socialcardservice",{"_index":241,"title":{"injectables/SocialCardService.html":{}},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"coverage.html":{},"overview.html":{}}}],["software",{"_index":485,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"index.html":{}}}],["splitting",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":14,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/github.module.ts",{"_index":85,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":90,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:11",{"_index":121,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:12",{"_index":105,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:21",{"_index":111,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:32",{"_index":115,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":157,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":216,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/social",{"_index":219,"title":{},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":495,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":500,"title":{},"body":{"index.html":{}}}],["started",{"_index":310,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":330,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["streamablefile",{"_index":239,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["streamablefile(image",{"_index":254,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["streamablefile})@apinotfoundresponse({description",{"_index":234,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["string",{"_index":110,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":307,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["styles",{"_index":516,"title":{},"body":{"index.html":{}}}],["subject",{"_index":600,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":593,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":606,"title":{},"body":{"license.html":{}}}],["suite",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["support",{"_index":636,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":637,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["templates/user",{"_index":277,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["terminusmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.githubservice.getuser(username",{"_index":287,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":308,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["this.graphqlwithauth",{"_index":129,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":148,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":146,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug(`rate",{"_index":153,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.socialcardservice.getusercard(username",{"_index":253,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["thresholdpercent",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["today",{"_index":136,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["today30daysago",{"_index":138,"title":{},"body":{"injectables/GithubService.html":{},"injectables/SocialCardService.html":{}}}],["today30daysago.toisostring",{"_index":144,"title":{},"body":{"injectables/GithubService.html":{}}}],["token",{"_index":133,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":513,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":630,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["twitterusername",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":107,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["typeof",{"_index":127,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":531,"title":{},"body":{"index.html":{}}}],["types:auto",{"_index":539,"title":{},"body":{"index.html":{}}}],["unexisting",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":116,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{}}}],["update",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":568,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":413,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":124,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"changelog.html":{}}}],["user(login",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.repositories.nodes?.filter(repo",{"_index":289,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["user.toprepositories.nodes?.filter(repo",{"_index":303,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["user.ts",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs",{"_index":276,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":112,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"miscellaneous/variables.html":{}}}],["userpat",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecard",{"_index":282,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos",{"_index":279,"title":{},"body":{"injectables/SocialCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":221,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["utc:hh:mm:ss.l",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":118,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":143,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":430,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":555,"title":{},"body":{"index.html":{}}}],["visual",{"_index":561,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":559,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":566,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":614,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":609,"title":{},"body":{"license.html":{}}}],["web",{"_index":161,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":627,"title":{},"body":{"license.html":{}}}],["without",{"_index":585,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":570,"title":{},"body":{"index.html":{}}}],["youtube",{"_index":557,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nSocialCardModule\n\nSocialCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSocialCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SocialCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport { SocialCardModule } from \"./social-card/social-card.module\";\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        ApiConfig,\n        GitHubConfig,\n      ],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    SocialCardModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_GithubModule_exports\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SocialCardController.html":{"url":"controllers/SocialCardController.html","title":"controller - SocialCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SocialCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile})@ApiNotFoundResponse({description: 'User not found'})\n                \n            \n\n            \n                \n                    Defined in src/social-card/social-card.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, Param, StreamableFile } from \"@nestjs/common\";\nimport { ApiNotFoundResponse, ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\nimport { SocialCardService } from \"./social-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class SocialCardController {\n  constructor (\n    private readonly socialCardService: SocialCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n  ): Promise {\n    const image = await this.socialCardService.getUserCard(username);\n\n    return new StreamableFile(image);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialCardModule.html":{"url":"modules/SocialCardModule.html","title":"module - SocialCardModule","body":"\n                   \n\n\n\n\n    Modules\n    SocialCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SocialCardModule\n\n\n\ncluster_SocialCardModule_imports\n\n\n\ncluster_SocialCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nSocialCardModule\n\nSocialCardModule\n\nSocialCardModule -->\n\nGithubModule->SocialCardModule\n\n\n\n\n\nSocialCardService\n\nSocialCardService\n\nSocialCardModule -->\n\nSocialCardService->SocialCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/social-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SocialCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SocialCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { SocialCardService } from \"./social-card.service\";\nimport { SocialCardController } from \"./social-card.controller\";\nimport { GithubModule } from \"../github/github.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule],\n  providers: [SocialCardService],\n  controllers: [SocialCardController],\n})\nexport class SocialCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialCardService.html":{"url":"injectables/SocialCardService.html","title":"injectable - SocialCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/social-card.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { readFile } from \"node:fs/promises\";\nimport { Resvg } from \"@resvg/resvg-js\";\n\nimport userLangs from \"./templates/user-langs\";\nimport userProfileRepos from \"./templates/user-profile-repos\";\nimport userProfileCard from \"./templates/user-profile-card\";\nimport { GithubService } from \"../github/github.service\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\n\n@Injectable()\nexport class SocialCardService {\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n  ) {}\n\n  async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      langs: Array.from(Object.values(langs)),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n    };\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/social-card.controller.ts\n            \n            controller\n            SocialCardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/social-card/social-card.service.ts\n            \n            injectable\n            SocialCardService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/social-card/templates/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.ts\n            \n            variable\n            userProfileCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n  \n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n  \n  \n  \n  \n  \n  \n  \n\n\n🚀 Live release environments\n\nDigital Ocean\nOpen Sauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\nnode>=18.15.0\nnpm>=9.6.3\ndocker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:dev📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nBoilerplate, changed mostly locally:\n# Global env\nAPI_HOST=0.0.0.0\nAPI_PORT=3003\nSERVICE_DOMAIN=opensauced.pizza\n\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-check In order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SocialCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_SocialCardModule\n\n\n\ncluster_SocialCardModule_providers\n\n\n\n\nSocialCardModule\n\nSocialCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSocialCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nSocialCardModule -->\n\nGithubModule->SocialCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nSocialCardService\n\nSocialCardService\n\nSocialCardModule -->\n\nSocialCardService->SocialCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.4\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCard   (src/.../user-profile-card.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-profile-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n    \n      \n          \n          \n              \n                  ${name}\n              \n          \n      \n    \n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & {\n  size: number,\n})[], totalCount = 0, joinLiteral = \"\") => langs.map(({ color, size }) => `\n     0 ? Math.round( size / totalCount * 100) : 100 / langs.length}%;\n      height: 11px;\n      background: ${color ?? \"#000\"};\n    \"/>`).join(joinLiteral)\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  \n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n\n  }\n\n  div {\n    display: flex;\n  }\n\n\n\n    \n        \n            \n\n            \n                ${name}\n            \n            \n                \n                    \n                \n            \n        \n    \n\n    \n        \n            \n                ${repos}\n            \n\n        \n\n        \n            \n                \n                    \n                        ${langs}\n                    \n                \n            \n        \n    \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[]): string => {\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(`${name.substring(0, 15).replace(/\\.+$/, \"\")}${name.length > 15 ? \"...\" : \"\"}`, `${String(avatarUrl)}&size=40`));\n\n  return `${repoList.slice(0, 4).join(\"\")}${repoList.length > 4\n    ? `\n          +${repoList.length - 2}\n      `\n    : ``}`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
