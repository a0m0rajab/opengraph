var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.684,1,1.672]],["body/modules/AppModule.html",[0,0.995,1,3.15,2,1.12,3,1.871,4,2.562,5,2.562,6,2.344,7,0.05,8,2.665,9,2.127,10,1.633,11,1.268,12,0.575,13,0.575,14,0.598,15,3.164,16,2.366,17,1.153,18,3.164,19,0.666,20,4.121,21,3.711,22,1.87,23,3.337,24,1.633,25,3.337,26,2.166,27,3.164,28,3.164,29,4.121,30,3.164,31,3.164,32,3.164,33,2.821,34,3.164,35,2.435,36,2.562,37,2.435,38,2.562,39,2.562,40,1.436,41,1.268,42,3.164,43,0.989,44,1.12,45,2.562,46,3.164,47,3.164,48,3.164,49,1.946,50,3.164,51,2.166,52,3.164,53,2.562,54,3.164,55,0.871,56,3.164,57,3.164,58,3.164,59,3.164,60,3.164,61,3.164,62,3.164,63,3.164,64,3.164,65,3.164,66,3.164,67,3.164,68,3.164,69,3.164,70,3.164,71,3.164,72,3.164,73,3.164,74,3.164,75,2.562,76,3.164,77,3.164,78,3.164,79,1.87,80,2.166,81,1.436,82,1.87,83,0.666,84,0.666,85,0.035,86,0.035]],["title/modules/GithubModule.html",[0,0.684,87,1.461]],["body/modules/GithubModule.html",[0,1.145,2,1.401,3,2.152,7,0.048,9,2.446,10,2.042,11,1.585,12,0.719,13,0.719,14,0.516,16,2.042,17,0.998,19,0.833,82,2.801,83,0.833,84,0.833,85,0.041,86,0.041,87,2.849,88,3.204,89,3.204,90,3.204,91,2.01,92,3.956,93,3.838,94,3.956]],["title/injectables/GithubService.html",[91,1.002,95,0.885]],["body/injectables/GithubService.html",[7,0.05,12,0.547,13,0.547,14,0.393,17,1.072,19,0.634,22,1.779,35,2.643,36,2.438,51,2.061,55,1.099,83,0.634,84,0.634,85,0.034,86,0.034,91,1.412,95,1.247,96,1.779,97,2.438,98,0.829,99,1.598,100,1.839,101,2.081,102,4.473,103,2.814,104,2.059,105,2.04,106,3.26,107,5.274,108,1.598,109,3.011,110,3.857,111,2.558,112,3.989,113,2.357,114,1.247,115,2.059,116,3.989,117,1.792,118,3.011,119,1.598,120,2.059,121,1.811,122,3.011,123,2.061,124,1.554,125,1.554,126,1.686,127,3.989,128,3.011,129,3.23,130,2.357,131,1.908,132,1.779,133,3.011,134,3.011,135,3.011,136,3.011,137,3.011,138,2.438,139,3.011,140,3.011,141,3.011,142,1.985,143,1.779,144,1.554,145,1.779,146,1.779,147,1.779,148,1.779,149,2.438,150,2.357,151,3.011,152,1.811,153,3.011,154,1.247,155,3.011,156,3.23,157,3.011,158,1.779,159,3.011,160,3.011,161,3.011]],["title/controllers/HealthController.html",[162,1.002,163,1.672]],["body/controllers/HealthController.html",[7,0.05,12,0.533,13,0.533,14,0.382,17,0.992,19,0.617,21,3.574,22,1.732,26,2.006,75,2.373,79,2.315,80,3.361,81,1.33,83,0.617,84,0.617,85,0.034,86,0.034,98,0.807,100,1.789,101,1.174,104,2.022,105,2.234,108,1.174,111,2.022,120,2.022,123,2.682,154,1.225,162,1.038,163,2.315,164,2.373,165,2.373,166,5.052,167,5.159,168,5.052,169,3.172,170,2.93,171,3.918,172,3.815,173,2.139,174,2.432,175,3.918,176,2.93,177,2.93,178,3.918,179,2.93,180,3.918,181,3.918,182,3.918,183,4.413,184,3.918,185,3.918,186,3.574,187,3.574,188,2.373,189,2.373,190,2.93,191,2.93,192,2.93,193,2.93,194,2.93,195,2.93,196,3.172,197,3.918,198,3.918,199,2.93,200,2.93,201,2.93,202,2.93,203,2.93,204,2.93,205,3.918,206,2.93,207,2.93,208,2.93,209,2.93,210,2.93,211,2.93,212,2.93,213,2.93,214,2.93,215,2.93,216,2.93,217,2.93,218,2.93,219,2.93,220,2.93,221,2.93]],["title/modules/HealthModule.html",[0,0.684,222,1.937]],["body/modules/HealthModule.html",[0,1.178,2,1.47,7,0.049,12,0.755,13,0.755,14,0.541,16,2.142,17,1.09,19,0.874,25,3.948,26,2.841,81,2.213,83,0.874,84,0.874,85,0.042,86,0.042,163,3.059,222,3.337,223,4.15,224,4.15]],["title/interfaces/RequiresUpdateMeta.html",[225,1.134,226,1.461]],["body/interfaces/RequiresUpdateMeta.html",[7,0.05,12,0.388,13,0.388,14,0.485,17,1.072,19,0.449,24,1.102,41,0.855,43,0.981,44,0.756,49,0.855,55,1.024,83,0.449,84,0.449,85,0.027,86,0.027,91,1.317,95,0.981,98,0.588,99,1.257,100,1.546,101,1.642,103,1.853,105,1.642,108,0.855,114,1.281,117,1.939,119,1.89,121,1.688,126,1.616,130,1.262,131,1.257,132,1.262,142,2.175,143,1.262,144,2.115,145,1.853,146,1.853,147,1.262,148,1.262,152,2.242,154,1.163,158,1.853,162,0.756,225,1.257,226,1.919,227,1.461,228,0.855,229,1.262,230,2.787,231,2.787,232,2.967,233,2.579,234,3.124,235,2.421,236,1.461,237,1.461,238,2.545,239,2.147,240,1.461,241,1.461,242,1.86,243,1.619,244,1.461,245,1.461,246,1.461,247,1.317,248,1.262,249,1.102,250,2.545,251,2.579,252,1.102,253,1.257,254,2.115,255,1.102,256,0.969,257,1.619,258,1.461,259,1.619,260,1.619,261,1.461,262,1.461,263,1.853,264,1.853,265,3.124,266,2.197,267,0.756,268,1.461,269,1.461,270,1.262,271,1.461,272,1.461,273,1.461,274,1.461,275,1.102,276,1.461,277,1.461,278,1.461,279,2.545,280,1.461,281,1.461,282,1.461,283,1.461,284,1.461,285,1.461,286,1.461,287,1.461,288,1.461,289,1.461,290,1.461,291,1.461,292,1.461,293,1.461,294,1.262,295,1.262,296,0.969,297,1.262,298,1.461,299,0.969,300,1.461,301,2.545,302,2.147,303,1.461,304,1.461,305,1.461,306,1.461,307,1.461,308,1.461,309,1.461,310,1.461,311,2.147,312,1.461,313,2.147,314,1.461,315,1.853,316,1.461,317,1.262,318,1.461,319,1.461,320,1.461,321,1.461,322,1.262,323,1.461,324,1.461,325,1.262,326,1.461,327,1.461,328,1.461,329,1.461,330,1.461,331,1.461,332,1.262,333,1.461,334,1.461,335,1.461,336,1.461,337,1.461,338,1.262,339,1.461,340,1.461,341,1.461,342,2.147,343,1.461,344,1.461,345,1.424,346,2.147,347,1.461,348,1.461,349,1.461,350,1.461,351,1.461,352,1.262,353,1.262,354,1.461,355,1.461,356,1.461,357,1.262,358,1.461,359,1.461]],["title/modules/S3FileStorageModule.html",[0,0.684,6,1.285]],["body/modules/S3FileStorageModule.html",[0,1.136,2,1.383,3,2.135,6,2.499,7,0.048,9,2.428,10,2.017,11,1.565,12,0.71,13,0.71,14,0.683,16,2.017,17,0.99,19,0.822,43,1.222,44,1.383,82,2.779,83,0.822,84,0.822,85,0.04,86,0.04,93,3.809,247,2.006,248,2.309,360,3.164,361,3.164,362,3.164,363,2.674,364,3.907]],["title/injectables/S3FileStorageService.html",[95,0.885,247,1.002]],["body/injectables/S3FileStorageService.html",[7,0.05,12,0.428,13,0.428,14,0.708,17,0.956,19,0.496,22,1.392,37,1.392,38,1.908,39,1.908,43,1.23,44,1.76,49,0.944,51,1.613,53,2.728,55,1.182,83,0.496,84,0.496,85,0.029,86,0.029,95,1.053,96,1.392,98,0.649,99,1.35,100,1.519,101,1.719,104,1.739,105,2.028,108,1.35,110,3.475,111,2.509,113,2.536,114,1.419,115,2.215,117,2.137,120,2.03,121,2.144,124,1.739,125,1.739,126,1.519,142,0.944,152,1.785,154,1.342,235,1.991,247,1.193,270,2.324,294,2.873,338,3.034,357,1.991,363,3.403,365,1.908,366,3.932,367,3.932,368,4.722,369,3.932,370,3.932,371,3.932,372,2.356,373,2.356,374,2.356,375,2.356,376,2.356,377,2.356,378,2.356,379,3.932,380,4.291,381,4.54,382,3.676,383,2.356,384,3.932,385,1.908,386,2.356,387,2.356,388,2.356,389,3.932,390,3.369,391,1.908,392,2.356,393,2.356,394,2.356,395,2.356,396,2.356,397,2.356,398,2.356,399,2.356,400,2.356,401,2.356,402,2.356,403,1.613,404,2.356,405,1.908,406,2.356,407,1.908,408,2.356,409,1.908,410,2.356,411,1.908,412,2.356,413,3.369,414,3.932,415,3.184,416,3.932,417,3.932,418,3.369,419,4.971,420,3.369,421,3.369,422,3.369,423,3.369,424,2.356,425,2.356,426,2.356,427,2.356,428,2.356]],["title/controllers/SocialCardController.html",[162,1.002,429,1.672]],["body/controllers/SocialCardController.html",[7,0.049,12,0.436,13,0.436,14,0.313,17,0.911,19,0.505,40,2.429,41,1.591,49,1.367,55,0.94,81,1.089,83,0.505,84,0.505,85,0.029,86,0.029,98,0.661,100,0.849,101,0.961,104,1.761,105,1.903,108,0.961,111,1.761,113,2.016,114,1.429,115,1.761,117,1.903,119,1.958,120,1.761,121,1.964,126,1.208,131,2.001,138,1.942,142,1.832,144,1.761,152,1.803,154,1.242,156,2.763,162,0.849,165,1.942,169,2.763,172,3.503,186,2.763,187,3.216,188,1.942,189,1.942,196,2.763,228,1.591,230,2.347,231,2.347,232,1.417,233,2.556,256,2.391,267,1.406,382,2.763,429,2.016,430,1.942,431,1.942,432,3.971,433,4.571,434,2.399,435,5.154,436,4.887,437,2.399,438,3.412,439,4.326,440,4.326,441,3.503,442,4.326,443,2.399,444,3.957,445,2.763,446,3.846,447,2.399,448,3.412,449,3.412,450,2.399,451,3.216,452,2.399,453,2.399,454,2.399,455,2.399,456,3.412,457,2.763,458,2.399,459,2.399,460,3.971,461,3.957,462,2.399,463,2.399,464,3.412,465,2.399,466,2.399,467,2.399,468,2.399,469,2.399,470,3.412,471,3.412,472,3.412,473,3.971,474,3.412,475,2.399,476,1.942,477,2.399,478,2.399,479,1.642,480,2.399,481,1.642,482,2.399,483,2.399,484,2.399,485,3.412,486,3.412,487,3.412,488,3.412,489,3.412,490,2.399,491,1.642,492,2.399,493,2.399,494,2.399,495,3.412,496,3.412,497,3.412,498,3.412,499,3.412,500,2.763,501,2.399,502,2.399,503,2.399,504,1.942,505,2.399,506,2.399]],["title/modules/SocialCardModule.html",[0,0.684,8,1.461]],["body/modules/SocialCardModule.html",[0,1.091,2,1.294,3,2.05,6,2.432,7,0.049,8,2.873,9,2.331,10,1.886,11,1.464,12,0.664,13,0.664,14,0.639,16,2.331,17,1.128,19,0.769,23,3.657,24,1.886,40,2.05,41,1.464,43,1.143,44,1.294,45,2.959,81,2.05,82,2.668,83,0.769,84,0.769,85,0.039,86,0.039,87,2.765,228,1.464,267,1.897,429,2.896,476,2.959,507,2.959,508,3.654,509,2.959,510,3.654,511,3.654,512,3.654]],["title/injectables/SocialCardService.html",[95,0.885,267,1.002]],["body/injectables/SocialCardService.html",[7,0.05,12,0.35,13,0.35,14,0.456,17,1.047,19,0.406,24,0.995,41,1.828,43,0.909,44,0.682,49,0.772,55,1.293,83,0.406,84,0.406,85,0.025,86,0.025,91,1.615,95,0.909,96,1.139,98,0.531,99,1.165,100,1.702,101,1.761,103,2.302,104,1.5,105,2.02,108,1.165,111,2.269,113,2.471,114,1.307,115,2.158,117,2.063,119,1.993,120,2.011,121,1.995,123,1.319,124,0.995,125,0.995,126,1.615,130,1.139,131,1.165,132,1.139,142,2.146,143,1.139,144,1.5,145,1.718,146,1.718,147,1.139,148,1.139,152,2.182,154,1.094,158,1.718,162,0.682,225,1.165,226,1.5,228,1.828,229,1.139,230,2.302,231,2.302,232,2.696,233,1.718,234,1.99,235,1.718,236,1.319,237,1.319,238,3.009,239,1.99,240,1.319,241,1.319,242,1.769,243,1.5,244,1.319,245,1.319,246,1.319,247,1.615,248,1.139,249,0.995,250,2.395,251,2.471,252,0.995,253,1.165,254,2.011,255,0.995,256,0.875,257,1.5,258,1.319,259,2.011,260,1.5,261,1.319,262,1.319,263,1.718,264,1.718,265,3.009,266,2.068,267,1.029,268,1.99,269,2.395,270,1.139,271,1.319,272,1.319,273,1.319,274,1.319,275,0.995,276,1.319,277,1.319,278,1.319,279,2.395,280,1.319,281,1.319,282,1.319,283,1.319,284,1.319,285,1.319,286,1.319,287,1.319,288,1.319,289,1.319,290,1.319,291,1.319,292,1.319,293,1.319,294,1.139,295,1.139,296,0.875,297,1.139,298,1.319,299,0.875,300,2.395,301,2.862,302,1.99,303,1.319,304,1.319,305,1.319,306,1.319,307,1.319,308,1.319,309,1.319,310,1.319,311,1.99,312,1.319,313,1.99,314,1.319,315,1.718,316,1.319,317,1.139,318,1.319,319,1.319,320,1.319,321,1.319,322,1.139,323,1.319,324,1.319,325,1.139,326,1.319,327,1.319,328,1.319,329,1.319,330,1.319,331,1.319,332,1.139,333,1.319,334,1.319,335,1.319,336,1.319,337,2.395,338,1.139,339,1.319,340,1.319,341,1.319,342,1.99,343,1.319,344,1.319,345,1.32,346,1.99,347,1.319,348,1.319,349,1.319,350,1.319,351,1.319,352,1.139,353,1.139,354,1.319,355,1.319,356,1.319,357,1.139,358,2.395,359,1.319,385,1.561,513,1.927,514,2.907,515,1.927,516,1.927,517,1.927,518,1.927,519,1.927,520,1.927,521,1.927,522,1.927]],["title/interfaces/UserCardData.html",[225,1.134,259,1.461]],["body/interfaces/UserCardData.html",[7,0.05,12,0.387,13,0.387,14,0.484,17,1.071,19,0.448,24,1.1,41,0.854,43,0.979,44,0.754,49,0.854,55,1.256,83,0.448,84,0.448,85,0.027,86,0.027,91,1.315,95,0.979,98,0.587,99,1.255,100,1.544,101,1.64,103,1.85,105,1.64,108,0.854,114,1.28,117,1.938,119,1.889,121,1.686,126,1.615,130,1.259,131,1.255,132,1.259,142,2.175,143,1.259,144,1.616,145,1.85,146,1.85,147,1.259,148,1.259,152,2.241,154,1.161,158,1.85,162,0.754,225,1.255,226,1.616,227,1.458,228,0.854,229,1.259,230,2.419,231,2.419,232,2.785,233,1.85,234,2.143,235,1.85,236,1.458,237,1.458,238,2.541,239,2.143,240,1.458,241,1.458,242,2.07,243,1.616,244,1.458,245,1.458,246,1.458,247,1.315,248,1.259,249,1.1,250,2.541,251,2.858,252,1.1,253,1.255,254,2.433,255,1.1,256,0.967,257,1.616,258,1.458,259,1.917,260,2.251,261,1.458,262,1.458,263,1.85,264,2.419,265,3.378,266,2.695,267,0.754,268,1.458,269,1.458,270,1.259,271,1.458,272,1.458,273,1.458,274,1.458,275,1.1,276,1.458,277,1.458,278,1.458,279,2.541,280,1.458,281,1.458,282,1.458,283,1.458,284,1.458,285,1.458,286,1.458,287,1.458,288,1.458,289,1.458,290,1.458,291,1.458,292,1.458,293,1.458,294,1.259,295,1.259,296,0.967,297,1.259,298,1.458,299,0.967,300,1.458,301,2.541,302,2.143,303,1.458,304,1.458,305,1.458,306,1.458,307,1.458,308,1.458,309,1.458,310,1.458,311,2.143,312,1.458,313,2.143,314,1.458,315,1.85,316,1.458,317,1.259,318,1.458,319,1.458,320,1.458,321,1.458,322,1.259,323,1.458,324,1.458,325,1.259,326,1.458,327,1.458,328,1.458,329,1.458,330,1.458,331,1.458,332,1.259,333,1.458,334,1.458,335,1.458,336,1.458,337,1.458,338,1.259,339,1.458,340,1.458,341,1.458,342,2.143,343,1.458,344,1.458,345,1.422,346,2.143,347,1.458,348,1.458,349,1.458,350,1.458,351,1.458,352,1.259,353,1.259,354,1.458,355,1.458,356,1.458,357,1.259,358,1.458,359,1.458]],["title/changelog.html",[523,1.63,524,1.63,525,1.928]],["body/changelog.html",[0,0.604,3,1.406,7,0.048,14,0.404,40,1.135,43,1.27,55,0.968,79,0.937,85,0.021,86,0.021,114,0.496,119,1.766,125,0.819,126,0.562,129,2.507,131,1.628,154,0.968,173,0.72,243,1.291,253,1.002,254,1.291,256,1.406,260,1.291,296,1.406,299,1.135,322,0.937,325,0.937,345,1.135,352,1.478,353,1.478,403,1.712,415,2.025,441,2.025,444,2.846,445,2.025,451,1.285,479,1.086,491,1.712,500,1.285,525,1.285,526,1.586,527,1.586,528,3.096,529,1.285,530,1.586,531,2.507,532,4.314,533,5.445,534,3.096,535,5.049,536,5.049,537,5.445,538,4.253,539,2.501,540,3.514,541,2.501,542,4.643,543,2.025,544,2.501,545,2.501,546,2.618,547,2.501,548,3.096,549,3.096,550,3.514,551,3.097,552,2.501,553,2.025,554,2.501,555,2.501,556,2.501,557,3.514,558,3.514,559,2.846,560,2.846,561,2.025,562,2.501,563,2.507,564,2.501,565,2.025,566,3.899,567,3.514,568,2.501,569,2.501,570,2.501,571,2.406,572,4.253,573,2.025,574,2.501,575,2.501,576,2.406,577,2.501,578,4.407,579,2.507,580,3.514,581,2.025,582,3.097,583,2.501,584,3.29,585,3.29,586,2.846,587,2.501,588,2.025,589,2.025,590,2.507,591,2.501,592,2.501,593,3.824,594,2.501,595,3.096,596,2.501,597,2.501,598,2.501,599,2.501,600,2.501,601,2.501,602,2.501,603,2.025,604,2.501,605,2.501,606,3.514,607,2.501,608,2.501,609,2.501,610,2.025,611,2.025,612,2.501,613,2.501,614,2.501,615,2.501,616,2.501,617,2.025,618,2.501,619,2.501,620,3.514,621,2.846,622,2.501,623,3.824,624,2.501,625,2.501,626,2.501,627,2.501,628,2.501,629,2.025,630,2.501,631,2.501,632,2.501,633,3.514,634,2.501,635,2.501,636,2.501,637,2.501,638,2.501,639,2.501,640,3.514,641,2.025,642,1.712,643,2.501,644,2.501,645,2.501,646,2.025,647,3.096,648,3.096,649,2.501,650,3.29,651,2.501,652,2.501,653,2.025,654,2.501,655,2.501,656,2.507,657,4.643,658,1.586,659,1.586,660,1.586,661,3.514,662,1.586,663,1.586,664,1.586,665,1.586,666,1.586,667,1.586,668,1.586,669,1.586,670,2.501,671,2.501,672,1.586,673,1.586,674,1.586,675,1.285,676,1.586,677,1.285,678,1.586,679,1.586,680,2.501,681,1.586,682,1.586,683,1.285,684,2.507,685,1.586,686,1.586,687,1.586,688,1.586,689,1.586,690,1.586,691,1.586,692,1.586,693,1.285,694,1.586,695,1.586,696,1.586,697,1.586,698,3.096,699,1.586,700,1.586,701,1.586,702,2.025,703,1.586,704,1.586,705,1.586,706,2.501,707,1.586,708,1.586,709,1.586,710,1.586,711,1.586,712,1.586,713,1.586,714,1.586,715,1.586,716,1.586,717,1.586,718,2.501,719,1.586,720,1.586,721,1.086,722,1.586,723,1.586,724,1.586,725,1.586,726,1.586,727,2.501,728,1.586,729,1.586,730,1.586,731,1.586,732,1.586,733,1.586,734,1.586,735,1.586,736,1.586,737,1.285,738,1.586,739,1.586,740,1.586,741,1.285,742,1.285,743,1.586,744,1.586,745,1.586,746,2.507,747,1.586,748,1.586,749,1.586,750,1.586,751,1.586,752,1.586,753,2.501,754,1.586,755,2.507,756,1.586,757,1.086,758,1.586,759,1.586,760,1.586,761,1.285,762,1.586,763,1.586,764,2.025,765,1.285,766,1.586,767,1.586,768,1.285,769,1.586,770,1.586,771,1.586,772,1.586,773,1.285,774,1.586,775,1.586,776,1.586,777,1.586,778,1.285,779,1.586,780,1.586]],["title/coverage.html",[781,3.099]],["body/coverage.html",[7,0.049,14,0.616,33,2.307,35,1.991,37,1.991,41,1.992,44,1.193,85,0.037,86,0.037,91,1.193,95,1.477,97,2.729,106,2.307,114,1.054,126,1.193,162,1.52,163,1.991,164,2.729,225,1.72,226,1.74,228,2.185,229,2.791,247,1.193,249,1.74,252,1.74,253,1.72,255,1.74,257,1.74,259,1.74,267,1.193,275,2.92,363,2.307,365,2.729,429,1.991,430,2.729,571,2.307,642,2.307,781,2.729,782,3.37,783,3.37,784,2.729,785,4.415,786,5.494,787,2.729,788,2.729,789,2.729,790,3.37,791,2.729,792,2.729,793,4.292,794,2.729,795,3.37,796,2.729,797,3.37,798,4.292,799,3.37,800,2.729,801,2.729,802,2.729,803,2.729,804,3.824,805,2.729,806,2.729,807,2.729,808,3.37,809,3.37]],["title/miscellaneous/functions.html",[721,2.323,810,1.407]],["body/miscellaneous/functions.html",[7,0.043,85,0.043,86,0.043,98,1.21,721,3.008,794,3.559,796,4.292,810,2.597,811,4.395]],["title/index.html",[98,0.656,523,1.63,524,1.63]],["body/index.html",[7,0.047,11,1.001,13,0.454,14,0.326,40,1.594,43,0.781,49,1.001,55,0.688,79,1.476,80,3.015,85,0.03,86,0.03,100,0.885,115,1.29,124,1.813,131,1.407,150,2.743,173,2.185,174,2.274,225,1.001,242,1.594,253,1.001,295,1.476,296,2.107,297,2.4,299,1.594,391,2.023,431,2.023,457,2.023,479,3.015,481,1.71,529,2.844,546,1.71,553,2.023,559,2.023,560,3.567,561,2.023,563,2.844,565,2.023,566,2.844,573,2.023,576,3.295,579,2.023,581,2.023,582,3.288,584,2.023,585,2.023,586,2.023,588,2.023,589,3.288,590,2.023,603,2.844,611,2.023,621,2.023,629,2.844,641,2.023,646,2.023,650,3.288,653,3.567,675,2.023,693,2.023,702,2.023,737,2.023,761,3.288,764,3.288,765,2.023,773,3.288,778,2.844,785,2.023,812,2.404,813,2.023,814,2.498,815,3.567,816,2.498,817,2.498,818,3.512,819,2.498,820,3.512,821,2.498,822,2.498,823,2.498,824,4.061,825,5.305,826,3.512,827,3.758,828,2.023,829,2.498,830,2.498,831,2.498,832,2.498,833,2.498,834,2.498,835,2.498,836,5.047,837,2.498,838,2.498,839,2.023,840,2.023,841,2.023,842,2.498,843,3.288,844,2.498,845,3.512,846,2.023,847,2.498,848,2.498,849,2.498,850,2.498,851,3.512,852,2.498,853,2.498,854,2.498,855,2.498,856,2.498,857,2.498,858,2.498,859,2.498,860,2.498,861,2.498,862,2.498,863,2.498,864,2.498,865,2.498,866,2.498,867,2.498,868,2.498,869,2.498,870,2.498,871,2.498,872,2.498,873,2.498,874,2.498,875,2.498,876,2.498,877,2.498,878,2.498,879,2.498,880,2.498,881,2.498,882,2.498,883,2.498,884,2.498,885,2.498,886,3.512,887,2.498,888,3.512,889,2.498,890,3.512,891,2.498,892,2.844,893,2.498,894,2.498,895,2.498,896,2.498,897,2.498,898,2.498,899,2.498,900,2.498,901,2.498,902,2.498,903,2.498,904,2.498,905,2.498,906,2.498,907,2.498,908,2.498,909,3.512,910,2.498,911,4.061,912,2.498,913,2.498,914,2.498,915,2.498,916,2.498,917,2.498,918,2.498,919,2.498,920,2.498,921,2.498,922,2.844,923,2.498,924,2.498,925,3.512,926,3.512,927,2.498,928,2.023,929,3.512,930,2.498,931,2.498,932,2.498,933,2.498,934,2.498,935,2.498,936,2.498,937,2.498,938,2.498,939,2.498,940,2.498,941,2.498,942,2.498,943,2.498,944,2.498,945,3.512,946,2.498,947,2.498,948,2.498,949,2.498,950,2.498,951,2.498,952,2.498,953,2.498,954,2.498,955,1.476,956,1.71]],["title/license.html",[523,1.63,524,1.63,955,1.407]],["body/license.html",[7,0.039,11,1.467,85,0.039,86,0.039,173,1.662,174,1.89,299,2.052,532,2.965,571,2.506,827,2.965,828,4.479,839,3.661,846,3.972,928,3.661,955,2.163,956,2.506,957,4.905,958,3.661,959,4.521,960,3.661,961,3.661,962,3.661,963,3.661,964,3.661,965,3.661,966,3.661,967,3.661,968,3.661,969,3.661,970,3.661,971,3.661,972,3.661,973,3.661,974,3.661,975,3.661,976,3.661,977,3.661,978,3.661,979,4.521,980,3.661,981,3.661,982,3.661,983,3.661,984,3.661,985,3.661,986,4.521,987,4.521,988,3.661,989,3.661,990,3.661,991,3.661,992,3.661,993,3.661,994,3.661,995,3.661,996,3.661,997,3.661,998,3.661,999,3.661,1000,3.661,1001,2.965,1002,3.661,1003,3.661,1004,3.661,1005,3.661,1006,3.661,1007,3.661,1008,3.661,1009,3.661,1010,3.661,1011,3.661,1012,3.661,1013,3.661,1014,3.661,1015,3.661,1016,3.661,1017,3.661]],["title/modules.html",[2,1.355]],["body/modules.html",[1,2.497,2,1.496,6,1.918,7,0.042,8,2.181,85,0.042,86,0.042,87,2.181,222,2.892,315,3.175,1018,5.373,1019,5.373,1020,5.472,1021,4.225,1022,4.225]],["title/overview.html",[1023,3.099]],["body/overview.html",[1,3.189,2,1.333,3,2.088,4,3.049,5,3.049,6,2.481,7,0.048,8,2.868,9,2.374,10,1.943,11,1.509,81,1.709,85,0.039,86,0.039,87,2.785,88,3.049,89,3.049,90,3.049,91,1.935,96,2.225,227,2.577,247,1.935,267,1.758,345,1.709,360,3.049,361,3.049,362,3.049,507,3.049,509,3.049,757,2.577,1023,3.049,1024,3.724]],["title/properties.html",[99,1.36,684,1.928]],["body/properties.html",[7,0.048,40,1.868,85,0.042,86,0.042,99,1.648,173,1.868,174,2.123,242,1.868,256,1.868,461,3.331,531,3.331,768,3.331,812,2.816,813,3.331,955,2.431,956,2.816,1001,3.331,1025,4.114,1026,4.114,1027,4.114,1028,4.114,1029,4.85,1030,4.114,1031,4.114,1032,4.114,1033,4.114,1034,4.114,1035,4.114,1036,4.114,1037,4.114,1038,4.114]],["title/miscellaneous/variables.html",[150,2.006,810,1.407]],["body/miscellaneous/variables.html",[7,0.05,12,0.194,33,1.24,35,1.07,37,1.07,55,1.207,85,0.016,86,0.016,98,0.295,106,1.24,114,0.334,117,1.677,119,1.111,124,2.029,125,2.029,142,0.944,149,1.466,150,1.07,154,0.566,173,0.485,174,0.935,228,1.243,242,0.485,243,0.552,249,0.935,251,1.638,252,0.935,253,1.111,254,1.216,255,0.935,257,0.935,260,1.739,263,1.99,264,0.632,266,2.121,275,2.215,296,0.485,317,1.07,332,2.535,345,1.948,403,0.732,405,0.866,407,3.549,409,0.866,411,0.866,446,0.866,481,1.24,491,1.898,504,0.866,543,1.466,546,0.732,551,3.474,576,0.732,610,3.474,617,1.907,642,1.24,656,3.779,677,1.907,683,0.866,741,0.866,742,0.866,746,0.866,755,0.866,757,3,784,0.866,787,0.866,788,1.466,789,0.866,791,0.866,792,1.466,800,0.866,801,1.466,802,1.466,803,0.866,804,1.907,805,1.466,806,1.466,807,1.466,810,0.632,812,1.24,815,0.866,840,0.866,841,0.866,843,0.866,892,0.866,922,0.866,1024,3.549,1039,1.069,1040,1.069,1041,1.069,1042,1.069,1043,1.069,1044,1.069,1045,2.355,1046,1.069,1047,1.069,1048,1.069,1049,1.069,1050,1.069,1051,1.069,1052,1.069,1053,1.069,1054,1.069,1055,1.069,1056,1.069,1057,1.069,1058,1.069,1059,1.069,1060,1.069,1061,1.069,1062,3.589,1063,1.069,1064,1.069,1065,1.069,1066,1.069,1067,1.069,1068,1.069,1069,1.069,1070,1.069,1071,5.232,1072,1.069,1073,1.069,1074,1.069,1075,1.069,1076,1.069,1077,1.069,1078,1.069,1079,1.069,1080,1.069,1081,1.069,1082,1.069,1083,1.069,1084,1.069,1085,1.069,1086,1.069,1087,2.772,1088,1.069,1089,1.069,1090,1.069,1091,1.069,1092,1.069,1093,1.069,1094,1.069,1095,1.069,1096,1.069,1097,1.069,1098,1.069,1099,1.069,1100,1.069,1101,1.069,1102,1.069,1103,1.069,1104,1.069,1105,1.069,1106,1.069,1107,1.069,1108,1.069,1109,1.069,1110,1.069,1111,1.069,1112,1.069,1113,1.069,1114,1.069,1115,1.069,1116,1.069,1117,1.069,1118,1.069,1119,1.811,1120,1.069,1121,2.772,1122,2.772,1123,1.069,1124,2.772,1125,1.069,1126,2.772,1127,1.069,1128,1.069,1129,1.069,1130,1.069,1131,1.069,1132,1.069,1133,1.069,1134,1.811,1135,2.355,1136,1.811,1137,1.069,1138,1.069,1139,1.069,1140,1.069,1141,2.772,1142,1.811,1143,1.069,1144,1.069,1145,1.811,1146,1.069,1147,1.069,1148,1.069,1149,1.069,1150,1.069,1151,1.069,1152,1.069,1153,1.069,1154,1.069,1155,1.069,1156,1.069,1157,1.069,1158,1.069,1159,1.811,1160,1.811,1161,1.811,1162,1.069,1163,1.811,1164,1.069,1165,1.069,1166,1.069,1167,1.069,1168,1.811,1169,2.772,1170,1.811,1171,2.355,1172,1.811,1173,1.811,1174,1.811,1175,1.811,1176,1.811,1177,1.811,1178,3.101,1179,1.069,1180,2.355,1181,2.355,1182,1.811,1183,1.811,1184,1.069,1185,1.811,1186,1.069,1187,1.069,1188,1.069,1189,1.069,1190,1.069,1191,2.772,1192,4.383,1193,2.355,1194,2.772,1195,3.101,1196,1.069,1197,1.811,1198,3.368,1199,1.069,1200,2.355,1201,4.383,1202,1.069,1203,1.811,1204,2.772,1205,1.069,1206,2.355,1207,4.29,1208,1.811,1209,1.069,1210,1.811,1211,1.811,1212,1.069,1213,4.29,1214,1.069,1215,1.069,1216,1.069,1217,3.368,1218,1.069,1219,1.069,1220,1.069,1221,1.069,1222,4.29,1223,1.811,1224,1.069,1225,1.811,1226,3.101,1227,1.069,1228,1.069,1229,1.069,1230,1.069,1231,1.811,1232,1.069,1233,1.069,1234,1.069,1235,1.069,1236,1.069,1237,1.069,1238,1.069,1239,1.069,1240,2.772,1241,1.069,1242,1.069,1243,1.069,1244,1.069,1245,1.069,1246,1.069,1247,1.811,1248,1.069,1249,1.069,1250,1.069,1251,1.069,1252,1.811,1253,1.069,1254,1.069,1255,2.355,1256,1.069,1257,1.069,1258,1.069,1259,1.069,1260,1.069,1261,4.539,1262,1.811,1263,1.069,1264,1.069,1265,3.101,1266,1.069,1267,1.069,1268,1.069,1269,1.069,1270,1.069,1271,1.069,1272,3.368,1273,3.774,1274,2.355,1275,1.069,1276,1.069,1277,1.811,1278,1.069,1279,1.811,1280,1.069,1281,1.811,1282,1.069,1283,1.069,1284,1.069,1285,1.069,1286,1.069,1287,1.069,1288,1.069,1289,1.069,1290,1.069,1291,2.772,1292,1.069,1293,1.069,1294,1.811,1295,2.772,1296,1.811,1297,1.069,1298,2.772,1299,1.811,1300,1.069,1301,1.811,1302,1.069,1303,1.069,1304,1.811,1305,1.069,1306,1.069,1307,1.811,1308,1.069,1309,3.589,1310,1.811,1311,1.811,1312,1.069,1313,1.811,1314,1.811,1315,1.069,1316,1.069,1317,1.069,1318,1.811,1319,1.069,1320,1.811,1321,1.811,1322,1.069,1323,1.069,1324,1.069,1325,1.069,1326,1.811,1327,1.069,1328,1.069,1329,1.069,1330,1.069,1331,1.811,1332,1.069,1333,1.069,1334,1.069,1335,1.069,1336,3.368,1337,1.069,1338,1.069,1339,1.811,1340,1.069,1341,1.069,1342,1.069,1343,1.069,1344,1.069,1345,1.069,1346,1.069,1347,1.069,1348,1.069,1349,1.811,1350,1.069,1351,1.069,1352,1.069,1353,1.069,1354,1.069,1355,1.069,1356,1.069,1357,1.069,1358,1.069,1359,1.069,1360,1.069,1361,1.811,1362,1.069,1363,1.069,1364,1.069,1365,1.069,1366,1.069,1367,1.069,1368,1.069,1369,1.069,1370,1.069,1371,1.069,1372,1.069,1373,1.069,1374,1.069,1375,1.069,1376,1.069,1377,1.069,1378,1.069,1379,2.355,1380,1.069,1381,2.772,1382,1.811,1383,1.069,1384,1.069,1385,1.069,1386,1.069,1387,1.069,1388,1.069,1389,1.069,1390,1.069,1391,1.069,1392,1.069,1393,1.069,1394,1.069,1395,1.069,1396,1.069,1397,1.069,1398,1.069,1399,1.069,1400,1.069,1401,1.069,1402,1.069,1403,1.069,1404,1.069,1405,1.069,1406,1.069,1407,1.069,1408,1.069,1409,1.069,1410,1.069,1411,1.069,1412,1.069,1413,1.069,1414,1.069,1415,1.069,1416,1.069,1417,1.069,1418,1.069,1419,1.069,1420,1.811,1421,1.069,1422,1.069,1423,1.069,1424,1.069,1425,1.811,1426,1.069,1427,1.069,1428,1.069,1429,1.069,1430,1.069,1431,1.069,1432,1.069,1433,1.069,1434,1.069,1435,1.069,1436,1.069,1437,1.069,1438,1.069,1439,1.069,1440,1.069,1441,1.069,1442,1.069,1443,1.069,1444,1.811,1445,1.069,1446,1.069,1447,2.772,1448,1.069,1449,1.069,1450,1.069,1451,1.069,1452,1.069,1453,1.069,1454,1.069,1455,1.069,1456,1.069,1457,1.069,1458,1.069,1459,1.069,1460,1.069,1461,1.069,1462,1.069,1463,1.069,1464,1.069,1465,1.811,1466,1.069,1467,2.355,1468,1.069,1469,1.069,1470,1.069,1471,1.069,1472,1.069,1473,1.069,1474,1.069,1475,1.069,1476,1.069,1477,1.069,1478,1.069,1479,1.069,1480,1.069,1481,1.069,1482,1.069,1483,1.069,1484,1.069,1485,1.069,1486,3.774,1487,1.069,1488,1.069,1489,1.069,1490,1.069,1491,1.069,1492,1.069,1493,1.069,1494,1.069,1495,1.069,1496,1.069,1497,1.069,1498,1.069,1499,1.811,1500,3.101,1501,1.069,1502,1.069,1503,1.069,1504,3.368,1505,1.811,1506,1.811,1507,1.811,1508,1.069,1509,1.811,1510,1.811,1511,1.069,1512,1.811,1513,1.069,1514,1.069,1515,1.069,1516,1.069,1517,1.069,1518,1.069,1519,1.811,1520,1.069,1521,1.069,1522,1.069,1523,1.069,1524,1.069,1525,1.069,1526,1.069,1527,1.069,1528,1.069,1529,1.069,1530,1.069,1531,1.069]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":275,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.016",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.026",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.028",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.055",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.057",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.075",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.083",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.099",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.109",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.126",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.139",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.157",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.182",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.19",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.244",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.265",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.412",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.467",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.472",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["0.506",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.593",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.615",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.927",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.934",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["076ace0",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["077e473",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["08cead1",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":407,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":656,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100px",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":551,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["11.0",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.7",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.0",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":318,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["1200px",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.7",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.1",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.6",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.9",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1440px",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1454cbb",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15).replace",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.3",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.8",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.0",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.7",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["16px",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.9",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["18a3e23",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["19.1",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19043fc",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1024,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":531,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.4",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.5",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":532,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21.9",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22px",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.0",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.1",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.8",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":331,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["235",{"_index":330,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["24",{"_index":543,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["24.0",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.3",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24bfb15",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.9",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.5",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.0",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e6cb05",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2xl",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":345,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":148,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["30.0",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":841,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3047cec",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["31.6",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.8",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.5",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.1",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.4",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.0",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36.0",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.0",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.1",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.6",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.1",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.7",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.0",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4).join(\"\")}${repolist.length",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.1",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.3",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.4",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":313,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["41.0",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.2",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.6",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425px",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.0",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.1",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.2",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.4",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.5",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.9",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.5",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.3",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.5",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.6",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4748b98",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["48.7",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.5",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a434e6",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["4c7d29a",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xl",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":757,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5.2",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.4",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.6",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.8",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.9",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50.0",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["51.1",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.1",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.3",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52b97ed",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["53.6",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55.2",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.1",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.3",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57.2",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5797c54",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["58.5",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5846c42",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["59.0",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.4",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5ae3704",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["5rem",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.8",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.0",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.2",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.6",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.2",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["627",{"_index":320,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["627px",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63.0",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.0",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.3",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64372f4",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["64px",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.0",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.3",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.8",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.1",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6893d90",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["68d0202",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["69.4",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.5",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6efe0e6",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":610,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["7.0",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.4",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.0",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.2",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.2",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["715e349",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72.0",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.2",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.3",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.0",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.3",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.9",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.4",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78.0",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["792992e",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["7c6f199",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["7d82c0d",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80px",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.2",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.7",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.9",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.3",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84.5",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.1",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.3",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.9",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8594508",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["86.5",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86.7",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.6",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.7",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.8",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8757519",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["88.2",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.3",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.6",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.9",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.0",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.7",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8b48513",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":332,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["9.0",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.2",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.8",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.2",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.3",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.1",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.4",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.8",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.9",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.2",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.4",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.6",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.0",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.2",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.4",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.5",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.9",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.0",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.1",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.7",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.8",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.0",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.2",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.3",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.8",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.0",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.4",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.5",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.8",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96px",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.0",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.1",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.3",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.6",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.9",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977df75",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["98.0",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.5",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.6",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.7",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.8",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.9",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.0",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.1",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.2",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.4",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.6",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.size",{"_index":289,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["a0e6d3f",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":985,"title":{},"body":{"license.html":{}}}],["access",{"_index":869,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":409,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":427,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":1011,"title":{},"body":{"license.html":{}}}],["actions",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":566,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":924,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":921,"title":{},"body":{"index.html":{}}}],["advised",{"_index":886,"title":{},"body":{"index.html":{}}}],["ago",{"_index":354,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["ahmed",{"_index":1036,"title":{},"body":{"properties.html":{}}}],["amz",{"_index":499,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["and/or",{"_index":977,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":895,"title":{},"body":{"index.html":{}}}],["api_domain=opengraph.opensauced.pizza",{"_index":904,"title":{},"body":{"index.html":{}}}],["api_host=0.0.0.0",{"_index":902,"title":{},"body":{"index.html":{}}}],["api_port=3005",{"_index":903,"title":{},"body":{"index.html":{}}}],["apiconfig",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":471,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["apinocontentresponse",{"_index":472,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["apinotfoundresponse",{"_index":473,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["apiokresponse",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apioperation",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apiresponse",{"_index":474,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["apitags",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["apitags(\"health",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"user",{"_index":478,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["app",{"_index":611,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":899,"title":{},"body":{"index.html":{}}}],["application",{"_index":761,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1015,"title":{},"body":{"license.html":{}}}],["array",{"_index":854,"title":{},"body":{"index.html":{}}}],["array.from(object.values(langs)).sort((a",{"_index":286,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["asc",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":693,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":966,"title":{},"body":{"license.html":{}}}],["async",{"_index":105,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["atwa",{"_index":1038,"title":{},"body":{"properties.html":{}}}],["author",{"_index":1035,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":139,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":1004,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1022,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":266,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":887,"title":{},"body":{"index.html":{}}}],["await",{"_index":152,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["awaits",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":442,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["aws",{"_index":391,"title":{},"body":{"injectables/S3FileStorageService.html":{},"index.html":{}}}],["axios",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":287,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["b.size",{"_index":288,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["b1f870c",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":328,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["backgroundimage",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["bee0e6e",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":915,"title":{},"body":{"index.html":{}}}],["being",{"_index":675,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":946,"title":{},"body":{"index.html":{}}}],["beta",{"_index":820,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["beta.opengraph.opensauced",{"_index":822,"title":{},"body":{"index.html":{}}}],["beta@digital",{"_index":821,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":829,"title":{},"body":{"index.html":{}}}],["bio",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":426,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["boilerplate",{"_index":579,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["boolean",{"_index":234,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["bootstrap",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxshadow",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":953,"title":{},"body":{"index.html":{}}}],["break",{"_index":913,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1020,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1018,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":415,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{}}}],["bucketname",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":379,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1031,"title":{},"body":{"properties.html":{}}}],["build",{"_index":650,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":958,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":441,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["cached",{"_index":889,"title":{},"body":{"index.html":{}}}],["caching",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":256,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"properties.html":{}}}],["card.controller",{"_index":511,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["card.controller.ts",{"_index":430,"title":{},"body":{"controllers/SocialCardController.html":{},"coverage.html":{}}}],["card.controller.ts:31",{"_index":466,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["card.controller.ts:55",{"_index":453,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["card.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":510,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["card.service",{"_index":476,"title":{},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{}}}],["card.service.ts",{"_index":229,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{}}}],["card.service.ts:113",{"_index":516,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:139",{"_index":520,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:36",{"_index":514,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:44",{"_index":522,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.service.ts:82",{"_index":518,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["card.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/social",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{}}}],["card/templates/repo",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/tailwind.config.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cards",{"_index":479,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{},"index.html":{}}}],["catch",{"_index":418,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["catching",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["ccc8a96",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["cdn",{"_index":589,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdn.opensauced.pizzaother",{"_index":894,"title":{},"body":{"index.html":{}}}],["cdncustomdomain",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":897,"title":{},"body":{"index.html":{}}}],["changed",{"_index":553,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":525,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":944,"title":{},"body":{"index.html":{}}}],["charge",{"_index":963,"title":{},"body":{"license.html":{}}}],["check",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["checkrequiresupdate",{"_index":337,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["checkrequiresupdate(username",{"_index":515,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["checkusersocialcard",{"_index":432,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["checkusersocialcard(username",{"_index":434,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["cito",{"_index":837,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1007,"title":{},"body":{"license.html":{}}}],["class",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["classes",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["clc",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":88,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":89,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":90,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":360,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":361,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":362,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_socialcardmodule",{"_index":507,"title":{},"body":{"modules/SocialCardModule.html":{},"overview.html":{}}}],["cluster_socialcardmodule_imports",{"_index":508,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["cluster_socialcardmodule_providers",{"_index":509,"title":{},"body":{"modules/SocialCardModule.html":{},"overview.html":{}}}],["code",{"_index":582,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codename",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":683,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["colors.util",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":911,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commits",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":916,"title":{},"body":{"index.html":{}}}],["community",{"_index":936,"title":{},"body":{"index.html":{}}}],["company",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":927,"title":{},"body":{"index.html":{}}}],["component",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["concept",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":984,"title":{},"body":{"license.html":{}}}],["config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":410,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":404,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":412,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":865,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":110,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":590,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configured",{"_index":900,"title":{},"body":{"index.html":{}}}],["connected",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1016,"title":{},"body":{"license.html":{}}}],["const",{"_index":142,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":108,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["constructor(config",{"_index":372,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":109,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":513,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["container",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":381,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1012,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":931,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":929,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["controller",{"_index":162,"title":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}},"body":{"controllers/HealthController.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"users",{"_index":477,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["controllers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":939,"title":{},"body":{"index.html":{}}}],["copies",{"_index":979,"title":{},"body":{"license.html":{}}}],["copy",{"_index":839,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":957,"title":{},"body":{"license.html":{}}}],["correct",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{}}}],["couple",{"_index":920,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":781,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":408,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["custom",{"_index":588,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customprops",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["d84015b",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1008,"title":{},"body":{"license.html":{}}}],["dark",{"_index":617,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":323,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["database",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":144,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["date((new",{"_index":146,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["date(string(repo?.pushedat",{"_index":274,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["date).getdate",{"_index":344,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["date).setdate((new",{"_index":343,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["date).setdate(today.getdate",{"_index":147,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["datesince",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":353,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{}}}],["dc9f3a4",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["dd096ca",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":968,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1017,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["defauls",{"_index":881,"title":{},"body":{"index.html":{}}}],["default",{"_index":124,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":896,"title":{},"body":{"index.html":{}}}],["defined",{"_index":111,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":765,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deployment",{"_index":563,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":461,"title":{},"body":{"controllers/SocialCardController.html":{},"properties.html":{}}}],["design",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":843,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev/usercards.ts",{"_index":857,"title":{},"body":{"index.html":{}}}],["dev:usercards",{"_index":853,"title":{},"body":{"index.html":{}}}],["developing",{"_index":850,"title":{},"body":{"index.html":{}}}],["development",{"_index":576,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devit",{"_index":885,"title":{},"body":{"index.html":{}}}],["differently",{"_index":901,"title":{},"body":{"index.html":{}}}],["digital",{"_index":584,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitalocean",{"_index":872,"title":{},"body":{"index.html":{}}}],["digitaloceanconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":298,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["direction",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discord.find",{"_index":940,"title":{},"body":{"index.html":{}}}],["disk",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_percentage=0.7",{"_index":907,"title":{},"body":{"index.html":{}}}],["disk_size",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size=100",{"_index":908,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":546,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/local",{"_index":859,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":975,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":741,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["do_spaces_",{"_index":878,"title":{},"body":{"index.html":{}}}],["do_spaces_access_key_id",{"_index":874,"title":{},"body":{"index.html":{}}}],["do_spaces_bucket_name=opengraph",{"_index":884,"title":{},"body":{"index.html":{}}}],["do_spaces_cdn_disabled=trueif",{"_index":891,"title":{},"body":{"index.html":{}}}],["do_spaces_endpoint=digitaloceanspaces.com",{"_index":882,"title":{},"body":{"index.html":{}}}],["do_spaces_region=sfo3",{"_index":883,"title":{},"body":{"index.html":{}}}],["do_spaces_secret_access_key=*******************************************ping",{"_index":875,"title":{},"body":{"index.html":{}}}],["do_spaces_subdomain=beta.opengraph",{"_index":893,"title":{},"body":{"index.html":{}}}],["docker",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":834,"title":{},"body":{"index.html":{}}}],["document",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":571,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":892,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":1025,"title":{},"body":{"properties.html":{}}}],["double",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["downgrade",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":923,"title":{},"body":{"index.html":{}}}],["during",{"_index":890,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["earlier",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":406,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge.node",{"_index":282,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["edge.size",{"_index":279,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["edge?.node.id",{"_index":278,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["edges",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":930,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":403,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["engineer",{"_index":863,"title":{},"body":{"index.html":{}}}],["engines",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["env.example",{"_index":861,"title":{},"body":{"index.html":{}}}],["environment",{"_index":629,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":573,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["error",{"_index":419,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":421,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":603,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["etl",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1003,"title":{},"body":{"license.html":{}}}],["exceeded",{"_index":484,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["exceeded'})@redirect",{"_index":465,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["except",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":350,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["explanation",{"_index":867,"title":{},"body":{"index.html":{}}}],["export",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["exports",{"_index":93,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":994,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraneous",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["extrenaous",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["f7db713",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":357,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["fastify",{"_index":475,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["fastifyreply",{"_index":436,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["fc9211c",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["fe44711",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":844,"title":{},"body":{"index.html":{}}}],["ff5f13",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":384,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":369,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":374,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":967,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":230,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["filter",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs.length",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":860,"title":{},"body":{"index.html":{}}}],["first",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":999,"title":{},"body":{"license.html":{}}}],["fix",{"_index":702,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":742,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":827,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":321,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["forbiddenexception",{"_index":236,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["forcepathstyle",{"_index":402,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":914,"title":{},"body":{"index.html":{}}}],["found",{"_index":451,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":463,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["free",{"_index":962,"title":{},"body":{"license.html":{}}}],["fs",{"_index":244,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["fs.readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":312,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["full",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":721,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":982,"title":{},"body":{"license.html":{}}}],["gaps",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1026,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatecardbuffer",{"_index":300,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["generatecardbuffer(username",{"_index":517,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["generated",{"_index":949,"title":{},"body":{"index.html":{}}}],["generates",{"_index":457,"title":{},"body":{"controllers/SocialCardController.html":{},"index.html":{}}}],["generateusersocialcard",{"_index":433,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generateusersocialcard(username",{"_index":454,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["generating",{"_index":852,"title":{},"body":{"index.html":{}}}],["generation",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":813,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:username",{"_index":480,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get(\"/:username/metadata",{"_index":494,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get(\"/service",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":455,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get('/:username/metadata')@apioperation({operationid",{"_index":437,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":366,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":370,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":376,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getoriginendpoint",{"_index":367,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["gets",{"_index":439,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["getting",{"_index":523,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":106,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":116,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":358,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["getusercard(username",{"_index":519,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getuserdata",{"_index":269,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["getuserdata(username",{"_index":521,"title":{},"body":{"injectables/SocialCardService.html":{}}}],["getusersocialcardmetadata",{"_index":438,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["gfonts",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1033,"title":{},"body":{"properties.html":{}}}],["github",{"_index":561,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":94,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/github.module",{"_index":512,"title":{},"body":{"modules/SocialCardModule.html":{}}}],["github/github.service",{"_index":246,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["github_pat_user=ghp_",{"_index":871,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":141,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":87,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":91,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":849,"title":{},"body":{"index.html":{}}}],["gql/get",{"_index":133,"title":{},"body":{"injectables/GithubService.html":{}}}],["gradient",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient(var",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":961,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1021,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":129,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":137,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":102,"title":{},"body":{"injectables/GithubService.html":{}}}],["grass",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":933,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":934,"title":{},"body":{"index.html":{}}}],["handler",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["hasfile",{"_index":231,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["hash",{"_index":338,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["hassponsorslisting",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["having",{"_index":847,"title":{},"body":{"index.html":{}}}],["head",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":467,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["header(\"content",{"_index":482,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["headers",{"_index":138,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{}}}],["headobjectcommand",{"_index":389,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":224,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":163,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":222,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["height",{"_index":319,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["here",{"_index":880,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":960,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1005,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1028,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(116",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(120",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(121",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(122",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(124",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(126",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(130",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(131",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(132",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(133",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(134",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(135",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(136",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(137",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(146",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(15",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(19",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(195",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(197",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(198",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(199",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(200",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(201",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(203",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(205",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(206",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(207",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(208",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(209",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(210",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(211",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(212",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(213",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(214",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(216",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(23",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(24",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(25",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(26",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(28",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(30",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(33",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(351",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(353",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(354",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(356",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(357",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(358",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(359",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(360",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(0",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(181",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(182",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(19",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(200",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(202",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(204",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(205",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(206",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(207",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(208",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(209",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(210",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(211",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(216",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":302,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["html(userprofilecard(avatarurl",{"_index":308,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["http",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{}}}],["https",{"_index":746,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/open",{"_index":1029,"title":{},"body":{"properties.html":{}}}],["httpservice",{"_index":238,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["httpstatus",{"_index":468,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["httpstatus.no_content",{"_index":495,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["httpstatus.not_found",{"_index":497,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["httpstatus.not_modified",{"_index":496,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["icon",{"_index":642,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":260,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":444,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["image'})@apinotfoundresponse({description",{"_index":462,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["image/png",{"_index":483,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":459,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["images",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":995,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["import(\"satori",{"_index":303,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["import(\"satori\")).default",{"_index":305,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["imports",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{}}}],["included",{"_index":988,"title":{},"body":{"license.html":{}}}],["including",{"_index":928,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":98,"title":{"index.html":{}},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":400,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":135,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":95,"title":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"overview.html":{}}}],["input",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insertion",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":855,"title":{},"body":{"index.html":{}}}],["install",{"_index":835,"title":{},"body":{"index.html":{}}}],["installed",{"_index":830,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":420,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":322,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":311,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["interface",{"_index":225,"title":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":227,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"overview.html":{}}}],["isbountyhunter",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issues",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":938,"title":{},"body":{"index.html":{}}}],["join(joinliteral",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":241,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["json.stringify(ratelimit",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":417,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keys",{"_index":877,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":1027,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":993,"title":{},"body":{"license.html":{}}}],["langrepos",{"_index":272,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["langrepos.map(repo",{"_index":276,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["langs",{"_index":251,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":281,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["langs[edge.node.id].size",{"_index":283,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["langtotal",{"_index":265,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["language",{"_index":243,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["languages(first",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":501,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["lastmodified",{"_index":232,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["lastmodified.toisostring",{"_index":351,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["lastmodified?.toisostring",{"_index":503,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["latest",{"_index":440,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["layout",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":352,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{}}}],["level",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1009,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1006,"title":{},"body":{"license.html":{}}}],["license",{"_index":955,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["light",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{},"controllers/SocialCardController.html":{}}}],["limitation",{"_index":970,"title":{},"body":{"license.html":{}}}],["limited",{"_index":996,"title":{},"body":{"license.html":{}}}],["link",{"_index":456,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["lins",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":909,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":912,"title":{},"body":{"index.html":{}}}],["little",{"_index":866,"title":{},"body":{"index.html":{}}}],["live",{"_index":559,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":296,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":845,"title":{},"body":{"index.html":{}}}],["location",{"_index":504,"title":{},"body":{"controllers/SocialCardController.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":103,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["logger(githubservice.name",{"_index":127,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":268,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["loggermodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":677,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["lowercase",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":831,"title":{},"body":{"index.html":{}}}],["main",{"_index":816,"title":{},"body":{"index.html":{}}}],["make",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.round(size",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_heap=200",{"_index":905,"title":{},"body":{"index.html":{}}}],["memory_rss",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss=3000",{"_index":906,"title":{},"body":{"index.html":{}}}],["memoryhealthindicator",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":998,"title":{},"body":{"license.html":{}}}],["merge",{"_index":973,"title":{},"body":{"license.html":{}}}],["message",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":500,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["metadata",{"_index":382,"title":{},"body":{"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{}}}],["method",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":104,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["min",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":810,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":922,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":956,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":502,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["modify",{"_index":972,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":1037,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":868,"title":{},"body":{"index.html":{}}}],["move",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":864,"title":{},"body":{"index.html":{}}}],["need",{"_index":826,"title":{},"body":{"index.html":{}}}],["needs",{"_index":448,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["needsupdate",{"_index":233,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["nestjs",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["nestjs/common/utils/cli",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["nestjs/terminus",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":126,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":814,"title":{},"body":{"index.html":{}}}],["nextjs",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":755,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":245,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["node:stream",{"_index":393,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":832,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1002,"title":{},"body":{"license.html":{}}}],["normal",{"_index":326,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["normal.woff",{"_index":314,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["notable",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":422,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notfoundexception",{"_index":237,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["notice",{"_index":986,"title":{},"body":{"license.html":{}}}],["npm",{"_index":836,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":833,"title":{},"body":{"index.html":{}}}],["null",{"_index":235,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["number",{"_index":264,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":280,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["obtaining",{"_index":965,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":585,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.app",{"_index":818,"title":{},"body":{"index.html":{}}}],["ocean.config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":950,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":130,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["one",{"_index":481,"title":{},"body":{"controllers/SocialCardController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["one'})@header('content",{"_index":458,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["opacity",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph",{"_index":812,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced",{"_index":819,"title":{},"body":{"index.html":{}}}],["opengraph.opensauced.pizza",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opengraph@digital",{"_index":817,"title":{},"body":{"index.html":{}}}],["opening",{"_index":917,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["optimize",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":115,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"index.html":{}}}],["options",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["orange",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":824,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":1014,"title":{},"body":{"license.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outputs",{"_index":858,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1023,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":942,"title":{},"body":{"index.html":{}}}],["owner",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":684,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":925,"title":{},"body":{"index.html":{}}}],["paginate",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":469,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["param(\"username",{"_index":485,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["partial",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1000,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":486,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["path",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["permission",{"_index":959,"title":{},"body":{"license.html":{}}}],["permit",{"_index":980,"title":{},"body":{"license.html":{}}}],["person",{"_index":964,"title":{},"body":{"license.html":{}}}],["persons",{"_index":981,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["pinneditems",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":932,"title":{},"body":{"index.html":{}}}],["png",{"_index":335,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["pngdata",{"_index":333,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["pngdata.aspng",{"_index":336,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["port",{"_index":840,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":990,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["prerequisites",{"_index":823,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":100,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"index.html":{}}}],["proceed",{"_index":935,"title":{},"body":{"index.html":{}}}],["process.env.ci",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":815,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":253,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":529,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":121,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["pronouns",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proof",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":99,"title":{"properties.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"properties.html":{}}}],["protocol",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":991,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{}}}],["prpat",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":294,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["publish",{"_index":974,"title":{},"body":{"license.html":{}}}],["pull",{"_index":918,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1001,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":390,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":910,"title":{},"body":{"index.html":{}}}],["query",{"_index":149,"title":{},"body":{"injectables/GithubService.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":937,"title":{},"body":{"index.html":{}}}],["radial",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":464,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["ratelimit",{"_index":107,"title":{},"body":{"injectables/GithubService.html":{}}}],["read",{"_index":428,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":380,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readme",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":101,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["realpercent",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":270,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["red",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":470,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["redirecting",{"_index":355,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["refactoring",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["regeneration",{"_index":449,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["region",{"_index":405,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":560,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":158,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["remove",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":641,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":277,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["repo?.isprivate",{"_index":291,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["repo?.owner.login",{"_index":292,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["repoiconwithname",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoiconwithname(`${name.substring(0",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos",{"_index":254,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repos.map",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.ts",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["repositories(first",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":242,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":948,"title":{},"body":{"index.html":{}}}],["request",{"_index":919,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":18,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":764,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requiresupdatemeta",{"_index":226,"title":{"interfaces/RequiresUpdateMeta.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{}}}],["res",{"_index":435,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["res.status(httpstatus.found).redirect(fileurl",{"_index":490,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["res.status(httpstatus.found).redirect(url",{"_index":493,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":424,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":425,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":969,"title":{},"body":{"license.html":{}}}],["results",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":239,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["resvg(svg",{"_index":327,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["resvg.render",{"_index":334,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["resvg/resvg",{"_index":240,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["return",{"_index":154,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":120,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{}}}],["returnval",{"_index":346,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["returnval.lastmodified",{"_index":348,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["returnval.needsupdate",{"_index":356,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["reverse",{"_index":862,"title":{},"body":{"index.html":{}}}],["rewrite",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["rewrites",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(17",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(181",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(237",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(238",{"_index":329,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["rights",{"_index":971,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":825,"title":{},"body":{"index.html":{}}}],["s3",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"index.html":{}}}],["s3client",{"_index":368,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":6,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":247,"title":{"injectables/S3FileStorageService.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizedusername",{"_index":487,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["satori",{"_index":304,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["satori(template",{"_index":316,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["sauced",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/maintainers",{"_index":876,"title":{},"body":{"index.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":1030,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":1034,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":1032,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":132,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["screens",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":297,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"index.html":{}}}],["sdk",{"_index":581,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sdk/client",{"_index":392,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":411,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":978,"title":{},"body":{"license.html":{}}}],["send",{"_index":506,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["sensibly",{"_index":879,"title":{},"body":{"index.html":{}}}],["server",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{}}}],["set",{"_index":773,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sfo3",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":987,"title":{},"body":{"license.html":{}}}],["singleline",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":263,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["social",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socialcardcontroller",{"_index":429,"title":{"controllers/SocialCardController.html":{}},"body":{"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"coverage.html":{}}}],["socialcardmodule",{"_index":8,"title":{"modules/SocialCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{},"modules.html":{},"overview.html":{}}}],["socialcardservice",{"_index":267,"title":{"injectables/SocialCardService.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"overview.html":{}}}],["software",{"_index":828,"title":{},"body":{"index.html":{},"license.html":{}}}],["sometimes",{"_index":898,"title":{},"body":{"index.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"index.html":{}}}],["spaces",{"_index":586,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["spacing",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["splitting",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tailwind.config.ts",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/github.module.ts",{"_index":92,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":97,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:11",{"_index":128,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:12",{"_index":112,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:21",{"_index":118,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:32",{"_index":122,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":164,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":223,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":363,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":228,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":838,"title":{},"body":{"index.html":{}}}],["start:devlocal",{"_index":842,"title":{},"body":{"index.html":{}}}],["started",{"_index":524,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":621,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":446,"title":{},"body":{"controllers/SocialCardController.html":{},"miscellaneous/variables.html":{}}}],["status(hasfile",{"_index":505,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["stops",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/SocialCardModule.html":{}}}],["storage.module.ts",{"_index":364,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":248,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["storage.service.ts",{"_index":365,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:10",{"_index":388,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:12",{"_index":387,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:14",{"_index":386,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:16",{"_index":373,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:33",{"_index":375,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:53",{"_index":377,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:74",{"_index":383,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"modules/SocialCardModule.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{}}}],["strategy",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["streamablefile",{"_index":460,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":293,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["style",{"_index":325,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{}}}],["styles",{"_index":565,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styling",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":983,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":976,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":989,"title":{},"body":{"license.html":{}}}],["suite",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{},"controllers/SocialCardController.html":{}}}],["superlative",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1019,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":315,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"modules.html":{}}}],["switch",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["tailwind",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["tailwindconfig",{"_index":257,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":307,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["templates/tailwind.config",{"_index":258,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["templates/user",{"_index":250,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["terminusmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":778,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test/local",{"_index":856,"title":{},"body":{"index.html":{}}}],["testing",{"_index":851,"title":{},"body":{"index.html":{}}}],["tests",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.config.bucketname",{"_index":416,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":399,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":398,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":395,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":394,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":397,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.getoriginendpoint",{"_index":396,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.getuserdata(username",{"_index":306,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["this.githubservice.getuser(username",{"_index":271,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["this.githubservice.ratelimit",{"_index":359,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["this.graphqlwithauth",{"_index":136,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":153,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug(`rate",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.logger.debug(`user",{"_index":349,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":401,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":414,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.fileexists(hash",{"_index":341,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["this.s3filestorageservice.getcdnendpoint()}${hash",{"_index":340,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["this.s3filestorageservice.getfilelastmodified(hash",{"_index":347,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["this.socialcardservice.checkrequiresupdate(sanitizedusername",{"_index":489,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["this.socialcardservice.getusercard(sanitizedusername",{"_index":492,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["thresholdpercent",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":873,"title":{},"body":{"index.html":{}}}],["throw",{"_index":423,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["today",{"_index":143,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["today30daysago",{"_index":145,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["today30daysago.toisostring",{"_index":151,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":342,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["token",{"_index":140,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":870,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1013,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"index.html":{}}}],["try",{"_index":413,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ts5",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["tw",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitterusername",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":114,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":134,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":653,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":926,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":452,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":450,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["undefined})@apiresponse({description",{"_index":447,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["unexisting",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":123,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/SocialCardService.html":{}}}],["up",{"_index":445,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{}}}],["update",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":952,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadfile",{"_index":371,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":378,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":491,"title":{},"body":{"controllers/SocialCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["usage",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":299,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":295,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"index.html":{}}}],["usefactory",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":131,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"index.html":{}}}],["user(login",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":284,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["user.name",{"_index":285,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["user.repositories.nodes?.filter(repo",{"_index":273,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["user.toprepositories.nodes?.filter(repo",{"_index":290,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["user.ts",{"_index":792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user[\"databaseid",{"_index":261,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["user[\"name",{"_index":262,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["usercarddata",{"_index":259,"title":{"interfaces/UserCardData.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{}}}],["userdata",{"_index":301,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["userlangs",{"_index":249,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":309,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["username",{"_index":119,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/SocialCardController.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinocontentresponse({description",{"_index":443,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["username.tolowercase",{"_index":488,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["userpat",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecard",{"_index":255,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos",{"_index":252,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos(repos",{"_index":310,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["users",{"_index":431,"title":{},"body":{"controllers/SocialCardController.html":{},"index.html":{}}}],["users/${string(username)}.png",{"_index":339,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["using",{"_index":888,"title":{},"body":{"index.html":{}}}],["utc:hh:mm:ss.l",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":125,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":785,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":150,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":768,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":941,"title":{},"body":{"index.html":{}}}],["visual",{"_index":947,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":945,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":951,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":997,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":992,"title":{},"body":{"license.html":{}}}],["way",{"_index":848,"title":{},"body":{"index.html":{}}}],["web",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":324,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{}}}],["whether",{"_index":1010,"title":{},"body":{"license.html":{}}}],["width",{"_index":317,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/SocialCardService.html":{},"interfaces/UserCardData.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":846,"title":{},"body":{"index.html":{},"license.html":{}}}],["workflow",{"_index":954,"title":{},"body":{"index.html":{}}}],["x",{"_index":498,"title":{},"body":{"controllers/SocialCardController.html":{}}}],["xs",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":385,"title":{},"body":{"injectables/S3FileStorageService.html":{},"injectables/SocialCardService.html":{}}}],["yoga",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":943,"title":{},"body":{"index.html":{}}}],["zero",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{},"modules/SocialCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nSocialCardModule\n\nSocialCardModule\n\nAppModule -->\n\nSocialCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            S3FileStorageModule\n                        \n                        \n                            SocialCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { SocialCardModule } from \"./social-card/social-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [\n        ApiConfig,\n        GitHubConfig,\n        DigitalOceanConfig,\n      ],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    SocialCardModule,\n    S3FileStorageModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequiresUpdateMeta.html":{"url":"interfaces/RequiresUpdateMeta.html","title":"interface - RequiresUpdateMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequiresUpdateMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            hasFile\n                                        \n                                \n                                \n                                        \n                                            lastModified\n                                        \n                                \n                                \n                                        \n                                            needsUpdate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasFile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastModified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastModified:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsUpdate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../github/github.service\";\nimport { S3FileStorageService } from \"../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"./templates/user-langs\";\nimport userProfileRepos from \"./templates/user-profile-repos\";\nimport userProfileCard from \"./templates/user-profile-card\";\nimport tailwindConfig from \"./templates/tailwind.config\";\n\ninterface RequiresUpdateMeta {\n  fileUrl: string,\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null,\n}\n\ninterface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n}\n\n\n@Injectable()\nexport class SocialCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCard(avatarUrl, username, userLangs(langs, langTotal), userProfileRepos(repos)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string, metadata?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n    metadata?: Record,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n        Metadata: metadata,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SocialCardController.html":{"url":"controllers/SocialCardController.html","title":"controller - SocialCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SocialCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserSocialCard\n                            \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/metadata')@ApiOperation({operationId: 'getUserSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :username'})@ApiNoContentResponse({description: 'User social card image is up to date', status: undefined})@ApiResponse({description: 'User social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'User social card image not found', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/social-card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/social-card.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\n\nimport { SocialCardService } from \"./social-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class SocialCardController {\n  constructor (\n    private readonly socialCardService: SocialCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate } = await this.socialCardService.checkRequiresUpdate(sanitizedUsername);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.socialCardService.getUserCard(sanitizedUsername);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:username/metadata\")\n  @ApiOperation({\n    operationId: \"getUserSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :username\",\n  })\n  @ApiNoContentResponse({ description: \"User social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"User social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"User social card image not found\", status: HttpStatus.NOT_FOUND })\n  async checkUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.socialCardService.checkRequiresUpdate(sanitizedUsername);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialCardModule.html":{"url":"modules/SocialCardModule.html","title":"module - SocialCardModule","body":"\n                   \n\n\n\n\n    Modules\n    SocialCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SocialCardModule\n\n\n\ncluster_SocialCardModule_imports\n\n\n\ncluster_SocialCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nSocialCardModule\n\nSocialCardModule\n\nSocialCardModule -->\n\nGithubModule->SocialCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nSocialCardModule -->\n\nS3FileStorageModule->SocialCardModule\n\n\n\n\n\nSocialCardService\n\nSocialCardService\n\nSocialCardModule -->\n\nSocialCardService->SocialCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/social-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SocialCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SocialCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { SocialCardService } from \"./social-card.service\";\nimport { SocialCardController } from \"./social-card.controller\";\nimport { GithubModule } from \"../github/github.module\";\nimport { S3FileStorageModule } from \"../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [SocialCardService],\n  controllers: [SocialCardController],\n})\nexport class SocialCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialCardService.html":{"url":"injectables/SocialCardService.html","title":"injectable - SocialCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Private\n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/social-card.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(username: string, userData?: UserCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UserCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/social-card.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/social-card.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../github/github.service\";\nimport { S3FileStorageService } from \"../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"./templates/user-langs\";\nimport userProfileRepos from \"./templates/user-profile-repos\";\nimport userProfileCard from \"./templates/user-profile-card\";\nimport tailwindConfig from \"./templates/tailwind.config\";\n\ninterface RequiresUpdateMeta {\n  fileUrl: string,\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null,\n}\n\ninterface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n}\n\n\n@Injectable()\nexport class SocialCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCard(avatarUrl, username, userLangs(langs, langTotal), userProfileRepos(repos)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCardData.html":{"url":"interfaces/UserCardData.html","title":"interface - UserCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/social-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     Repository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\n\nimport { GithubService } from \"../github/github.service\";\nimport { S3FileStorageService } from \"../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"./templates/user-langs\";\nimport userProfileRepos from \"./templates/user-profile-repos\";\nimport userProfileCard from \"./templates/user-profile-card\";\nimport tailwindConfig from \"./templates/tailwind.config\";\n\ninterface RequiresUpdateMeta {\n  fileUrl: string,\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null,\n}\n\ninterface UserCardData {\n  id: User[\"databaseId\"],\n  name: User[\"name\"],\n  langs: (Language & {\n    size: number,\n  })[],\n  langTotal: number,\n  repos: Repository[],\n  avatarUrl: string,\n}\n\n\n@Injectable()\nexport class SocialCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(repo => new Date(String(repo?.pushedAt)) > today30daysAgo) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal } = userData ? userData : await this.getUserData(username);\n\n    const template = html(userProfileCard(avatarUrl, username, userLangs(langs, langTotal), userProfileRepos(repos)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(`User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`);\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.0.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.2 (2023-04-19)\n🐛 Bug Fixes\n\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\n\n2.0.0 (2023-04-11)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\nimplement no-content verification strategy (6efe0e6)\noptimize image loading and return errors (7c6f199), closes #17\n\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\ncorrect dark logo render and make it static (dc9f3a4)\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect server generation environment (68d0202)\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\nupdate graphql types (f7db713)\n\n2.0.0-beta.3 (2023-04-11)\n🤖 Build System\n\nupdate graphql types (f7db713)\n\n2.0.0-beta.2 (2023-04-11)\n🐛 Bug Fixes\n\ncorrect dark logo render and make it static (dc9f3a4)\n\n2.0.0-beta.1 (2023-04-10)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🐛 Bug Fixes\n\ncorrect server generation environment (68d0202)\n\n1.2.0-beta.10 (2023-04-10)\n🐛 Bug Fixes\n\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\n\n1.2.0-beta.9 (2023-04-10)\n🍕 Features\n\noptimize image loading and return errors (7c6f199), closes #17\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\n\n1.2.0-beta.8 (2023-04-09)\n🍕 Features\n\nimplement no-content verification strategy (6efe0e6)\n\n🐛 Bug Fixes\n\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n1.2.0-beta.7 (2023-04-09)\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n1.2.0-beta.6 (2023-04-09)\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\n\n1.2.0-beta.5 (2023-04-09)\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n🐛 Bug Fixes\n\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\n\n1.2.0-beta.4 (2023-04-08)\n🍕 Features\n\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/social-card/social-card.controller.ts\n            \n            controller\n            SocialCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/social-card.service.ts\n            \n            injectable\n            SocialCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/social-card.service.ts\n            \n            interface\n            RequiresUpdateMeta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/social-card.service.ts\n            \n            interface\n            UserCardData\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/templates/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/tailwind.config.ts\n            \n            variable\n            tailwindConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.ts\n            \n            variable\n            userProfileCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n  \n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n  \n  \n  \n  \n  \n  \n  \n\n\n🚀 Live release environments\nProduction (main)\n\nopengraph@digital-ocean.app\nopengraph.opensauced\n\nBeta (beta)\n\nopengraph-beta@digital-ocean.app\nbeta.opengraph.opensauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\n node>=18.15.0\n npm>=9.6.3\n docker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:devLocal dev scripts\nThere are a few scripts that can be used to generate and test the social cards locally without having to deploy to the CDN. This is the way to go when developing & testing the interface for the social cards.\nGenerating user profile cards:\nnpm run local-dev:usercards\nGenerates user cards for all users in the test array inside test/local-dev/UserCards.ts and outputs them in dist/local-dev/ for testing.\n\n📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nOne can reverse engineer the named configs but some need a little explanation.\nBoilerplate, changed mostly locally:\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************\n\n# DigitalOcean Spaces through aws-sdk configuration\nDO_SPACES_ACCESS_KEY_ID=********************\nDO_SPACES_SECRET_ACCESS_KEY=*******************************************Ping @open-sauced/maintainers to get the dev CDN keys for the DO_SPACES_* variables.\nOther Digital Ocean S3 variables are sensibly set to default for local development, here are the defauls:\nDO_SPACES_ENDPOINT=digitaloceanspaces.com\nDO_SPACES_REGION=sfo3\nDO_SPACES_BUCKET_NAME=opengraph-devIt is also advised to set the following variables to true to avoid using the cached CDN during development:\nDO_SPACES_CDN_DISABLED=trueIf using a custom domain, you can set the following variable to the domain name:\nDO_SPACES_SUBDOMAIN=beta.opengraph-cdn.opensauced.pizzaOther API defaults you can change are not required in local development, but can sometimes appear configured differently for production:\nAPI_HOST=0.0.0.0\nAPI_PORT=3005\nAPI_DOMAIN=opengraph.opensauced.pizza\nMEMORY_HEAP=200\nMEMORY_RSS=3000\nDISK_PERCENTAGE=0.7\nDISK_SIZE=100🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-check In order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SocialCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_SocialCardModule\n\n\n\ncluster_SocialCardModule_providers\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\n\n\nSocialCardModule\n\nSocialCardModule\n\nSocialCardModule -->\n\nS3FileStorageModule->SocialCardModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nSocialCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nSocialCardModule -->\n\nGithubModule->SocialCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nSocialCardService\n\nSocialCardService\n\nSocialCardModule -->\n\nSocialCardService->SocialCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.1\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            tailwindConfig   (src/.../tailwind.config.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCard   (src/.../user-profile-card.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-profile-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n  \n    \n      \n      \n        \n          ${name}\n        \n      \n    \n  \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/tailwind.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tailwindConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  theme: {\n    extend: {\n      screens: {\n        xs: \"425px\",\n\n        // => @media (min-width: 425px) { ... }\n\n        \"2xl\": \"1440px\",\n\n        // => @media (min-width: 1440px) { ... }\n      },\n      blur: { \"4xl\": \"5rem\" },\n      spacing: {\n        \"6px\": \"6px\",\n        \"8px\": \"8px\",\n        \"12px\": \"12px\",\n        \"16px\": \"16px\",\n        \"32px\": \"32px\",\n        \"48px\": \"48px\",\n        \"96px\": \"96px\",\n        \"134px\": \"134px\",\n        \"627px\": \"627px\",\n        \"1200px\": \"1200px\",\n      },\n      colors: {\n        sauced: { orange: \"hsla(19, 100%, 50%, 1)\" },\n        gradient: {\n          \"dark-two\": \"hsl(26, 54%, 15%)\",\n          \"dark-one\": \"hsl(23, 75%, 5%)\",\n          \"orange-one\": \"\thsl(33, 100%, 50%)\",\n          \"orange-two\": \"\thsl(19, 100%, 50%)\",\n        },\n        light: {\n          slate: {\n            1: \"hsl(206, 30.0%, 98.8%)\",\n            2: \"hsl(210, 16.7%, 97.6%)\",\n            3: \"hsl(209, 13.3%, 95.3%)\",\n            4: \"hsl(209, 12.2%, 93.2%)\",\n            5: \"hsl(208, 11.7%, 91.1%)\",\n            6: \"hsl(208, 11.3%, 88.9%)\",\n            7: \"hsl(207, 11.1%, 85.9%)\",\n            8: \"hsl(205, 10.7%, 78.0%)\",\n            9: \"hsl(206, 6.0%, 56.1%)\",\n            10: \"hsl(206, 5.8%, 52.3%)\",\n            11: \"hsl(206, 6.0%, 43.5%)\",\n            12: \"hsl(206, 24.0%, 9.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(210, 92.6%, 26.5%, 0.016)\",\n            2: \"hsla(210, 87.7%, 16.0%, 0.028)\",\n            3: \"hsla(210, 98.8%, 14.4%, 0.055)\",\n            4: \"hsla(210, 94.1%, 11.1%, 0.075)\",\n            5: \"hsla(216, 91.1%, 10.9%, 0.099)\",\n            6: \"hsla(206, 96.4%, 11.3%, 0.126)\",\n            7: \"hsla(210, 99.1%, 10.1%, 0.157)\",\n            8: \"hsla(205, 96.5%, 10.0%, 0.244)\",\n            9: \"hsla(206, 98.8%, 5.9%, 0.467)\",\n            10: \"hsla(206, 99.6%, 5.4%, 0.506)\",\n            11: \"hsla(206, 97.0%, 4.8%, 0.593)\",\n            12: \"hsla(202, 97.0%, 2.4%, 0.934)\",\n          },\n          orange: {\n            1: \"hsl(24, 70.0%, 99.0%)\",\n            2: \"hsl(24, 83.3%, 97.6%)\",\n            3: \"hsl(24, 100%, 95.3%)\",\n            4: \"hsl(25, 100%, 92.2%)\",\n            5: \"hsl(25, 100%, 88.2%)\",\n            6: \"hsl(25, 100%, 82.8%)\",\n            7: \"hsl(24, 100%, 75.3%)\",\n            8: \"hsl(24, 94.5%, 64.3%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 46.5%)\",\n            11: \"hsl(24, 100%, 37.0%)\",\n            12: \"hsl(15, 60.0%, 17.0%)\",\n          },\n          blue: {\n            1: \"hsl(206, 100%, 99.2%)\",\n            2: \"hsl(210, 100%, 98.0%)\",\n            3: \"hsl(209, 100%, 96.5%)\",\n            4: \"hsl(210, 98.8%, 94.0%)\",\n            5: \"hsl(209, 95.0%, 90.1%)\",\n            6: \"hsl(209, 81.2%, 84.5%)\",\n            7: \"hsl(208, 77.5%, 76.9%)\",\n            8: \"hsl(206, 81.9%, 65.3%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(208, 100%, 47.3%)\",\n            11: \"hsl(211, 100%, 43.2%)\",\n            12: \"hsl(211, 100%, 15.0%)\",\n          },\n          red: {\n            1: \"hsl(359, 100%, 99.4%)\",\n            2: \"hsl(359, 100%, 98.6%)\",\n            3: \"hsl(360, 100%, 96.8%)\",\n            4: \"hsl(360, 97.9%, 94.8%)\",\n            5: \"hsl(360, 90.2%, 91.9%)\",\n            6: \"hsl(360, 81.7%, 87.8%)\",\n            7: \"hsl(359, 74.2%, 81.7%)\",\n            8: \"hsl(359, 69.5%, 74.3%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 69.4%, 55.2%)\",\n            11: \"hsl(358, 65.0%, 48.7%)\",\n            12: \"hsl(354, 50.0%, 14.6%)\",\n          },\n          grass: {\n            1: \"hsl(116, 50.0%, 98.9%)\",\n            2: \"hsl(120, 60.0%, 97.1%)\",\n            3: \"hsl(120, 53.6%, 94.8%)\",\n            4: \"hsl(121, 47.5%, 91.4%)\",\n            5: \"hsl(122, 42.6%, 86.5%)\",\n            6: \"hsl(124, 39.0%, 79.7%)\",\n            7: \"hsl(126, 37.1%, 70.2%)\",\n            8: \"hsl(131, 38.1%, 56.3%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(132, 43.1%, 42.2%)\",\n            11: \"hsl(133, 50.0%, 32.5%)\",\n            12: \"hsl(130, 30.0%, 14.9%)\",\n          },\n        },\n        dark: {\n          slate: {\n            1: \"hsl(200, 7.0%, 8.8%)\",\n            2: \"hsl(195, 7.1%, 11.0%)\",\n            3: \"hsl(197, 6.8%, 13.6%)\",\n            4: \"hsl(198, 6.6%, 15.8%)\",\n            5: \"hsl(199, 6.4%, 17.9%)\",\n            6: \"hsl(201, 6.2%, 20.5%)\",\n            7: \"hsl(203, 6.0%, 24.3%)\",\n            8: \"hsl(207, 5.6%, 31.6%)\",\n            9: \"hsl(206, 6.0%, 43.9%)\",\n            10: \"hsl(206, 5.2%, 49.5%)\",\n            11: \"hsl(206, 6.0%, 63.0%)\",\n            12: \"hsl(210, 6.0%, 93.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(0, 0%, 0%, 0)\",\n            2: \"hsla(181, 98.9%, 91.8%, 0.026)\",\n            3: \"hsla(182, 86.7%, 91.4%, 0.057)\",\n            4: \"hsla(209, 86.7%, 93.9%, 0.083)\",\n            5: \"hsla(200, 90.3%, 93.4%, 0.109)\",\n            6: \"hsla(209, 95.3%, 93.5%, 0.139)\",\n            7: \"hsla(204, 98.5%, 93.9%, 0.182)\",\n            8: \"hsla(209, 94.0%, 94.7%, 0.265)\",\n            9: \"hsla(207, 97.3%, 94.0%, 0.412)\",\n            10: \"hsla(209, 99.4%, 95.2%, 0.472)\",\n            11: \"hsla(208, 98.7%, 96.8%, 0.615)\",\n            12: \"hsla(211, 86.7%, 99.6%, 0.927)\",\n          },\n          orange: {\n            1: \"hsl(30, 70.0%, 7.2%)\",\n            2: \"hsl(28, 100%, 8.4%)\",\n            3: \"hsl(26, 91.1%, 11.6%)\",\n            4: \"hsl(25, 88.3%, 14.1%)\",\n            5: \"hsl(24, 87.6%, 16.6%)\",\n            6: \"hsl(24, 88.6%, 19.8%)\",\n            7: \"hsl(24, 92.4%, 24.0%)\",\n            8: \"hsl(25, 100%, 29.0%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 58.5%)\",\n            11: \"hsl(24, 100%, 62.2%)\",\n            12: \"hsl(24, 97.0%, 93.2%)\",\n          },\n          blue: {\n            1: \"hsl(212, 35.0%, 9.2%)\",\n            2: \"hsl(216, 50.0%, 11.8%)\",\n            3: \"hsl(214, 59.4%, 15.3%)\",\n            4: \"hsl(214, 65.8%, 17.9%)\",\n            5: \"hsl(213, 71.2%, 20.2%)\",\n            6: \"hsl(212, 77.4%, 23.1%)\",\n            7: \"hsl(211, 85.1%, 27.4%)\",\n            8: \"hsl(211, 89.7%, 34.1%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(209, 100%, 60.6%)\",\n            11: \"hsl(210, 100%, 66.1%)\",\n            12: \"hsl(206, 98.0%, 95.8%)\",\n          },\n          red: {\n            1: \"hsl(353, 23.0%, 9.8%)\",\n            2: \"hsl(357, 34.4%, 12.0%)\",\n            3: \"hsl(356, 43.4%, 16.4%)\",\n            4: \"hsl(356, 47.6%, 19.2%)\",\n            5: \"hsl(356, 51.1%, 21.9%)\",\n            6: \"hsl(356, 55.2%, 25.9%)\",\n            7: \"hsl(357, 60.2%, 31.8%)\",\n            8: \"hsl(358, 65.0%, 40.4%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 85.3%, 64.0%)\",\n            11: \"hsl(358, 100%, 69.5%)\",\n            12: \"hsl(351, 89.0%, 96.0%)\",\n          },\n          grass: {\n            1: \"hsl(146, 30.0%, 7.4%)\",\n            2: \"hsl(136, 33.3%, 8.8%)\",\n            3: \"hsl(137, 36.0%, 11.4%)\",\n            4: \"hsl(137, 37.6%, 13.7%)\",\n            5: \"hsl(136, 38.7%, 16.0%)\",\n            6: \"hsl(135, 39.6%, 19.1%)\",\n            7: \"hsl(134, 40.3%, 23.8%)\",\n            8: \"hsl(131, 40.1%, 30.8%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(131, 39.0%, 52.1%)\",\n            11: \"hsl(131, 43.0%, 57.2%)\",\n            12: \"hsl(137, 72.0%, 94.0%)\",\n          },\n        },\n      },\n      boxShadow: {\n        login: \"0px 64px 100px -80px #FF5F13, 0px 16px 56px rgba(181, 107, 72, 0.19)\",\n        superlative: \"0px 22px 24px -8px rgba(0, 0, 0, 0.05), 0px 4px 8px rgba(0, 0, 0, 0.1)\",\n        paginate: \"0px 1px 2px rgba(237, 95, 0, 0.05), 0px 1px 1px rgba(237, 95, 0, 0.05)\",\n        input: \"0px 1px 2px rgba(17, 24, 28, 0.05), 0px 1px 1px rgba(17, 24, 28, 0.05)\",\n      },\n      backgroundImage: { \"gradient-radial\": \"radial-gradient(var(--tw-gradient-stops))\" },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & { size: number })[], totalCount = 0, joinLiteral = \"\") => {\n  const filteredLangs = langs\n    .filter(({ size }) => size > 0 && !((size / totalCount) * 100  {\n      const realPercent = Math.round(size / totalCount * 100);\n\n      return ` 0 ? realPercent : 100 / filteredLangs.length}%\"/>`;\n    })\n    .join(joinLiteral);\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  \n    div {\n      display: flex;\n    }\n  \n\n  \n    \n      \n\n      \n        ${name}\n      \n\n      \n    \n\n    \n      \n        ${repos}\n      \n\n      \n        \n          ${langs}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[]): string => {\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(`${name.substring(0, 15).replace(/\\.+$/, \"\")}${name.length > 15 ? \"...\" : \"\"}`, `${String(avatarUrl)}&size=40`));\n\n  return `${repoList.slice(0, 4).join(\"\")}${repoList.length > 4\n    ? `+${repoList.length - 2}`\n    : ``}`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
